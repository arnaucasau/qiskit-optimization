Search.setIndex({"docnames": ["apidocs/qiskit_optimization", "apidocs/qiskit_optimization.algorithms", "apidocs/qiskit_optimization.algorithms.qrao", "apidocs/qiskit_optimization.applications", "apidocs/qiskit_optimization.converters", "apidocs/qiskit_optimization.problems", "apidocs/qiskit_optimization.translators", "explanations/index", "explanations/qrao", "getting_started", "index", "migration/01_migration_guide_to_v0.5", "migration/02_migration_guide_to_v0.6", "migration/index", "release_notes", "stubs/qiskit_optimization.QiskitOptimizationError", "stubs/qiskit_optimization.QuadraticProgram", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult", "stubs/qiskit_optimization.algorithms.ADMMOptimizer", "stubs/qiskit_optimization.algorithms.ADMMParameters", "stubs/qiskit_optimization.algorithms.ADMMState", "stubs/qiskit_optimization.algorithms.BaseAggregator", "stubs/qiskit_optimization.algorithms.CobylaOptimizer", "stubs/qiskit_optimization.algorithms.CplexOptimizer", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult", "stubs/qiskit_optimization.algorithms.GroverOptimizer", "stubs/qiskit_optimization.algorithms.GurobiOptimizer", "stubs/qiskit_optimization.algorithms.IntermediateResult", "stubs/qiskit_optimization.algorithms.MeanAggregator", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm", "stubs/qiskit_optimization.algorithms.OptimizationResult", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.ScipyMilpOptimizer", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer", "stubs/qiskit_optimization.algorithms.SolutionSample", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer", "stubs/qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier", "stubs/qiskit_optimization.algorithms.qrao.MagicRounding", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer", "stubs/qiskit_optimization.algorithms.qrao.RoundingContext", "stubs/qiskit_optimization.algorithms.qrao.RoundingResult", "stubs/qiskit_optimization.algorithms.qrao.RoundingScheme", "stubs/qiskit_optimization.algorithms.qrao.SemideterministicRounding", "stubs/qiskit_optimization.applications.BinPacking", "stubs/qiskit_optimization.applications.Clique", "stubs/qiskit_optimization.applications.ExactCover", "stubs/qiskit_optimization.applications.GraphOptimizationApplication", "stubs/qiskit_optimization.applications.GraphPartition", "stubs/qiskit_optimization.applications.Knapsack", "stubs/qiskit_optimization.applications.Maxcut", "stubs/qiskit_optimization.applications.NumberPartition", "stubs/qiskit_optimization.applications.OptimizationApplication", "stubs/qiskit_optimization.applications.SKModel", "stubs/qiskit_optimization.applications.SetPacking", "stubs/qiskit_optimization.applications.StableSet", "stubs/qiskit_optimization.applications.Tsp", "stubs/qiskit_optimization.applications.VehicleRouting", "stubs/qiskit_optimization.applications.VertexCover", "stubs/qiskit_optimization.converters.InequalityToEquality", "stubs/qiskit_optimization.converters.IntegerToBinary", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty", "stubs/qiskit_optimization.converters.MaximizeToMinimize", "stubs/qiskit_optimization.converters.MinimizeToMaximize", "stubs/qiskit_optimization.converters.QuadraticProgramConverter", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo", "stubs/qiskit_optimization.infinity.INFINITY", "stubs/qiskit_optimization.problems.Constraint", "stubs/qiskit_optimization.problems.LinearConstraint", "stubs/qiskit_optimization.problems.LinearExpression", "stubs/qiskit_optimization.problems.QuadraticConstraint", "stubs/qiskit_optimization.problems.QuadraticExpression", "stubs/qiskit_optimization.problems.QuadraticObjective", "stubs/qiskit_optimization.problems.QuadraticProgramElement", "stubs/qiskit_optimization.problems.Variable", "stubs/qiskit_optimization.translators.from_docplex_mp", "stubs/qiskit_optimization.translators.from_gurobipy", "stubs/qiskit_optimization.translators.from_ising", "stubs/qiskit_optimization.translators.to_docplex_mp", "stubs/qiskit_optimization.translators.to_gurobipy", "stubs/qiskit_optimization.translators.to_ising", "tutorials/01_quadratic_program", "tutorials/02_converters_for_quadratic_programs", "tutorials/03_minimum_eigen_optimizer", "tutorials/04_grover_optimizer", "tutorials/05_admm_optimizer", "tutorials/06_examples_max_cut_and_tsp", "tutorials/07_examples_vehicle_routing", "tutorials/08_cvar_optimization", "tutorials/09_application_classes", "tutorials/10_warm_start_qaoa", "tutorials/11_using_classical_optimization_solvers_and_models", "tutorials/12_quantum_random_access_optimizer", "tutorials/index"], "filenames": ["apidocs/qiskit_optimization.rst", "apidocs/qiskit_optimization.algorithms.rst", "apidocs/qiskit_optimization.algorithms.qrao.rst", "apidocs/qiskit_optimization.applications.rst", "apidocs/qiskit_optimization.converters.rst", "apidocs/qiskit_optimization.problems.rst", "apidocs/qiskit_optimization.translators.rst", "explanations/index.rst", "explanations/qrao.rst", "getting_started.rst", "index.rst", "migration/01_migration_guide_to_v0.5.rst", "migration/02_migration_guide_to_v0.6.rst", "migration/index.rst", "release_notes.rst", "stubs/qiskit_optimization.QiskitOptimizationError.rst", "stubs/qiskit_optimization.QuadraticProgram.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.rst", "stubs/qiskit_optimization.algorithms.ADMMParameters.rst", "stubs/qiskit_optimization.algorithms.ADMMState.rst", "stubs/qiskit_optimization.algorithms.BaseAggregator.rst", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.rst", "stubs/qiskit_optimization.algorithms.MeanAggregator.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.ScipyMilpOptimizer.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.rst", "stubs/qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier.rst", "stubs/qiskit_optimization.algorithms.qrao.MagicRounding.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingContext.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingResult.rst", "stubs/qiskit_optimization.algorithms.qrao.RoundingScheme.rst", "stubs/qiskit_optimization.algorithms.qrao.SemideterministicRounding.rst", "stubs/qiskit_optimization.applications.BinPacking.rst", "stubs/qiskit_optimization.applications.Clique.rst", "stubs/qiskit_optimization.applications.ExactCover.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.rst", "stubs/qiskit_optimization.applications.GraphPartition.rst", "stubs/qiskit_optimization.applications.Knapsack.rst", "stubs/qiskit_optimization.applications.Maxcut.rst", "stubs/qiskit_optimization.applications.NumberPartition.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.rst", "stubs/qiskit_optimization.applications.SKModel.rst", "stubs/qiskit_optimization.applications.SetPacking.rst", "stubs/qiskit_optimization.applications.StableSet.rst", "stubs/qiskit_optimization.applications.Tsp.rst", "stubs/qiskit_optimization.applications.VehicleRouting.rst", "stubs/qiskit_optimization.applications.VertexCover.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.rst", "stubs/qiskit_optimization.converters.IntegerToBinary.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.rst", "stubs/qiskit_optimization.converters.MaximizeToMinimize.rst", "stubs/qiskit_optimization.converters.MinimizeToMaximize.rst", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.rst", "stubs/qiskit_optimization.infinity.INFINITY.rst", "stubs/qiskit_optimization.problems.Constraint.rst", "stubs/qiskit_optimization.problems.LinearConstraint.rst", "stubs/qiskit_optimization.problems.LinearExpression.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.rst", "stubs/qiskit_optimization.problems.QuadraticProgramElement.rst", "stubs/qiskit_optimization.problems.Variable.rst", "stubs/qiskit_optimization.translators.from_docplex_mp.rst", "stubs/qiskit_optimization.translators.from_gurobipy.rst", "stubs/qiskit_optimization.translators.from_ising.rst", "stubs/qiskit_optimization.translators.to_docplex_mp.rst", "stubs/qiskit_optimization.translators.to_gurobipy.rst", "stubs/qiskit_optimization.translators.to_ising.rst", "tutorials/01_quadratic_program.ipynb", "tutorials/02_converters_for_quadratic_programs.ipynb", "tutorials/03_minimum_eigen_optimizer.ipynb", "tutorials/04_grover_optimizer.ipynb", "tutorials/05_admm_optimizer.ipynb", "tutorials/06_examples_max_cut_and_tsp.ipynb", "tutorials/07_examples_vehicle_routing.ipynb", "tutorials/08_cvar_optimization.ipynb", "tutorials/09_application_classes.ipynb", "tutorials/10_warm_start_qaoa.ipynb", "tutorials/11_using_classical_optimization_solvers_and_models.ipynb", "tutorials/12_quantum_random_access_optimizer.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Optimization API Reference", "Optimization algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms</span></code>)", "Quantum Random Access Optimization (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms.qrao</span></code>)", "Optimization applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.applications</span></code>)", "Optimization converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.converters</span></code>)", "Optimization problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.problems</span></code>)", "Quadratic program translators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.translators</span></code>)", "Explicaciones de Qiskit Optimization", "Antecedentes sobre la Optimizaci\u00f3n Cu\u00e1ntica de Acceso Aleatorio (Quantum Random Access Optimization): <em>Relajaciones cu\u00e1nticas, c\u00f3digos cu\u00e1nticos de acceso aleatorio, esquemas de redondeo</em>", "Primeros pasos", "Descripci\u00f3n general de Qiskit Optimization", "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization v0.5", "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization v0.6", "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization", "Notas de la Versi\u00f3n", "QiskitOptimizationError", "QuadraticProgram", "ADMMOptimizationResult", "ADMMOptimizer", "ADMMParameters", "ADMMState", "BaseAggregator", "CobylaOptimizer", "CplexOptimizer", "GoemansWilliamsonOptimizationResult", "GoemansWilliamsonOptimizer", "GroverOptimizationResult", "GroverOptimizer", "GurobiOptimizer", "IntermediateResult", "MeanAggregator", "MinimumEigenOptimizationResult", "MinimumEigenOptimizer", "MultiStartOptimizer", "OptimizationAlgorithm", "OptimizationResult", "OptimizationResultStatus", "RecursiveMinimumEigenOptimizationResult", "RecursiveMinimumEigenOptimizer", "ScipyMilpOptimizer", "SlsqpOptimizationResult", "SlsqpOptimizer", "SolutionSample", "WarmStartQAOAFactory", "WarmStartQAOAOptimizer", "EncodingCommutationVerifier", "MagicRounding", "QuantumRandomAccessEncoding", "QuantumRandomAccessOptimizationResult", "QuantumRandomAccessOptimizer", "RoundingContext", "RoundingResult", "RoundingScheme", "SemideterministicRounding", "BinPacking", "Clique", "ExactCover", "GraphOptimizationApplication", "GraphPartition", "Knapsack", "Maxcut", "NumberPartition", "OptimizationApplication", "SKModel", "SetPacking", "StableSet", "Tsp", "VehicleRouting", "VertexCover", "InequalityToEquality", "IntegerToBinary", "LinearEqualityToPenalty", "LinearInequalityToPenalty", "MaximizeToMinimize", "MinimizeToMaximize", "QuadraticProgramConverter", "QuadraticProgramToQubo", "INFINITY", "Constraint", "LinearConstraint", "LinearExpression", "QuadraticConstraint", "QuadraticExpression", "QuadraticObjective", "QuadraticProgramElement", "Variable", "from_docplex_mp", "from_gurobipy", "from_ising", "to_docplex_mp", "to_gurobipy", "to_ising", "Programas Cuadr\u00e1ticos", "Conversores para Programas Cuadr\u00e1ticos", "Optimizador Propio M\u00ednimo", "Optimizador de Grover", "Optimizador ADMM", "Max-Cut y Problema del Vendedor Viajero", "Rutas de Veh\u00edculos", "Mejora de la Optimizaci\u00f3n Cu\u00e1ntica Variacional mediante CVaR", "Clases de Aplicaci\u00f3n para Problemas de Optimizaci\u00f3n", "Optimizaci\u00f3n cu\u00e1ntica de arranque en caliente (warm-starting)", "Uso de Modelos y Solucionadores de Optimizaci\u00f3n Cl\u00e1sicos con Qiskit Optimization", "Optimizaci\u00f3n Cu\u00e1ntica de Acceso Aleatorio", "Tutoriales de Optimization"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "covers": 0, "the": [0, 2, 4, 5, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "whol": 0, "rang": [0, 16, 43, 44, 92, 97, 98, 99, 101], "from": [0, 2, 9, 11, 12, 16, 17, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 46, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 86, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "high": [0, 2, 66, 67], "level": [0, 2, 85, 98], "modeling": 0, "of": [0, 2, 4, 5, 8, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "problems": [0, 1, 2, 3, 8, 18, 22, 23, 28, 32, 38, 41, 69, 70, 76, 84, 92, 94, 96, 98, 101, 102, 103], "with": [0, 2, 16, 18, 19, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 54, 55, 57, 58, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 80, 82, 83, 84, 96, 97, 98, 102, 103], "automatic": 0, "conversion": [0, 4, 8, 10, 71, 72, 75, 76, 92, 93, 94, 103], "to": [0, 2, 4, 5, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "different": [0, 2, 4, 27, 32, 38, 40, 44, 99], "requir": [0, 2, 16, 46, 72, 75], "representations": [0, 4], "suit": 0, "easy": [0, 57, 62], "use": [0, 11, 22, 27, 32, 38, 41, 44, 45, 46, 47, 49, 69, 80, 82, 96, 98, 102, 103], "quantum": [0, 7, 10, 18, 27, 43, 44, 46, 47, 48, 49, 70, 95, 96, 97, 98, 99, 101, 103], "algorithms": [0, 10, 11, 12, 22, 23, 28, 32, 34, 35, 38, 41, 49, 51, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "that": [0, 2, 16, 18, 20, 21, 22, 23, 25, 26, 28, 30, 33, 35, 38, 40, 41, 43, 44, 45, 46, 47, 50, 63, 69, 70, 71, 72, 73, 74, 76, 80, 82, 84, 86, 87, 92, 98], "are": [0, 5, 11, 16, 19, 20, 22, 27, 29, 33, 38, 41, 46, 47, 49, 53, 63, 69, 71, 72, 76, 82, 88, 91], "ready": 0, "run": [0, 44, 96, 97, 98, 99], "on": [0, 2, 4, 16, 18, 22, 23, 28, 38, 39, 46, 47, 55, 58, 60, 65, 66, 67, 68, 71, 72, 76, 96, 97, 99, 103], "classical": [0, 2, 18, 94, 96, 97, 98, 99], "simulators": 0, "as": [0, 2, 11, 16, 17, 19, 20, 22, 23, 24, 26, 28, 31, 32, 35, 37, 38, 39, 40, 41, 43, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 76, 80, 82, 87, 88, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103], "well": [0, 16, 32], "real": [0, 10, 97, 100, 102, 103], "devic": 0, "via": [0, 2, 8, 16, 19, 22, 37, 41, 80, 82, 96, 98, 102, 103], "this": [0, 2, 4, 11, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 55, 70, 72, 76, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "enabl": [0, 2], "efficient": 0, "using": [0, 16, 18, 22, 23, 27, 28, 32, 33, 34, 38, 39, 41, 44, 46, 57, 62, 72, 75, 80, 82, 92, 94, 96, 97, 99, 101, 103], "docplex": [0, 10, 86, 89, 93, 95, 96, 99, 101], "A": [0, 8, 16, 17, 18, 21, 22, 24, 25, 26, 27, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 72, 73, 74, 76, 77, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103], "uniform": [0, 10, 46], "interfac": [0, 84], "betw": [0, 4, 6, 43, 44, 98, 103], "problem": [0, 2, 4, 5, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 88, 91, 92, 93, 94, 96, 98, 99, 101, 102], "allows": [0, 2, 35], "users": [0, 2, 35, 44, 72], "solv": [0, 2, 11, 12, 18, 20, 22, 23, 25, 27, 28, 32, 33, 34, 35, 38, 39, 41, 44, 49, 69, 70, 71, 72, 76, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "larg": [0, 2, 96], "set": [0, 4, 11, 15, 19, 27, 47, 64, 65, 99], "variational": [0, 38, 94, 95, 98, 99, 103], "such": [0, 2, 16, 32], "approximat": [0, 2, 8, 10, 25, 32, 95, 97, 101, 103], "algorithm": [0, 2, 10, 17, 18, 22, 24, 25, 26, 27, 31, 32, 33, 35, 36, 37, 38, 40, 41, 44, 48, 95, 97, 99, 101, 103], "qao": [0, 8, 10, 32, 38, 43, 44, 93, 94, 95, 96, 97, 100, 102], "grov": [0, 10, 26, 27], "adaptiv": [0, 10, 27, 95], "search": [0, 10, 27, 95], "groveroptimiz": [0, 10, 26, 93, 94, 96], "leveraging": 0, "fundamental": [0, 8, 10, 93, 94, 101, 103], "minimum": [0, 27, 31, 32, 38, 44, 46, 47, 48, 49, 66, 67, 94, 96, 97, 99], "eigensolvers": 0, "provid": [0, 2, 16, 22, 23, 27, 28, 32, 39, 41, 49, 50], "by": [0, 2, 8, 15, 16, 17, 19, 25, 27, 30, 31, 32, 33, 35, 37, 38, 40, 44, 47, 48, 49, 51, 54, 69, 70, 72, 80, 82, 85, 92, 98, 102], "furthermor": 0, "design": [0, 2, 47], "it": [0, 16, 32, 43, 44, 46, 47, 49, 55, 57, 58, 60, 65, 66, 67, 68, 73, 74, 86, 96], "be": [0, 2, 5, 11, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 47, 49, 55, 57, 58, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 96, 98, 99], "easily": 0, "extend": [0, 8, 9], "and": [0, 4, 6, 11, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 53, 54, 63, 66, 72, 75, 76, 80, 81, 82, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "facilitat": 0, "rap": [0, 10, 97], "development": 0, "testing": 0, "new": [0, 2, 8, 35, 63, 70, 76, 80, 82, 85], "compat": [0, 9, 10, 11, 18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76, 93, 94, 98, 103], "optimizers": [0, 2, 11, 12, 33, 94, 96, 97, 98, 99, 100, 101, 102, 103], "also": [0, 28, 96], "for": [0, 2, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 77, 78, 80, 82, 83, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "validation": 0, "benchmarking": 0, "supports": [0, 16, 39, 72, 86, 87], "quadratically": [0, 16], "constrain": [0, 16, 95, 96], "quadratic": [0, 16, 25, 32, 41, 47, 75, 79, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102], "programs": [0, 75], "simplicity": 0, "we": [0, 2, 82, 99, 103], "ref": [0, 80, 82], "them": [0, 22, 30, 41], "just": [0, 24], "binary": [0, 2, 11, 16, 18, 19, 25, 32, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 86, 87, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103], "integ": [0, 16, 32, 47, 49, 69, 70, 86, 87, 91, 92, 93, 98, 102], "continuous": [0, 16, 18, 19, 22, 41, 44, 69, 85, 86, 87, 91, 92, 96, 101], "variabl": [0, 2, 8, 11, 16, 17, 19, 20, 22, 24, 26, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 55, 56, 59, 64, 65, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "equality": [0, 16, 19, 32, 38, 69, 71, 72, 76], "inequality": [0, 16, 69, 71, 72], "constraints": [0, 11, 16, 19, 32, 38, 39, 47, 69, 71, 72, 76, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103], "class": [0, 2, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 92, 98], "vast": 0, "amount": 0, "relevant": [0, 20], "applications": [0, 57, 62, 97, 100, 103], "whil": 0, "still": [0, 16], "being": [0, 20, 37, 40, 98], "efficiently": 0, "represent": [0, 10, 26, 54, 92, 93, 94, 95, 96, 97, 101, 103], "matric": [0, 8, 92, 94], "vectors": 0, "som": [0, 8, 16, 72, 98], "very": 0, "interesting": 0, "sub": [0, 33, 92, 98], "convex": [0, 23, 28, 39, 96, 101], "which": [0, 16, 46, 49, 53, 72], "can": [0, 2, 11, 16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 43, 44, 46, 47, 49, 55, 57, 58, 60, 65, 66, 67, 68, 76, 80, 82, 96], "unconstrain": [0, 32, 47, 71, 93, 94, 95, 99, 101], "qub": [0, 8, 18, 19, 26, 27, 31, 32, 38, 44, 47, 49, 72, 76, 93, 96, 97, 98, 100, 103], "cov": [0, 56, 68, 100], "many": [0, 94], "np": [0, 35, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 97, 98, 99, 101, 103], "complet": [0, 8, 92, 96, 98, 100, 103], "i": [0, 8, 16, 22, 25, 27, 32, 38, 41, 44, 49, 63, 72, 76, 82, 88, 91, 92, 94, 96, 97, 98, 99, 101], "classically": [0, 99], "intract": 0, "representation": [0, 16, 63, 79, 80, 81, 82, 83, 85, 98, 99], "program": [0, 9, 16, 25, 79, 81, 83, 86, 87, 88, 89, 90, 94, 96, 97, 98, 101], "supporting": 0, "in": [0, 2, 8, 11, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 51, 53, 54, 57, 60, 62, 63, 66, 69, 70, 71, 72, 73, 74, 75, 76, 82, 85, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "addition": 0, "standard": [0, 2, 43, 44], "python": [0, 9, 11, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "errors": [0, 15], "will": [0, 18, 19, 27, 28, 32, 38, 44, 49, 69, 71, 72, 76, 98], "rais": [0, 11, 23, 27, 28, 39], "error": [0, 11, 15, 92, 98, 103], "if": [0, 16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 35, 38, 39, 41, 43, 44, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 103], "circumstanc": 0, "cannot": [0, 16, 27, 92], "proc": 0, "completion": [0, 41], "modul": [2, 10, 12, 15, 22, 23, 28, 29, 32, 34, 36, 39, 41, 75, 92, 93, 97, 101, 103], "is": [2, 4, 8, 11, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 41, 43, 44, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 82, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "leverag": 2, "method": [2, 16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 46, 47, 49, 76, 96, 103], "combinatorial": [2, 8, 103], "1": [2, 11, 16, 18, 19, 22, 23, 25, 29, 33, 35, 36, 37, 38, 41, 43, 44, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 82, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "approach": [2, 8], "incorporat": 2, "cod": [2, 8, 11, 47, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "qracs": [2, 8], "tool": 2, "encod": [2, 25, 47, 49, 103], "multipl": [2, 8, 16, 92, 94, 95, 96, 100, 103], "into": [2, 8, 9, 16, 27, 32, 38, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 86, 87, 103], "singl": [2, 102], "qubit": [2, 8, 16, 47, 49, 88, 91, 97, 98, 100, 101, 103], "thereby": 2, "saving": 2, "resourc": 2, "enabling": 2, "exploration": 2, "instanc": [2, 16, 18, 27, 31, 32, 33, 37, 38, 44, 47, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 84, 98, 99, 100], "comput": [2, 19, 25, 32, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 98, 100, 103], "produc": [2, 11, 43, 101, 103], "local": [2, 9, 22, 33, 41, 98, 103], "hamiltoni": [2, 8, 16, 32, 47, 49, 50, 63, 88, 91, 97, 100, 103], "whos": [2, 32, 55, 56, 59, 61, 64, 65, 66, 68], "ground": [2, 32], "stat": [2, 17, 20, 32, 38, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 96], "vqe": [2, 8, 93, 94, 95, 96, 97, 98, 99, 103], "then": [2, 18, 19, 22, 32, 33, 41, 43, 44, 46], "round": [2, 46, 49, 52, 53, 103], "yield": 2, "approximation": [2, 46, 103], "solutions": [2, 8, 24, 44, 98, 103], "original": [2, 4, 8, 17, 24, 26, 31, 32, 35, 37, 40, 47, 48, 55, 57, 58, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 92, 93, 97, 99, 103], "through": 2, "seri": [2, 98, 103], "3": [2, 9, 11, 12, 19, 22, 27, 35, 47, 49, 69, 82, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103], "quantumrandomaccessencoding": [2, 45, 48, 49, 50, 103], "relax": [2, 8, 19, 43, 44, 47, 48, 49, 50, 103], "few": 2, "semideterministicrounding": [2, 49, 103], "magicrounding": 2, "used": [2, 16, 18, 19, 22, 23, 26, 27, 28, 32, 38, 39, 41, 43, 44, 46, 47, 48, 49, 51, 53, 69, 70, 71, 72, 76, 78, 85, 86, 96], "solution": [2, 16, 17, 19, 24, 26, 31, 32, 35, 36, 37, 40, 42, 43, 46, 48, 49, 53, 54, 60, 66, 97, 98, 100, 102, 103], "obtain": [2, 31, 35, 36, 37, 43, 48, 51, 98, 102, 103], "back": [2, 70, 71, 72, 73, 74], "optimiz": [2, 7, 9, 10, 11, 12, 16, 18, 19, 22, 23, 25, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 49, 76, 92, 93, 98], "quantumrandomaccessoptimiz": 2, "performs": 2, "utilizing": 2, "capabiliti": 2, "two": [2, 58, 60], "methods": [2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85], "solving": [2, 19, 20, 49, 97], "solve_relax": [2, 49, 103], "seamless": 2, "workflow": 2, "automatically": [2, 71, 72, 76, 86, 99], "managing": 2, "procedur": [2, 48], "demonstrat": 2, "exampl": [2, 16, 82], "below": 2, "simplifi": 2, "streamlin": 2, "user": [2, 29], "experienc": 2, "other": [2, 6, 16, 19, 33, 63], "hand": [2, 16, 78, 79, 81, 92], "offers": 2, "flexibility": 2, "break": 2, "computation": [2, 17, 20], "process": [2, 19, 46, 49], "distinct": [2, 103], "steps": 2, "featur": [2, 86], "advantageous": 2, "when": [2, 19, 22, 27, 32, 35, 38, 41, 43, 44, 55, 57, 58, 60, 65, 66, 67, 68], "need": [2, 11, 16, 21, 30, 46, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "compar": [2, 10, 96, 97, 101, 103], "appli": [2, 18, 22, 23, 27, 28, 32, 33, 34, 38, 39, 41, 44], "potential": [2, 22, 33, 41], "qiskit_algorithms": [2, 12, 32, 38, 49, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "import": [2, 8, 11, 12, 22, 23, 28, 32, 35, 38, 41, 69, 70, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "cobyl": [2, 11, 12, 22, 94, 96, 99, 100, 101, 102, 103], "qiskit": [2, 9, 15, 16, 22, 23, 28, 32, 34, 39, 41, 75, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "circuit": [2, 11, 12, 43, 47, 50, 94, 97, 98, 99, 101, 103], "library": [2, 11, 12, 97, 98, 99, 103], "realamplitud": [2, 11, 12, 98, 99, 103], "primitiv": [2, 11, 12, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "estimator": [2, 11, 45, 103], "quadraticprogram": [2, 4, 5, 6, 11, 18, 20, 22, 23, 25, 27, 28, 32, 33, 34, 35, 38, 39, 41, 44, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103], "binary_v": [2, 11, 16, 35, 92, 93, 94, 95, 96, 98, 101, 102], "x": [2, 8, 11, 16, 17, 24, 25, 26, 31, 35, 37, 40, 41, 42, 47, 48, 54, 60, 63, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "z": [2, 8, 66, 72, 92, 93, 94, 97, 98, 102], "minimiz": [2, 16, 22, 33, 35, 41, 83, 92, 93, 94, 95, 96, 97, 98, 100, 101], "lin": [2, 11, 16, 32, 35, 38, 39, 41, 72, 76, 79, 80, 81, 83, 86, 87, 88, 92, 93, 94, 96, 97, 98, 100, 101, 102], "2": [2, 11, 16, 19, 22, 29, 35, 36, 41, 47, 49, 67, 72, 82, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "ansatz": [2, 11, 12, 97, 98, 99, 103], "min_eigen_solv": [2, 11, 12, 32, 44, 49, 98, 100, 103], "result": [2, 4, 8, 11, 12, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 93, 94, 95, 97, 98, 100, 101, 102], "only": [2, 11, 22, 25, 29, 32, 39, 41, 44, 46, 69, 71, 73, 74, 87, 102], "must": [2, 11, 44, 46, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "don": 2, "manually": 2, "max_vars_per_qubit": [2, 47, 49, 103], "relaxed_results": [2, 103], "rounding_context": [2, 46, 52, 53, 103], "bryce": [2, 8, 103], "full": [2, 8, 96, 97, 102, 103], "et": [2, 8, 38, 44, 72, 98, 99, 103], "relaxations": [2, 8, 103], "arxiv": [2, 8, 18, 38, 44, 46, 53, 63, 70, 72, 93, 94, 95, 96, 97, 98, 101, 103], "2111": [2, 8, 46, 53, 103], "03167": [2, 8, 46, 53, 103], "common": 3, "having": 4, "convert": [4, 16, 27, 32, 38, 44, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 93, 95, 97, 99, 100, 101, 102, 103], "functionality": 4, "go": 4, "giv": [4, 16, 18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 46, 47, 49, 63, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 99], "interpret": [4, 16, 26, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 93, 97, 100], "befor": [4, 26, 44, 102], "return": [4, 15, 16, 17, 20, 24, 26, 29, 31, 32, 35, 37, 40, 41, 46, 48, 49, 66, 91, 94, 97, 98, 101], "an": [4, 5, 11, 16, 17, 18, 22, 23, 24, 25, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 49, 52, 53, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 80, 82, 88, 91, 92, 99, 103], "appropriat": 4, "optimizationresult": [4, 17, 22, 23, 24, 26, 27, 28, 31, 33, 34, 37, 38, 39, 40, 41, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 96], "structur": 5, "defining": [5, 98], "following": [5, 47, 72, 86], "not": [5, 8, 11, 15, 16, 18, 19, 22, 23, 27, 28, 32, 35, 39, 43, 44, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 85, 86, 87, 92, 93, 94, 98, 99, 102, 103], "intend": 5, "instantiat": [5, 98], "directly": [5, 55, 57, 58, 60, 65, 66, 67, 68, 102], "objects": [5, 6, 21, 30, 84], "thes": 5, "types": [5, 98], "avail": [5, 53], "within": [5, 22, 23, 28, 32, 39, 41], "optimization": [6, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "models": [6, 72], "or": [6, 11, 16, 17, 19, 22, 23, 24, 26, 27, 28, 31, 32, 33, 35, 37, 39, 40, 41, 44, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 82, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "Esta": [7, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "seccion": [7, 8, 13, 92, 95, 103], "document": [7, 8, 11, 12, 92, 93, 103], "proporcion": [7, 8, 10, 11, 12, 13, 93, 94, 98, 99, 100, 102, 103], "antecedent": 7, "sobr": [7, 93, 94, 95, 96, 97, 102, 103], "tecnic": [7, 95, 103], "metod": [7, 9, 92, 93, 94, 96, 97, 98, 103], "etc": 7, "tant": [7, 11, 92, 93, 94, 96, 99, 101], "util": [7, 8, 94, 97, 98], "com": [7, 8, 9, 10, 11, 16, 23, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102], "utiliz": [7, 8, 10, 11, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103], "cuantic": [7, 10, 93, 94, 95, 100], "acces": 7, "aleatori": [7, 98, 100], "random": [7, 25, 46, 47, 48, 49, 53, 63, 66, 67, 97, 98, 99, 103], "access": [7, 47, 48, 49, 103], "relaj": 7, "codig": [7, 9, 10, 11, 12, 13, 93, 103], "esquem": [7, 94, 103], "redonde": 7, "Este": [8, 11, 12, 94, 98, 99, 101, 103], "material": [8, 97], "mir": 8, "mas": [8, 9, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103], "profund": [8, 94, 97, 98], "concept": [8, 94], "detras": 8, "consider": [8, 19, 94, 97, 98, 99, 103], "binari": [8, 92, 93, 94, 95, 96, 98, 101, 102, 103], "defin": [8, 19, 26, 29, 40, 69, 76, 80, 82, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103], "m_i": 8, "La": [8, 9, 11, 12, 92, 94, 95, 96, 97, 98, 101, 103], "eleccion": [8, 97, 98], "pm": [8, 63, 97], "lug": [8, 9, 11, 12, 94, 96, 98, 103], "per": [8, 11, 12, 26, 47, 49, 92, 94, 95, 97, 99, 101, 103], "ser": [8, 9, 92, 93, 94, 95, 96, 97, 98, 103], "convenient": [8, 93, 97, 103], "termin": [8, 92, 93, 94, 95, 96, 97, 98, 101], "notacion": [8, 98], "cuand": [8, 9, 92, 95, 101, 102, 103], "comenc": [8, 103], "reformul": 8, "observ": [8, 101, 103], "Estaremos": 8, "interes": [8, 94, 95, 97], "principal": 8, "cuadrat": [8, 94, 95, 96, 98, 101, 103], "restriccion": [8, 93, 94, 95, 96, 97, 98, 101, 103], "aunqu": [8, 11, 94, 103], "ide": 8, "conten": 8, "pued": [8, 9, 11, 12, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103], "facil": [8, 10, 92, 97, 100, 101], "restring": [8, 92, 96, 101], "menud": [8, 96, 101, 103], "gener": [8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "algun": [8, 9, 92, 97, 98, 99, 102, 103], "subrecarg": 8, "dentr": [8, 98, 99, 100, 103], "matemat": [8, 92, 97, 98], "estrategi": [8, 97, 103], "tom": [8, 93, 94, 95, 96, 97, 100, 103], "dificil": [8, 98, 101], "map": [8, 93, 98, 103], "version": [8, 9, 11, 13, 44, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "simil": [8, 9, 98], "general": [8, 93, 95, 97, 98], "resolv": [8, 10, 53, 93, 96, 98, 100, 101, 102], "central": [8, 95], "aqu": [8, 9, 94, 96, 97, 98, 101, 103], "par": [8, 10, 92, 94, 95, 96, 98, 99, 101, 102, 103], "solucion": [8, 93, 94, 95, 97, 100, 101], "brind": 8, "inform": [8, 9, 94, 95, 97, 103], "permit": [8, 9, 10, 11, 12, 94, 97, 98, 103], "encontr": [8, 92, 94, 96, 97, 98, 100, 103], "heurist": [8, 96, 97, 98, 103], "mejor": [8, 94, 95, 97, 98, 103], "Un": [8, 94, 95, 97, 103], "ejempl": [8, 11, 22, 23, 28, 32, 35, 38, 41, 69, 70, 76, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103], "podr": [8, 94, 97, 101], "tan": [8, 97, 103], "discret": 8, "optimic": 8, "continu": [8, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103], "vez": [8, 94, 95, 97, 98, 100, 101, 103], "obtien": [8, 101], "deb": [8, 9, 11, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103], "extra": 8, "valor": [8, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "proces": [8, 11, 12, 94, 97, 103], "nuev": [8, 9, 10, 12, 92, 93, 96, 97, 98, 103], "conjunt": [8, 10, 96, 97, 98, 99, 100, 103], "admis": 8, "denomin": [8, 96], "ver": [8, 11, 93, 97, 98], "concret": [8, 95], "consult": [8, 9, 93, 95, 97, 102, 103], "algoritm": [8, 9, 10, 11, 12, 93, 94, 95, 97, 98, 99, 101, 103], "goemans": [8, 9, 24, 25], "williamson": [8, 9, 24, 25], "maxcut": [8, 97, 103], "Sin": [8, 93, 97, 101, 103], "perd": 8, "rest": 8, "funcion": [8, 9, 92, 93, 94, 95, 96, 97, 98, 99, 103], "objet": [8, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103], "graf": [8, 9, 97, 98, 100, 103], "g": [8, 16, 32, 38, 63, 92, 96, 97, 98], "v": [8, 94, 96, 97, 98], "E": [8, 16, 19, 92, 94, 96, 97, 98], "nuestr": [8, 93, 95, 97, 98, 101, 103], "particion": [8, 97, 100, 103], "vertic": [8, 97, 103], "dos": [8, 92, 93, 94, 97, 98, 100, 102], "mod": [8, 9, 40, 69, 92, 100], "maximic": [8, 100], "numer": [8, 93, 94, 97, 98, 100, 103], "arist": [8, 97, 98, 100, 103], "conect": [8, 97, 98, 100], "ambos": [8, 97, 101, 103], "cad": [8, 93, 94, 95, 96, 97, 98, 100, 103], "v_i": 8, "asign": [8, 97, 103], "cort": [8, 93, 94, 98, 100, 103], "text": [8, 16, 72, 92, 93], "cut": [8, 25, 60, 98, 100, 102, 103], "m": [8, 86, 92, 93, 95, 97, 98, 99, 101, 102], "sum_": [8, 25, 63, 72, 97, 98], "ij": [8, 97, 98], "e_": 8, "frac": [8, 97], "m_j": 8, "har": 8, "espaci": [8, 95, 97], "pauli": [8, 16, 46, 53, 88, 94, 97, 103], "sol": [8, 11, 12, 93, 94, 95, 97, 98, 101, 103], "incorpor": [8, 103], "entrad": [8, 93, 94, 95, 103], "factibl": [8, 96, 98], "product": [8, 97], "denot": [8, 16, 92, 98], "incrustr": 8, "f": [8, 92, 94, 98, 100, 101, 102, 103], "mapst": 8, "mathcal": [8, 96], "d": [8, 95, 97, 98, 100, 101, 103], "mathbb": [8, 96, 98], "c": [8, 18, 92, 95, 96, 97, 98, 101, 102], "n": [8, 19, 47, 63, 66, 67, 72, 92, 95, 96, 97, 98, 99, 100, 101, 103], "tr": 8, "big": [8, 86, 98, 102], "h": [8, 63, 97, 98], "cdot": 8, "dond": [8, 9, 92, 93, 95, 97, 98, 103], "codif": [8, 93, 95, 98], "val": [8, 16, 97, 98, 103], "dars": 8, "cas": [8, 9, 17, 23, 24, 26, 31, 35, 37, 38, 40, 44, 48, 69, 70, 71, 72, 73, 74, 76, 92, 93, 94, 95, 96, 97, 98, 99, 103], "geq": [8, 72, 92, 93], "qqu": 8, "forall": [8, 96, 97, 98], "garantiz": [8, 93, 96, 97], "ciert": [8, 96], "impondr": 8, "condicion": [8, 96, 97], "fuert": [8, 97], "En": [8, 9, 92, 93, 94, 95, 96, 97, 98, 99, 103], "palabr": [8, 103], "igual": [8, 93, 95, 100, 103], "tod": [8, 10, 13, 32, 93, 94, 95, 96, 97, 98, 100, 103], "simplement": [8, 9, 13, 97], "limit": [8, 92, 93, 97, 98, 102], "arrib": [8, 95, 101], "detall": [8, 9, 11, 12, 93, 94, 97, 102, 103], "adquir": 8, "crucial": [8, 103], "adel": [8, 96], "explicit": [8, 44], "Antes": 8, "explic": [8, 11, 12, 92, 98, 103], "bas": [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 94, 96, 97, 98, 99, 103], "analiz": 8, "primer": [8, 10, 92, 93, 94, 96, 97, 98, 100, 101, 102], "usuari": [8, 10, 11, 12, 100, 103], "familiariz": 8, "lenguaj": [8, 103], "incrust": 8, "rangl": [8, 95, 97, 98, 101], "otim": [8, 98], "quad": [8, 92, 96, 98], "z_i": [8, 97, 98], "z_j": [8, 97], "indic": [8, 9, 16, 47, 54, 55, 58, 59, 60, 65, 66, 68, 80, 82, 92, 94, 95, 97, 98], "unic": [8, 97, 101, 103], "esim": 8, "ident": [8, 102], "demas": [8, 97], "qubits": [8, 16, 26, 27, 47, 88, 91, 95, 97, 98, 100, 103], "pen": [8, 97, 98, 103], "convenc": 8, "transform": [8, 98, 101], "particul": [8, 96, 98, 99, 103], "tip": [8, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103], "actual": [8, 9, 93, 95], "much": [8, 93, 97, 98, 101, 103], "plaz": [8, 94], "inclu": [8, 92, 93, 96, 97, 103], "enfoqu": [8, 93, 94, 98, 103], "reproduc": 8, "exact": [8, 56, 93, 94, 96, 97, 98, 100], "form": [8, 9, 16, 27, 32, 38, 44, 75, 76, 82, 83, 92, 93, 94, 97, 98, 100, 101, 102, 103], "tambien": [8, 10, 11, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103], "libr": [8, 97], "evalu": [8, 10, 96, 97, 98, 103], "usand": [8, 9, 10, 92, 94, 95, 96, 97, 98, 100], "superposicion": [8, 95], "dich": [8, 92, 95, 103], "Esto": [8, 9, 93, 94, 95, 96, 97, 98, 103], "analog": 8, "clasic": [8, 10, 94, 97, 103], "si": [8, 9, 13, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103], "practic": [8, 96, 97, 103], "redond": [8, 103], "mid": 8, "medicion": [8, 103], "proyect": [8, 9], "cualqui": [8, 96, 100, 103], "basic": [8, 11, 12, 87, 93, 94, 98], "computacional": [8, 97, 98, 103], "consecuent": [8, 103], "imag": 8, "Los": [8, 11, 12, 93, 94, 96, 97, 100, 101, 102, 103], "delin": 8, "1983": 8, "steph": 8, "wiesn": 8, "context": [8, 46, 49, 53, 95, 97, 103], "teor": 8, "complej": [8, 97], "comun": [8, 93], "No": [8, 11, 12, 29, 92, 93, 94, 95, 97, 100, 101, 103], "usar": [8, 9, 10, 11, 12, 92, 93, 94, 95, 96, 103], "conceb": 8, "sino": [8, 94], "Por": [8, 11, 12, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103], "motiv": [8, 97], "introduccion": 8, "rac": 8, "anim": 8, "lector": 8, "busc": [8, 97, 98, 103], "k": [8, 96, 98, 103], "dad": [8, 9, 93, 94, 96, 97, 98, 99, 100, 103], "copi": 8, "probabil": [8, 94, 95, 97, 101, 103], "realiz": [8, 99], "anterior": [8, 9, 12, 93, 94, 95, 96, 98, 101, 103], "trivial": 8, "escrib": [8, 93, 98], "854": 8, "789": 8, "respect": [8, 92, 93, 94, 95, 96, 97, 102, 103], "se\u00f1al": [8, 103], "4": [8, 11, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "demostr": [8, 97, 98], "impos": 8, "med": [8, 95, 103], "generaliz": [8, 94], "individual": [8, 97, 98], "descompuest": 8, "hermitian": 8, "rho": [8, 19, 20, 96], "left": [8, 16, 78, 79, 81, 97], "ax": [8, 97], "cz": [8, 97], "right": [8, 16, 78, 79, 81, 92, 97, 99], "b": [8, 19, 92, 93, 96, 97, 102], "Las": [8, 11, 93, 98, 100, 101, 103], "asoci": [8, 93, 98, 103], "ahor": [8, 93, 96, 101], "siguient": [8, 9, 11, 12, 13, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103], "maner": [8, 9, 11, 92, 93, 95, 96, 97, 98, 100, 102, 103], "begin": [8, 72, 92, 95, 101], "array": [8, 25, 55, 57, 58, 60, 62, 65, 66, 67, 68, 72, 80, 82, 92, 94, 98, 99, 101, 102, 103], "l": [8, 16, 96, 98], "ll": 8, "embedding": 8, "vert": 8, "psi": [8, 97, 98], "langl": [8, 97, 98], "hlin": 8, "_m": 8, "m_0": 8, "sqrt": [8, 63, 101], "m_1": 8, "Y": [8, 95, 97, 98], "m_2": 8, "end": [8, 16, 29, 72, 92, 95, 101, 102], "tabl": [8, 11, 12], "Estados": 8, "ten": [8, 11, 12, 92, 93, 94, 95, 97, 98, 100, 101, 103], "cuent": [8, 11, 12, 92, 93, 94, 95, 97, 98, 100, 101, 103], "caden": [8, 92], "escal": [8, 92, 98], "natural": 8, "composicion": 8, "tensorial": 8, "m_3": 8, "m_4": 8, "m_5": 8, "De": [8, 98, 103], "nmid": 8, "pod": [8, 11, 12, 93, 95, 96, 98, 101, 102, 103], "rellen": 8, "apropi": 8, "estim": [8, 97, 98, 103], "esper": [8, 93, 97, 98, 99, 103], "correspondient": [8, 11, 12, 92, 93, 94, 95, 96, 97, 99, 100, 103], "bit": 8, "exist": [8, 11, 12, 16, 91, 93, 97, 101], "factor": [8, 19, 27, 32, 38, 44, 49, 71, 72, 76, 92, 93, 99, 103], "reescal": 8, "depend": [8, 9, 93, 97, 98, 101, 103], "densid": 8, "herramient": [8, 103], "hem": [8, 103], "descrit": [8, 95], "hac": [8, 9, 92, 97, 98, 101], "sustitu": 8, "decision": [8, 19, 47, 49, 96, 97, 98, 103], "baj": 8, "p_": 8, "j": [8, 19, 25, 44, 63, 72, 94, 96, 97, 98, 99, 100, 101, 103], "despues": [8, 93, 95, 97, 101], "El": [8, 10, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103], "corchet": 8, "dej": 8, "clar": [8, 103], "necesari": [8, 96, 97, 98, 100, 103], "actu": 8, "porqu": [8, 11, 12, 93, 96, 103], "tien": [8, 9, 11, 12, 92, 93, 96, 97, 98, 101], "relacion": [8, 103], "estam": 8, "signif": [8, 9, 95, 97, 103], "subconjunt": [8, 93, 97, 100, 103], "mism": [8, 9, 92, 93, 94, 96, 98, 101, 102, 103], "potencial": [8, 97], "plant": 8, "intent": [8, 92, 94, 97, 103], "conmutat": 8, "coment": 8, "x_i": [8, 63, 72, 92, 93, 97, 101], "x_j": [8, 72, 97], "diferent": [8, 10, 11, 93, 94, 96, 97, 98, 101, 103], "entonc": [8, 94, 95, 97, 98], "comport": [8, 101, 103], "embarg": [8, 93, 97, 101, 103], "paulis": 8, "compondran": 8, "direct": [8, 94, 97, 102, 103], "record": 8, "grup": 8, "autoinvers": 8, "deduc": 8, "distint": [8, 98, 103], "dar": [8, 9, 101], "element": [8, 37, 47, 94, 95, 100], "romp": 8, "restaur": 8, "introduc": [8, 18, 38, 92, 93, 94, 96, 99, 100], "adicional": [8, 9, 93, 97, 103], "especif": [8, 9, 92, 95, 96, 97, 98], "compart": [8, 103], "ventaj": [8, 97], "dots": [8, 92, 98], "logr": [8, 103], "color": [8, 95, 98], "tal": [8, 92, 93, 94, 95, 97, 100, 101], "ningun": [8, 9, 100], "lueg": [8, 9, 92, 93, 94, 95, 96, 97, 98, 103], "poc": [8, 98], "probabl": 8, "final": [8, 22, 40, 41, 93, 94, 96, 97, 98, 99, 100, 103], "obten": [8, 92, 93, 94, 96, 97, 98, 101, 102, 103], "rho_": 8, "necesit": [8, 92, 93, 95, 96, 98, 103], "propuest": [8, 93, 97], "opcion": [8, 9], "proced": [8, 96, 98, 103], "estab": 8, "pens": 8, "usars": 8, "aplic": [8, 9, 93, 94, 95, 99, 101, 102, 103], "arbitrari": 8, "cercan": [8, 97, 98], "manej": [8, 11, 12, 93, 97], "devolv": 8, "sign": [8, 93], "llev": 8, "rl": 8, "sim": [8, 98], "devuelv": [8, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 103], "fielment": 8, "fall": 8, "disminu": [8, 95], "exponencial": [8, 97], "iter": [8, 41, 95, 96, 99, 103], "tres": [8, 92, 93, 95], "distingu": 8, "independient": [8, 12, 95], "seleccion": [8, 96, 98, 100, 103], "perfect": 8, "ortogonal": 8, "bar": 8, "sid": [8, 12, 16, 78, 79, 81, 92, 95], "invert": 8, "Sea": [8, 98], "muestre": [8, 97, 103], "rightarrow": [8, 72, 95, 97], "eleg": [8, 96, 97, 98, 101, 103], "esencial": [8, 103], "equivalent": [8, 93, 94, 95, 97], "tendr": [8, 9], "correct": [8, 44, 93, 96, 98, 103], "dan": [8, 92], "desconoc": [8, 97], "optim": [8, 94, 95, 96, 97, 98, 100, 101, 102, 103], "afortun": 8, "ofrec": [8, 93, 97], "inferior": [8, 92, 93], "aproxim": [8, 10, 93, 95, 98, 101, 103], "mayor": [8, 95, 97, 98, 101, 103], "energ": [8, 97], "propi": [8, 9, 11, 12, 93, 95, 96, 97, 98, 100, 103], "maxim": [8, 95, 100, 103], "s": [8, 9, 16, 19, 47, 55, 73, 74, 94, 95, 96, 97, 98, 101], "t": [8, 16, 44, 92, 96, 97, 98, 99, 101], "leq": [8, 72, 92, 93, 96, 98], "expect": [8, 26, 46, 84, 99], "fval": [8, 11, 17, 24, 26, 31, 35, 37, 40, 42, 48, 93, 94, 96, 99, 101, 102, 103], "optimal": [8, 17, 19, 24, 31, 32, 37, 48, 97, 99, 103], "5": [8, 12, 43, 44, 70, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "9": [8, 9, 11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "2021": 8, "conjugat": 8, "coding": 8, "sigact": 8, "news": 8, "vol": 8, "15": [8, 92, 93, 94, 97, 98, 100, 101, 103], "issu": [8, 16, 18, 25, 33, 34, 88, 91], "pp": 8, "78": [8, 93, 100], "88": 8, "link": 8, "masahit": 8, "hayashi": 8, "does": [8, 11, 16, 19, 32, 49, 71, 83], "one": [8, 11, 16, 22, 24, 27, 32, 33, 38, 41, 44, 47, 69, 70, 76], "enough": 8, "recov": 8, "four": 8, "journal": 8, "physics": [8, 97], "8": [8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "numb": [8, 16, 19, 22, 25, 26, 27, 33, 38, 40, 41, 44, 46, 47, 49, 51, 53, 54, 61, 63, 66, 67, 71, 72, 73, 74, 83, 97, 98, 99, 103], "129": 8, "2006": [8, 98], "entorn": 9, "plataform": 9, "referirt": 9, "segu": 9, "centr": [9, 97, 103], "hech": [9, 97, 98], "dependient": 9, "soport": [9, 92, 94, 97], "estan": [9, 10, 11, 92, 98, 100, 101], "predetermin": [9, 92, 93, 98, 103], "Esos": 9, "ibm": [9, 11, 23, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "cplex": [9, 16, 23, 92, 94, 96, 102], "cvxpy": 9, "matplotlib": [9, 96, 97, 98, 99, 100], "comenz": [9, 97, 103], "sencill": 9, "gui": [9, 10], "virtual": 9, "agreg": [9, 93, 94, 101], "visualization": [9, 94, 97], "dec": [9, 11, 95, 96, 97, 98, 101, 102], "pip": [9, 98, 102], "install": [9, 16, 23, 28, 96, 98, 102], "automat": [9, 10, 94, 102, 103], "aun": [9, 95, 97, 99], "desd": [9, 10, 97, 102], "fuent": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "acced": [9, 11, 12, 92, 96], "actualiz": [9, 95, 96], "recient": 9, "desarroll": [9, 10], "repositori": 9, "packag": [9, 97], "index": [9, 16, 35, 67, 80, 82, 92, 98], "pypi": [9, 23, 102], "capac": [9, 97, 100, 103], "inspeccion": 9, "ultim": [9, 94, 97, 98], "eficient": [9, 10, 96, 97], "cambi": [9, 13, 94, 95], "requer": [9, 10, 97, 98], "caracterist": [9, 101], "modific": [9, 93, 97, 98], "instruccion": [9, 13], "installing": 9, "sourc": [9, 11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "clon": 9, "git": 9, "https": [9, 16, 22, 23, 39, 41, 46, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 88, 91, 92, 102, 103], "github": [9, 16, 88, 91, 92, 103], "community": 9, "clonacion": 9, "cre": [9, 92, 94, 95, 96, 97, 98, 101, 103], "carpet": 9, "llam": [9, 92, 93, 94, 97, 101, 103], "cd": 9, "quier": 9, "ejecut": [9, 10, 96, 98, 103], "prueb": [9, 10, 96, 97, 98], "verif": 9, "linting": 9, "r": [9, 94, 95, 96, 97, 98, 99, 102], "requirements": 9, "dev": 9, "txt": [9, 11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "des": [9, 94, 100, 102, 103], "edit": 9, "requier": [9, 98, 103], "reinstal": 9, "lectur": 9, "archiv": 9, "lp": [9, 16, 102], "uso": [9, 95, 97, 98], "cplexoptimiz": [9, 35, 93, 96, 101, 102], "contenedor": [9, 93], "efect": 9, "cvx": 9, "goemanswilliamsonoptimiz": 9, "draw": [9, 55, 57, 58, 60, 65, 66, 67, 68, 100, 101, 103], "clas": [9, 92, 93, 94, 96, 98, 101, 103], "gurobipy": [9, 28, 87, 90], "gurobi": [9, 28, 102], "gurobioptimiz": [9, 102], "div": 9, "tutorials": [9, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "find": [9, 22, 27, 32, 36, 41], "out": [9, 16, 55, 57, 58, 60, 65, 66, 67, 68], "about": [9, 35, 53], "framework": [10, 95], "abiert": 10, "cubr": [10, 100], "gam": 10, "model": [10, 16, 23, 28, 55, 63, 86, 87, 89, 90, 93, 95, 96, 97, 99, 101], "alto": [10, 103], "nivel": [10, 98, 99, 103], "hast": [10, 11, 93, 95, 96, 97, 98, 103], "list": [10, 16, 17, 21, 24, 25, 26, 27, 30, 31, 32, 35, 37, 38, 40, 43, 44, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 92, 93, 94, 97, 98, 103], "simul": [10, 96, 98, 103], "asi": [10, 92, 97, 99, 103], "disposit": [10, 94, 96, 97, 103], "traves": [10, 11, 12, 97, 98, 103], "Una": [10, 93, 94, 96, 97, 101, 103], "interfaz": [10, 11, 12], "gran": [10, 94], "variacional": [10, 95, 96, 98, 103], "busqued": 10, "adapt": [10, 97, 98], "aprovech": [10, 11, 94, 96, 97, 101, 103], "ademas": [10, 92, 97, 98], "dise\u00f1": [10, 96, 98, 103], "ampli": 10, "valid": [10, 96], "migracion": 10, "tutorial": [10, 11, 12, 72, 92, 93, 94, 96, 97, 103], "terr": [11, 12, 16, 88, 91, 94], "22": [11, 93, 94, 95, 96, 97, 98, 101, 102], "present": [11, 16, 92, 94, 96, 98, 99], "implement": [11, 44, 94, 95, 96, 97], "primit": 11, "sampl": [11, 12, 17, 21, 24, 26, 27, 30, 31, 35, 37, 40, 42, 46, 48, 51, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "fluj": [11, 98, 103], "oper": [11, 94, 95, 96, 97, 98, 101, 103], "qued": [11, 95], "obsolet": [11, 13], "futur": [11, 97], "intencion": [11, 12], "Te": [11, 12, 103], "suger": [11, 12], "leas": [11, 12], "recurs": [11, 12, 94, 103], "usam": [11, 93, 94, 95, 96, 97, 101, 103], "sig": [11, 13, 95, 101], "basesampl": [11, 27, 46], "backendsampl": 11, "aersampl": 11, "aer": [11, 103], "runtim": [11, 103], "minimum_eigen_solvers": 11, "mediant": [11, 12, 92, 93, 96, 97, 98, 102, 103], "lad": [11, 12, 92, 93], "minimum_eigensolvers": [11, 12, 49, 103], "minimumeigensolv": [11, 12, 48, 49, 94, 96, 99], "samplingminimumeigensolv": [11, 12, 31, 32, 94], "excepcion": [11, 12, 94], "minimum_eigensolv": [11, 12, 49], "hered": [11, 94], "Es": [11, 97, 103], "extension": [11, 12, 97], "configur": [11, 46, 92, 96, 99, 101, 102], "qiskit_optimization": [11, 12, 22, 23, 28, 32, 35, 38, 41, 49, 51, 69, 70, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "maximiz": [11, 16, 41, 92, 93, 97, 99, 100, 101, 102, 103], "print": [11, 12, 16, 17, 23, 24, 26, 28, 31, 35, 37, 39, 40, 41, 48, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "prettyprint": [11, 16, 17, 24, 26, 31, 35, 37, 40, 48, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "nam": [11, 16, 17, 24, 26, 29, 31, 35, 36, 37, 40, 41, 48, 60, 66, 70, 78, 79, 80, 81, 82, 85, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "subject": [11, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103], "previ": [11, 12, 13, 98], "mes": [11, 12], "meo": [11, 12, 100, 102], "status": [11, 16, 17, 24, 26, 31, 35, 36, 37, 40, 41, 42, 48, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "success": [11, 36, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "utils": [11, 94, 97, 98, 99, 100, 101], "quantuminstanc": 11, "backend": [11, 46, 96, 103], "get_backend": 11, "qasm_simulator": 11, "shots": [11, 12, 46, 51, 103], "1000": [11, 12, 19, 22, 96, 97, 103], "qins": 11, "quantum_instanc": 11, "Se": [11, 94, 95, 96, 97, 98], "celd": [11, 92], "try": [11, 22, 23, 27, 28, 32, 33, 34, 38, 39, 41, 44, 92, 98], "except": [11, 92, 93, 98, 100], "typeerror": [11, 27, 32, 38, 49, 84], "ex": 11, "support": [11, 47, 49, 69, 70, 89, 90], "you": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "inste": [11, 55, 96], "slsqpoptimiz": [11, 12, 18], "pre_solv": [11, 12, 44, 101], "relax_for_pre_solv": [11, 12, 44, 101], "tru": [11, 12, 16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76, 88, 92, 94, 96, 97, 98, 101, 102, 103], "epsilon": [11, 12, 43, 44, 101], "25": [11, 12, 44, 94, 97, 98, 99, 100, 102], "admit": [11, 12, 92, 96, 102], "especific": [11, 92, 100, 103], "num_value_qubits": [11, 12, 27], "num_iterations": [11, 12, 27, 95], "becaus": 11, "both": [11, 27], "valueerror": [11, 27, 33, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "pass": [11, 22, 28, 41, 44, 71, 72, 76], "tools": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "jupyt": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "qiskit_version_t": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "qiskit_copyright": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "informationqiskit": [11, 92, 94, 95, 96, 97, 98, 99, 100, 103], "softwareversionqiskit": [11, 92, 94, 95, 96, 97, 98, 99, 100, 103], "terra0": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103], "23": [11, 95, 96, 98, 101, 102], "0qiskit": [11, 94, 95, 96, 97, 98, 99, 100, 103], "aer0": [11, 92, 94, 95, 96, 97, 98, 99, 100, 103], "11": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "1qiskit": [11, 92, 93, 95, 96, 98], "optimization0": [11, 92, 94, 95, 96, 97, 98, 99, 100, 103], "machin": [11, 19, 95, 96, 98], "learning0": [11, 95, 96, 98], "0system": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "informationpython": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "version3": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "15python": [11, 95, 96, 98], "compilerclang": [11, 93, 94, 95, 96, 97, 98, 99, 100, 103], "14": [11, 22, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "clang": [11, 93, 94, 95, 96, 97, 98, 99, 100, 103], "1400": [11, 94, 95, 96, 97, 98, 99, 100], "29": [11, 94, 95, 96, 97, 98, 99, 100], "102": [11, 95, 96, 98], "buildmain": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "oct": [11, 95, 96, 98], "2022": [11, 92, 95, 96, 98, 103], "27": [11, 92, 95, 96, 98, 101], "25osdarwincpus4memory": [11, 95, 96, 98], "gb": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "16": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "0tu": [11, 95, 96, 98], "06": [11, 41, 95, 96, 98, 101, 102], "08": [11, 53], "13": [11, 41, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103], "jst": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103], "part": [11, 16, 81, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "copy": [11, 16, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "copyright": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "2017": [11, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "licens": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "under": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "apach": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "mayobtain": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "fil": [11, 16, 60, 66, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "root": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "directory": [11, 16, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "tre": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "at": [11, 19, 29, 37, 38, 63, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "http": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "www": [11, 23, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "org": [11, 22, 23, 39, 41, 46, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "any": [11, 16, 17, 22, 23, 24, 26, 31, 33, 35, 37, 40, 41, 48, 72, 78, 79, 80, 81, 82, 83, 85, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "modifications": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "derivativ": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "works": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "retain": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "thiscopyright": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "notic": [11, 63, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "modifi": [11, 19, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "carry": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "indicatingthat": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "they": [11, 72, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "hav": [11, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "been": [11, 27, 47, 49, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "alter": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "originals": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "obsoletiz": 12, "Ha": [12, 97], "reemplaz": [12, 92, 93, 94], "bibliotec": 12, "existent": 12, "elimin": [13, 93, 98, 103], "exception": [15, 23, 27, 28, 39], "messag": [15, 18, 22, 25, 27, 32, 33, 34, 38, 40, 41, 44, 49, 76], "add_not": 15, "add": [15, 92, 98], "with_traceback": 15, "tb": 15, "self": [15, 98], "__traceback__": 15, "object": [16, 17, 19, 20, 22, 24, 26, 31, 33, 35, 37, 40, 41, 42, 43, 45, 47, 48, 50, 51, 84, 103], "parametr": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 102, 103], "str": [16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 48, 49, 51, 60, 66, 69, 76, 78, 79, 80, 81, 82, 83, 85, 97, 98, 101], "attribut": [16, 17, 18, 22, 23, 24, 26, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85], "linear_constraints": [16, 98], "returns": [16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 48, 49, 52, 63, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 99], "linear_constraints_index": 16, "dictionary": [16, 17, 24, 26, 31, 35, 37, 40, 48, 80, 82], "maps": [16, 47], "constraint": [16, 19, 22, 70, 71, 72, 79, 81], "its": [16, 19, 40, 66, 80, 82, 97], "objectiv": [16, 17, 24, 26, 31, 32, 35, 37, 39, 40, 41, 42, 45, 47, 48, 71, 72, 76, 83, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "quadratic_constraints": 16, "quadratic_constraints_index": 16, "infeas": [16, 36, 38, 92, 94], "due": [16, 23, 27, 28, 38, 39, 98], "substitution": [16, 38, 92], "variables_index": 16, "non": [16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 63, 65, 66, 67, 68, 71, 72, 76, 83, 86, 89, 90, 98, 102, 103], "adds": 16, "empty": [16, 18, 23, 25, 28, 33, 34, 39, 92], "default": [16, 19, 27, 32, 38, 41, 44, 46, 47, 49, 54, 55, 88, 97, 103], "x0": [16, 94, 95, 101], "added": [16, 71, 72, 76], "muestr": [16, 18, 22, 23, 27, 28, 32, 33, 34, 35, 38, 39, 41, 43, 44, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 103], "qiskitoptimizationerror": [16, 18, 22, 23, 27, 28, 32, 33, 34, 35, 38, 39, 41, 43, 44, 46, 47, 53, 66, 69, 70, 71, 72, 73, 74, 76, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94], "already": [16, 43, 49], "occupi": 16, "devuelt": [16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 96], "binary_var_dict": 16, "keys": [16, 80, 82], "key_format": 16, "uses": [16, 27, 44, 46, 49, 80, 82], "var_dict": 16, "construct": [16, 43, 47, 72, 96, 97, 103], "format": [16, 55, 57, 58, 60, 62, 65, 66, 67, 68, 76, 92, 93, 94, 99, 102], "int": [16, 19, 22, 25, 26, 27, 33, 37, 38, 40, 41, 44, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 85, 93, 94, 97, 98, 101, 102], "sequenc": 16, "otherwis": [16, 18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 69, 72, 73, 74, 76, 88, 99], "elements": [16, 86, 87, 89, 90], "strings": 16, "substitut": [16, 37, 92], "mapping": [16, 19, 47, 70], "tak": [16, 22, 32, 38, 41], "less": [16, 25], "than": [16, 22, 25, 33, 41, 47, 85, 88], "instantiation": 16, "attempt": 16, "mor": [16, 22, 33, 41, 47, 88], "nest": 16, "dict": [16, 23, 26, 37, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 92], "binary_var_list": [16, 99], "var_list": 16, "cle": 16, "clears": 16, "delet": 16, "all": [16, 19, 23, 24, 28, 29, 46, 67, 69, 84, 99, 101], "function": [16, 17, 22, 24, 26, 27, 31, 32, 35, 37, 39, 40, 41, 42, 45, 47, 48, 72, 83, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "continuous_v": [16, 41, 92, 96], "lowerbound": [16, 22, 33, 41, 70, 85, 92, 93, 102], "upperbound": [16, 22, 33, 41, 70, 85, 92, 93, 102], "1e": [16, 41, 53, 77, 85], "20": [16, 23, 77, 85, 93, 94, 96, 97, 98, 99, 100, 101, 103], "float": [16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 48, 49, 53, 66, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 91, 94, 99], "continuous_var_dict": 16, "low": [16, 22, 33, 41, 66, 67, 80, 82, 85, 99], "bound": [16, 22, 33, 41, 70, 80, 82, 85, 103], "upper": [16, 22, 33, 41, 80, 82], "continuous_var_list": 16, "export_as_lp_string": [16, 92, 102], "string": [16, 17, 22, 23, 24, 26, 28, 31, 35, 37, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "representing": [16, 17, 24, 26, 31, 32, 35, 37, 40, 48, 55, 57, 58, 60, 65, 66, 67, 68], "from_ising": [16, 94], "qubit_op": [16, 47, 88, 91, 103], "offset": [16, 47, 83, 88, 91, 92, 94, 97, 98, 99, 100, 103], "fals": [16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76, 80, 82, 88, 96], "creat": [16, 27, 32, 38, 43, 44, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 80, 82, 85, 88, 94, 97, 99, 103], "operator": [16, 47, 88, 91, 94], "shift": [16, 88], "valu": [16, 17, 19, 20, 22, 24, 25, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 59, 66, 67, 72, 78, 79, 80, 81, 82, 83, 86, 88, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103], "mapp": [16, 88, 91], "sam": [16, 47, 88, 91, 100], "order": [16, 35, 66, 88, 91, 94, 97], "th": [16, 88, 91], "see": [16, 23, 40, 88, 91], "1148": [16, 88, 91], "details": [16, 23, 46, 88, 91], "baseoperator": [16, 88], "constant": [16, 47, 77, 83, 88, 91, 92, 94, 98], "ising": [16, 32, 88, 91, 93, 94, 99, 103], "bool": [16, 18, 19, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76, 80, 82, 88, 102], "treat": [16, 88], "term": [16, 25, 72, 81, 88, 99], "sinc": [16, 23, 28, 46, 88], "else": [16, 23, 28, 97, 98, 99], "ther": [16, 25, 27, 38, 63, 69, 72, 88], "xs": [16, 88], "zs": [16, 88], "notimplementederror": 16, "input": [16, 26, 47, 66, 67], "listop": 16, "get_feasibility_inf": 16, "wheth": [16, 18, 22, 23, 25, 27, 28, 29, 32, 33, 34, 38, 39, 41, 44, 47, 49, 53, 76, 80, 82], "feasibl": [16, 19, 22, 36, 97, 98], "along": 16, "violations": [16, 22], "param": [16, 66], "violat": 16, "len": [16, 97, 98, 101, 103], "total": [16, 61, 66, 97, 98, 100, 101, 102, 103], "vars": [16, 102], "get_linear_constraint": [16, 92], "corresponding": [16, 17, 24, 26, 31, 32, 35, 37, 38, 40, 47, 48, 50, 51, 55, 56, 59, 64, 65, 68, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90], "indexerror": 16, "siz": [16, 22, 35, 55, 98], "keyerror": 16, "linearconstraint": 16, "get_num_binary_vars": 16, "get_num_continuous_vars": 16, "get_num_integer_vars": 16, "get_num_linear_constraints": 16, "get_num_quadratic_constraints": 16, "get_num_vars": 16, "vartyp": [16, 85, 101], "specifi": [16, 18, 22, 27, 32, 33, 38, 41, 44, 47, 51, 55, 57, 58, 60, 65, 66, 67, 68, 69, 103], "type": [16, 27, 29, 32, 35, 36, 38, 66, 69, 70, 72, 85, 92], "filter": 16, "count": [16, 98], "get_quadratic_constraint": [16, 92], "quadraticconstraint": 16, "get_vari": 16, "integer_v": [16, 70, 92, 93, 102], "integer_var_dict": 16, "integer_var_list": 16, "is_feas": [16, 97], "ndarray": [16, 17, 22, 24, 25, 26, 31, 33, 35, 37, 40, 41, 42, 43, 48, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83], "linear_constraint": [16, 92, 93, 102], "sens": [16, 69, 73, 74, 78, 79, 81, 83, 92, 93, 98], "rhs": [16, 78, 79, 81, 92, 93, 98], "spmatrix": [16, 79, 80, 81, 82, 83], "coefficients": [16, 79, 80, 81, 82, 83, 92], "constraintsens": [16, 78, 79, 81, 92], "eq": [16, 70, 92, 93], "equal": [16, 35, 54, 103], "ge": [16, 92, 93], "great": [16, 85], "LE": [16, 92, 93], "c0": [16, 92, 97, 100, 101, 102], "exists": [16, 71, 72, 91], "sets": [16, 47, 60], "tupl": [16, 22, 33, 37, 41, 49, 81, 82, 83, 85, 91, 94, 97], "wrap": 16, "80": 16, "pretty": [16, 17, 24, 26, 31, 35, 37, 40, 48, 102], "width": 16, "output": [16, 22, 23, 26, 28, 39, 41, 82, 101], "disabl": 16, "setting": [16, 23, 28, 39], "might": 16, "exce": 16, "long": [16, 47], "won": 16, "wrapp": [16, 22, 23, 28, 32, 39, 41], "printabl": 16, "quadratic_constraint": [16, 92], "q0": [16, 92], "read_from_lp_fil": 16, "filenam": [16, 60, 66], "loads": 16, "load": [16, 86, 87, 92, 96], "filenotfounderror": 16, "pythonpath": 16, "remove_linear_constraint": [16, 92], "remov": [16, 92, 102], "remove_quadratic_constraint": [16, 92], "substitute_vari": [16, 92], "constants": [16, 92], "replac": [16, 22, 33, 41], "means": 16, "weight": [16, 32, 37, 46, 54, 59, 66, 97, 103], "everything": 16, "referenc": [16, 18, 22, 39, 41, 96, 99], "mak": [16, 47, 55, 92], "sur": [16, 47], "match": [16, 35, 72, 83], "correctly": 16, "bounds": [16, 46, 80, 82, 92, 102], "updat": [16, 19, 20, 102], "accordingly": 16, "substituting": [16, 37], "gets": [16, 92], "inval": [16, 27, 32, 38], "follows": [16, 35, 87], "tim": [16, 19, 92, 96, 97, 100, 101, 102], "coefficient": [16, 70, 88], "zer": [16, 22, 33, 41, 53, 97, 98, 99], "to_ising": [16, 94, 97, 99, 100], "write_to_lp_fil": 16, "writ": [16, 28, 102], "writt": 16, "my_problem": 16, "append": [16, 94, 98, 99, 101], "suffix": [16, 102], "oserror": 16, "open": [16, 102], "docplexexception": 16, "admmoptimization": 17, "found": [17, 18, 19, 24, 25, 26, 31, 33, 34, 35, 37, 40, 48, 98, 102], "admm": [17, 18, 19, 20], "admmstat": 17, "internal": [17, 20, 99], "optimizationresultstatus": [17, 24, 26, 31, 35, 37, 40, 42, 48, 94, 102, 103], "termination": [17, 24, 26, 31, 35, 36, 37, 40, 48], "raw_results": [17, 24, 26, 31, 35, 37, 40, 48], "results": [17, 21, 24, 26, 27, 29, 30, 31, 35, 37, 38, 40, 44, 46, 48, 63, 95, 97, 99, 103], "currently": [17, 24, 26, 31, 35, 37, 40, 48], "dump": [17, 24, 26, 31, 35, 37, 40, 48], "leftovers": [17, 24, 26, 31, 35, 37, 40, 48], "additional": [17, 24, 26, 31, 35, 37, 40, 48, 69, 97], "information": [17, 23, 24, 26, 28, 31, 35, 37, 39, 40, 41, 46, 48, 50, 53, 66, 67, 75], "variable_nam": [17, 24, 26, 31, 35, 37, 40, 48], "variables_dict": [17, 24, 26, 31, 35, 37, 40, 48], "failur": [17, 24, 26, 31, 35, 36, 37, 40, 48, 69, 70, 71, 72, 73, 74, 94], "get_correlations": [17, 24, 26, 31, 35, 37, 40, 48], "get": [17, 24, 26, 31, 35, 37, 40, 48, 54, 60, 98], "zi": [17, 24, 26, 31, 35, 37, 40, 48], "zj": [17, 24, 26, 31, 35, 37, 40, 48], "correlation": [17, 24, 26, 31, 35, 37, 40, 48], "matrix": [17, 24, 25, 26, 31, 35, 37, 40, 48, 60, 66, 80, 82, 92, 97, 99], "qubo_optimiz": [18, 96], "continuous_optimiz": [18, 96], "params": [18, 96, 99], "optimizationalgorithm": [18, 22, 23, 25, 27, 28, 32, 33, 38, 39, 41, 44, 49], "implementation": [18, 19, 20, 43, 44], "heuristic": 18, "gambell": [18, 96], "simonett": [18, 96], "2020": [18, 96, 99], "multi": [18, 22, 33, 41, 96], "block": [18, 19, 96], "heuristics": [18, 96], "mix": [18, 43, 44, 96, 101], "computers": [18, 96], "preprint": [18, 94, 95, 96], "2001": [18, 96], "02069": [18, 96], "effectively": 18, "minimumeigenoptimiz": [18, 37, 38, 44, 95, 96, 97, 98, 99, 100, 101, 102, 103], "initializ": [18, 19, 22, 23, 28, 32, 38, 39, 41, 44, 78, 84, 96, 98, 99], "numpyminimumeigensolv": [18, 31, 32, 38, 94, 95, 96, 97, 99, 100, 101], "admmparameters": [18, 96], "parameters": [18, 19, 22, 23, 38, 41, 98, 102], "current": 18, "get_compatibility_msg": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "checks": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "implementing": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "check": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76, 98], "compatibility": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "incompatibility": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "wer": [18, 25, 33, 34], "is_compat": [18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 44, 49, 76], "tri": [18, 22, 23, 27, 28, 32, 33, 34, 38, 39, 41, 44], "admmoptimizationresult": 18, "rho_initial": [19, 20, 96], "10000": [19, 103], "factor_c": [19, 96], "100000": 19, "bet": [19, 96, 101], "maxit": [19, 96, 97, 99, 102], "10": [19, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "tol": [19, 96], "0001": [19, 22], "max_tim": 19, "inf": 19, "three_block": [19, 96], "vary_rh": 19, "tau_incr": 19, "tau_decr": 19, "mu_r": 19, "mu_merit": 19, "warm_start": 19, "initial": [19, 20, 22, 33, 41, 43, 44], "paramet": [19, 20, 22, 33, 41, 43, 44, 98, 101], "penalizing": 19, "penalization": 19, "maximum": [19, 22, 41, 47, 49, 54, 59, 60, 66, 67, 103], "iterations": [19, 27, 40, 41, 96, 99], "toleranc": [19, 22, 53], "residual": [19, 96], "convergenc": 19, "running": 19, "seconds": 19, "flag": 19, "select": [19, 69], "rul": 19, "incre": 19, "each": [19, 20, 26, 29, 30, 38, 41, 47, 51, 54, 67, 99, 103], "iteration": [19, 26, 29, 38], "according": [19, 25, 43, 44], "primal": 19, "dual": [19, 96], "residuals": [19, 96], "update_rho_by_residuals": 19, "boyd": [19, 96], "parikh": [19, 96], "chu": [19, 96], "peleat": [19, 96], "eckstein": [19, 96], "2011": [19, 96], "distribut": [19, 96], "statistical": [19, 96], "learning": [19, 96], "alternating": [19, 96], "direction": [19, 96], "multipliers": [19, 96], "foundations": [19, 96], "trends": [19, 96], "122": [19, 96], "merit": 19, "start": [19, 22, 29, 33, 36, 41, 43, 44], "pre": [19, 44], "first": [19, 22, 33, 37, 41, 98], "option": 19, "guarante": 19, "even": [19, 96], "should": [19, 29, 33, 35, 43, 44, 89, 90], "tuning": 19, "options": [19, 69, 103], "help": 19, "hint": 19, "wher": [19, 54, 63, 67, 72, 97], "iterativ": [19, 38], "op": [20, 94, 100], "keeps": 20, "track": 20, "various": 20, "stor": [20, 22, 29, 38, 41, 80, 82, 99], "during": [20, 32], "recreat": 20, "third": 20, "abc": [21, 33, 34, 52, 62, 75], "abstract": [21, 33, 34, 52, 57, 62, 75, 78], "aggregat": [21, 30, 44], "minimumeigenoptimizationresult": [21, 30, 32, 37, 44], "combin": [21, 30, 97, 98, 100, 103], "solutionsampl": [21, 24, 26, 30, 31, 35, 48, 51, 94, 102, 103], "rhobeg": 22, "rhoend": 22, "maxfun": 22, "disp": [22, 23, 28, 39, 102], "catol": 22, "0002": 22, "trials": [22, 33, 41], "clip": [22, 33, 41], "100": [22, 33, 41, 66, 67, 96, 98, 99, 102], "multistartoptimiz": [22, 41], "scipy": [22, 39, 40, 41], "fmin_cobyl": 22, "docs": [22, 23, 39, 41, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "doc": [22, 39, 41, 92], "generat": [22, 25, 39, 41, 43, 47, 63, 92, 102], "html": [22, 39, 41, 92], "arguments": [22, 41], "constructor": [22, 41, 85, 96], "specify": [22, 23, 28, 32, 38, 41], "her": [22, 23, 28, 32, 38, 41], "algorithmic": [22, 41], "lat": [22, 41], "invok": [22, 41], "optimum": [22, 41, 99], "consisting": [22, 32, 41, 81, 85], "reason": 22, "chang": [22, 43, 44, 101], "accuracy": [22, 41], "precisely": 22, "guarant": 22, "trust": 22, "region": 22, "controls": 22, "frequency": 22, "impli": 22, "evaluations": 22, "absolut": [22, 53], "trial": [22, 33, 41], "guess": [22, 33, 41], "uniformly": [22, 33, 41, 46, 63], "drawn": [22, 33, 41], "clipping": [22, 33, 41], "unbound": [22, 33, 41, 80, 82], "correspondingly": [22, 33, 41], "contains": [22, 24, 41, 47, 70, 80, 82, 86, 87, 89], "explaining": [22, 27, 32, 38, 41, 44, 49, 76], "describing": [22, 27, 32, 38, 39, 40, 41, 44, 49, 76], "multi_start_solv": [22, 33, 41], "callabl": [22, 33, 41], "runs": [22, 23, 27, 28, 32, 33, 34, 38, 39, 41], "incompat": [22, 23, 27, 28, 33, 34, 38, 39, 41, 76], "cplex_parameters": [23, 102], "project": [23, 102], "is_cplex_install": 23, "icos": 23, "topic": 23, "display": [23, 28, 39, 102], "accepts": [23, 28], "may": [23, 25, 28, 39, 40, 69, 70, 92, 94, 97, 98, 99, 100], "throw": 23, "determin": [23, 72, 80, 82, 93, 94, 95, 97, 98, 103], "static": [23, 25, 28, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76], "depending": [23, 28, 39], "settings": [23, 28, 39], "sdp_solution": 24, "properti": [24, 26, 40], "contain": [24, 69, 70, 71], "explor": [24, 95, 103], "possibl": [24, 69], "sdp": 24, "num_cuts": 25, "sort_cuts": 25, "unique_cuts": 25, "seed": [25, 46, 53, 63, 66, 67, 97, 98, 99, 100, 103], "max": [25, 60, 95, 98, 100, 103], "w": [25, 92, 96, 97, 98, 99], "therefor": 25, "negativ": 25, "adjacency": [25, 60, 66], "graph": [25, 55, 57, 58, 60, 63, 65, 66, 67, 68, 97, 100, 103], "cuts": 25, "sort": [25, 99, 101], "uniqu": 25, "thus": 25, "generator": [25, 46, 53, 63], "max_cut_valu": 25, "adj_matrix": [25, 66, 97], "numpy": [25, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 97, 98, 99, 100, 101, 103], "operation_counts": 26, "n_input_qubits": 26, "n_output_qubits": 26, "intermediate_fval": 26, "threshold": [26, 38, 94], "raw_sampl": [26, 31], "constructs": [26, 33, 37, 40, 81, 83], "specific": [26, 40], "counts": [26, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "operation": [26, 41], "perform": [26, 46, 52, 53], "intermediat": [26, 29, 37, 38, 99, 100], "minimization": [26, 73, 74, 76], "consistent": 26, "probability": [26, 30, 31, 42, 47, 94, 99, 101, 102, 103], "sampling": [26, 27, 31, 46], "gett": [26, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68], "raw": [26, 31], "converters": [27, 32, 35, 38, 44, 69, 70, 75, 76, 93, 97, 99, 100, 101], "penalty": [27, 32, 38, 44, 49, 71, 72, 76, 99], "gas": [27, 95], "improvement": 27, "quadraticprogramconvert": [27, 32, 38, 44, 69, 70, 71, 72, 76], "converting": [27, 32, 38, 44], "internally": [27, 32, 38, 44, 80, 82], "quadraticprogramtoqub": [27, 32, 38, 44, 49, 93, 97, 100, 101], "circuits": [27, 43, 44, 46], "attributeerror": 27, "is_gurobi_install": 28, "suppress": 28, "info": 28, "stdout": 28, "sys": 28, "devnull": 28, "def": [28, 94, 97, 98, 99, 101, 102], "noop": 28, "args": 28, "kwargs": 28, "clos": 28, "flush": 28, "writelin": 28, "qualnam": [29, 36], "boundary": [29, 36], "enum": [29, 36], "recursiveminimumeigenoptimiz": 29, "no_iterations": 29, "last_iteration": [29, 38], "last": [29, 37], "all_iterations": 29, "baseaggregator": [30, 44], "averaging": 30, "min_eigen_solver_result": [31, 99, 100], "eig": [31, 32, 37, 38, 94, 96, 97], "samplingminimumeigensolverresult": 31, "numpyminimumeigensolverresult": 31, "underlying": [31, 48], "solvers": [32, 44], "assum": 32, "thereof": 32, "converts": [32, 72], "expanding": 32, "adding": 32, "terms": [32, 38, 71, 72], "resulting": [32, 51, 99], "translat": [32, 86, 87, 89, 90, 91, 99], "minimal": 32, "vector": [32, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 96, 98, 100, 101], "eigenstat": [32, 97, 99], "correspond": [32, 60, 66, 92, 97, 99], "good": 32, "outlin": [32, 38], "how": [32, 38], "optional": [32, 44], "scal": [32, 38, 71, 72, 76], "applying": [32, 44], "logic": [32, 44, 103], "eigensolv": [32, 44, 46, 48, 49, 95, 97, 98, 99, 100, 103], "implements": 33, "small": 33, "specifying": [35, 79, 81], "_": [35, 98, 99, 101, 103], "x1": [35, 94, 95, 101], "x2": [35, 94, 95, 101], "x3": [35, 101], "var": [35, 70, 94, 95], "maintain": 35, "generating": [35, 97, 98], "union": [35, 98], "possibly": 35, "do": [35, 72, 99], "succeed": 36, "ended": 36, "replacements": 37, "history": [37, 38, 99], "recursiv": [37, 38], "key": [37, 101], "eith": [37, 44, 46, 53, 80, 82], "containing": [37, 46, 50, 53], "minimumeigenoptimizerresult": 37, "invoking": 37, "iteratively": 37, "second": 37, "step": 37, "min_num_vars_optimiz": [37, 38, 94], "min_num_vars": [38, 94], "intermediateresult": 38, "met": [38, 44], "top": [38, 85, 92, 103], "call": [38, 47, 49], "internal_optimiz": 38, "referent": [38, 44, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 93, 97, 103], "bravyi": [38, 94], "2019": [38, 72, 94, 95], "obstacl": [38, 94], "preparation": [38, 94], "symmetry": [38, 94], "protection": [38, 94], "1910": [38, 94], "08980": [38, 94], "until": 38, "apply": [38, 46, 102], "schem": [38, 46, 49, 52, 53, 103], "once": [38, 47], "reach": 38, "every": [38, 71, 72, 76], "after": [38, 47, 51, 102], "remaining": 38, "num_min_vars": 38, "milp": [39, 98], "fx": 40, "imod": 40, "smod": 40, "slsqp": [40, 41], "exit": [40, 103], "documentation": 40, "fmin_slsqp": [40, 41], "actually": 40, "acc": 41, "iprint": 41, "full_output": 41, "request": 41, "verbosity": 41, "silent": 41, "summary": 41, "upon": 41, "iterat": 41, "func": 41, "factory": [43, 44], "overridd": 43, "modify": 43, "behavior": 43, "warm": [43, 44], "regularization": [43, 44], "xi": [43, 44], "corresponds": [43, 44], "create_initial_stat": 43, "initial_vari": 43, "represents": [43, 51], "quantumcircuit": [43, 47, 50, 101], "create_initial_vari": 43, "create_mix": 43, "evolv": 43, "ry": [43, 97, 101], "thet": [43, 97, 98, 101], "rz": [43, 101], "2bet": 43, "num_initial_solutions": 44, "warm_start_factory": 44, "aggregator": 44, "own": 44, "inheriting": 44, "daniel": 44, "egger": [44, 101], "starting": 44, "2009": [44, 101], "10095": [44, 101], "initialization": 44, "circuit_factory": 44, "warmstartqaoacircuitfactory": 44, "ignor": [44, 49], "passing": 44, "computations": 44, "warmstartqaoafactory": 44, "several": 44, "next": 44, "presolv": 44, "encoding": [45, 47, 48, 49, 50, 70, 92, 102, 103], "verifying": 45, "relaxation": 45, "commut": [45, 47], "verify": [45, 98], "baseestimator": 45, "verification": 45, "basis_sampling": 46, "roundingschem": [46, 49, 53], "magic": [46, 51, 103], "rounding": [46, 48, 49, 50, 51, 52, 53, 103], "measur": 46, "measurement": 46, "hardwar": [46, 97, 103], "simulator": 46, "describ": [46, 95, 97], "abs": [46, 53, 63, 98], "attempts": 46, "choos": [46, 69], "strategically": 46, "expectation": [46, 50, 51, 53], "howev": 46, "basis": [46, 51], "roundingcontext": [46, 49, 53, 103], "roundingresult": [46, 48, 49, 52, 53], "did": 46, "compression_rati": [47, 103], "compression": [47, 103], "rati": [47, 103], "divid": [47, 58, 92, 103], "froz": 47, "minimum_recovery_probability": 47, "recovery": 47, "num_qubits": [47, 97, 100, 103], "num_vars": [47, 103], "runtimeerror": 47, "yet": 47, "q2vars": [47, 103], "var2op": 47, "qubit_index": 47, "p": [47, 72, 96, 97, 99, 103], "qrac": [47, 103], "accomplish": 47, "ensur": 47, "inputs": 47, "freez": 47, "prevent": 47, "furth": [47, 99], "modification": 47, "state_preparation_circuit": 47, "prepar": [47, 95, 98, 99, 103], "relaxed_fval": [48, 103], "relaxed_result": [48, 49, 103], "rounding_result": [48, 49, 103], "minimumeigensolverresult": [48, 49, 103], "rounding_schem": [49, 103], "auxiliary": 49, "operators": 49, "process_result": [49, 103], "so": 49, "quantumrandomaccessoptimizationresult": [49, 103], "qra": [49, 103], "rounding_common": 49, "expectation_valu": [50, 51], "complex": [50, 51], "basis_shots": 51, "basis_counts": 51, "measuring": 51, "optimization_algorithm": 51, "atol": 53, "semi": [53, 101, 103], "deterministic": [53, 103], "referr": 53, "near": 53, "determining": 53, "weights": [54, 59, 98, 100], "max_weight": [54, 59, 100], "max_number_of_bins": 54, "optimizationapplication": [54, 56, 57, 59, 61, 63, 64], "application": [54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68], "bin": [54, 97], "packing": [54, 64], "wikipedi": [54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68], "wiki": [54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68], "bin_packing_problem": 54, "items": [54, 59], "capacity": [54, 59], "bins": 54, "get_figur": 54, "plot": [54, 96, 97, 98, 99], "calculat": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 76], "sum": [54, 61, 93, 97, 98, 99, 100, 101, 103], "respectively": 54, "fig": 54, "item": [54, 59], "lists": [54, 60, 92], "items_in_bins": 54, "sample_most_likely": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97], "state_vector": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "most": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "likely": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "quasidistribution": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "statevector": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "quasi": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "probabiliti": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 94, 99], "ints": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "to_quadratic_program": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 100, 103], "graphoptimizationapplication": [55, 58, 60, 65, 66, 67, 68, 100], "networkx": [55, 57, 58, 60, 65, 66, 67, 68, 97, 100, 103], "theory": [55, 65], "clique_": 55, "graph_theory": [55, 65], "suitabl": [55, 57, 58, 60, 65, 66, 67, 68], "build": [55, 57, 58, 60, 65, 66, 67, 68], "maximal": [55, 59], "pos": [55, 57, 58, 60, 65, 66, 67, 68, 97, 100, 103], "without": [55, 57, 58, 60, 65, 66, 67, 68, 103], "colors": [55, 57, 58, 60, 65, 66, 67, 68, 97], "positions": [55, 57, 58, 60, 65, 66, 67, 68, 82], "nod": [55, 57, 58, 60, 65, 66, 67, 68, 97, 98, 100, 102, 103], "subsets": [56, 61, 64], "exact_cov": 56, "calculation": [57, 62], "answer": [57, 62], "understand": [57, 62], "partition": [58, 61, 103], "graph_partition": 58, "groups": 58, "knapsack_problem": 59, "maximum_cut": 60, "get_gset_result": 60, "gset": 60, "parse_gset_format": 60, "read": [60, 66, 102], "2d": 60, "number_set": 61, "partition_problem": 61, "integers": 61, "half": 61, "partitioning": 61, "num_sit": 63, "rng_or_s": 63, "sherrington": 63, "kirkpatrick": 63, "sk": 63, "over": [63, 99], "spins": 63, "w_": [63, 97, 98], "x_ix_j": 63, "configuration": 63, "disord": 63, "chos": 63, "independently": 63, "variants": 63, "disorders": 63, "normal": [63, 97, 98, 103], "distribution": 63, "mean": [63, 94], "varianc": [63, 103], "dmitry": 63, "panchenk": 63, "overview": 63, "1211": 63, "1094": 63, "sit": 63, "pseud": 63, "default_rng": 63, "usag": 63, "set_packing": 64, "stabl": 65, "independent": 65, "independent_set_": 65, "traveling": [66, 97, 98], "salesm": [66, 97, 98], "travelling": [66, 98], "travelling_salesman_problem": 66, "create_random_instanc": [66, 67, 97], "coordinat": [66, 67], "prospectiv": 66, "cycle": 66, "parse_tsplib_format": 66, "tsplib": 66, "edge": [66, 97], "euc_2d": 66, "dat": [66, 98], "tsp_valu": [66, 97], "citi": 66, "length": 66, "num_vehicl": 67, "depot": [67, 98], "vehicl": [67, 98], "routing": [67, 98], "vehicle_routing_problem": 67, "depart": 67, "rout": 67, "vertex": [68, 100], "vertex_cov": [68, 100], "aut": 69, "introducing": 69, "slack": [69, 72, 93], "conv": [69, 70, 76, 93, 100], "problem2": [69, 70, 76], "unsupport": [69, 72, 86, 87], "prop": 70, "sah": 70, "karimi": 70, "pooy": 70, "ronagh": 70, "practical": 70, "annealers": 70, "1706": [70, 93], "01945": [70, 93], "differs": [71, 72, 73, 74], "suppli": 72, "patterns": 72, "kept": 72, "fred": 72, "glov": 72, "formulating": 72, "1811": 72, "11538": 72, "_flipproblemsens": [73, 74], "maximization": [73, 74], "unchang": [73, 74], "flip": [73, 74], "flipp": [73, 74], "anoth": 75, "keep": 75, "quadratic_program": [78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 92], "quadraticprogramelement": [78, 80, 82, 83, 85], "parent": [78, 79, 80, 81, 82, 83, 84, 85], "evaluat": [78, 79, 80, 81, 82, 83, 97, 98, 99, 103], "expression": [79, 80, 81, 82], "spars": [80, 82, 92], "dok_matrix": [80, 82], "evaluate_gradient": [80, 82, 83], "gradient": [80, 82, 83], "to_array": [80, 82, 92], "to_dict": [80, 82, 92], "use_nam": [80, 82, 92], "compress": 82, "way": [82, 98], "symmetric": [82, 92], "summ": 82, "up": 82, "triangl": 82, "q": [82, 92, 95, 96, 98, 99], "objsens": 83, "shap": 83, "expos": 85, "meant": 85, "externally": 85, "as_tupl": 85, "indicator_big_m": 86, "mp": [86, 89, 92, 93, 95, 96, 99, 101, 102], "indicator": 86, "logical": 86, "expressions": 86, "logical_not": 86, "logical_and": 86, "logical_or": 86, "formulation": [86, 98], "deriv": [86, 97, 98], "functions": [87, 99], "ys": 88, "imaginary": 88, "nev": [89, 90, 97], "happ": [89, 90], "quad_prog": 91, "comprising": 91, "sparsepauliop": [91, 93, 97, 100, 103], "pagin": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "01_quadratic_program": 92, "ipynb": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "brevement": 92, "precis": 92, "ocup": 92, "align": [92, 101], "q_0": [92, 103], "sujet": [92, 96, 98], "q_i": [92, 98], "a_i": [92, 93], "r_i": 92, "l_i": 92, "u_i": [92, 98], "matriz": [92, 93, 96, 101], "dimensional": 92, "enter": [92, 93, 94, 95, 98, 100, 101], "translators": [92, 93, 95, 96, 99, 101, 102], "from_docplex_mp": [92, 95, 96, 99, 101, 102], "comienz": 92, "vaci": 92, "ibmdecisionoptimization": 92, "io": [92, 102], "mdl": [92, 96, 99, 101, 102], "lb": [92, 98, 102], "ub": [92, 98, 102], "add_constraint": [92, 96, 99, 101, 102], "iso": [92, 102], "8859": [92, 102], "obj": [92, 98, 99, 102], "c1": [92, 97, 100], "qc1": 92, "lt": [92, 93, 94, 96, 100, 101, 102, 103], "generals": [92, 102], "39": [92, 93, 94, 96, 97, 100, 101, 102, 103], "gt": [92, 93, 94, 96, 100, 102, 103], "empec": 92, "my": 92, "nombr": [92, 97], "superior": [92, 93, 97], "establec": [92, 96, 98, 102, 103], "invoc": [92, 96, 103], "a\u00f1ad": [92, 93], "diccionari": 92, "imprim": [92, 93, 96], "piez": 92, "compens": [92, 95, 99], "u": [92, 96, 97, 102], "qx": 92, "declar": 92, "clav": [92, 98], "coeficient": [92, 93, 97], "multiplic": [92, 101], "dictionari": [92, 99], "Otra": 92, "arregl": 92, "formul": [92, 93, 97, 102], "orden": [92, 97], "7": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "arrays": 92, "cuant": 92, "dens": 92, "dispers": 92, "almacen": 92, "comprim": 92, "simetr": [92, 96], "cuy": [92, 97, 100, 103], "expresion": 92, "sent": [92, 97, 98], "derech": [92, 93], "lin_eq": 92, "lin_leq": 92, "lin_geq": 92, "quad_eq": 92, "quad_leq": 92, "quad_geq": 92, "12": [92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "trat": [92, 97, 101], "leftarrow": 92, "teng": [92, 97, 100, 101], "inviabl": 92, "fuer": 92, "quadraticprogramstatus": 92, "vari": [92, 93, 98, 100], "vec": [92, 94, 98, 103], "itself": 92, "infinit": [92, 97], "prim": [92, 94, 96, 98], "caract": 92, "_e": 92, "17": [92, 93, 94, 97, 101, 103], "21": [92, 93, 94, 95, 96, 97, 98, 101, 103], "dev0": [92, 93, 94, 97, 99, 100, 103], "dbd3961qiskit": 92, "4qiskit": 92, "ibmq": [92, 94, 97, 99, 100], "provider0": [92, 94, 97, 99, 100], "19": [92, 93, 94, 97, 101, 103], "4python": 92, "compilergcc": [92, 101, 102], "0python": 92, "apr": [92, 94, 97, 99, 100], "09": 92, "04": 92, "19oslinuxcpus4memory": 92, "577545166015625wed": 92, "18": [92, 93, 94, 97, 99, 100, 101, 103], "03": 92, "02_converters_for_quadratic_programs": 93, "poder": 93, "Estos": 93, "hamiltonian": [93, 94, 101], "cuales": 93, "usa": [93, 94, 95, 97, 98], "quantum_inf": 93, "conoc": [93, 95, 97, 98], "rutin": [93, 97], "subyacent": [93, 101], "minim": [93, 97, 98, 100, 103], "varied": 93, "convertidor": [93, 100, 101], "descripcion": 93, "funcional": [93, 96, 97, 100], "contien": [93, 94, 95, 96, 103], "desiguald": [93, 96], "iguald": [93, 94, 96, 98], "holgur": 93, "linearequalitytopenalty": [93, 99], "linearinequalitytopenalty": 93, "maximizetominimiz": 93, "minimizetomaximiz": 93, "inequalitytoequalityconvert": 93, "conviert": [93, 97, 102, 103], "calcul": [93, 98, 101, 103], "izquierd": 93, "simbol": 93, "Con": [93, 97], "docplex_mp": 93, "to_docplex_mp": [93, 102], "qp": [93, 94, 95, 96, 97, 99, 100, 101, 102], "xyz_leq": 93, "xyz_geq": 93, "ineq2eq": 93, "qp_eq": 93, "int_slack": [93, 100], "parec": [93, 101], "xyz": 93, "_leg": 93, "_slack": 93, "_geq": 93, "expliqu": 93, "satisfac": 93, "inclus": [93, 97, 98], "punt": [93, 97, 98, 100, 103], "decimal": 93, "segund": [93, 98], "men": [93, 95, 100, 103], "veam": 93, "proposit": 93, "fin": [93, 98, 103], "traduc": [93, 94, 102], "cplex_optimiz": 93, "result_orig": 93, "result_eq": 93, "mientr": [93, 95, 97, 98, 99, 103], "pas": [93, 95, 97, 101], "correspondent": 93, "posicion": 93, "interpreting": 93, "acot": 93, "_leq": 93, "int2bin": 93, "qp_eq_bin": 93, "esenci": 93, "signific": [93, 103], "acept": 93, "ldots": [93, 96, 98], "respet": [93, 97], "prove": 93, "result_eq_bin": 93, "lineeequalitytopenalty": 93, "lineal": [93, 94, 98, 101, 102], "penaliz": [93, 94, 96, 97, 98, 101], "Estas": [93, 98, 101, 103], "sum_i": [93, 97], "grand": [93, 97, 98, 103], "defect": 93, "1e5": 93, "sal": [93, 103], "volv": 93, "lineq2penalty": 93, "26": [93, 100, 101, 103], "52": [93, 100], "104": [93, 100], "208": [93, 100], "156": [93, 100], "117": [93, 100], "416": [93, 100], "312": [93, 100], "211": 93, "234": [93, 100, 101], "130": [93, 100], "260": [93, 100, 101], "210": 93, "209": 93, "418": [93, 101], "836": 93, "442": 93, "provist": 93, "da": [93, 97, 98, 101], "hic": 93, "result_qub": 93, "implic": 93, "informationsoftwareversionqiskit0": [93, 101, 102], "44": [93, 101], "45": [93, 101, 102], "dcec79eqiskit_optimization0": 93, "0qiskit_algorithms0": [93, 102], "13python": [93, 101, 102], "1403": 93, "aug": [93, 101, 102, 103], "24": [93, 102, 103], "2023": [93, 94, 97, 99, 100, 101, 102, 103], "36": 93, "46osdarwincpus10memory": 93, "64": [93, 103], "0thu": [93, 94, 97, 99, 100, 103], "sep": [93, 103], "07": [93, 94, 97, 99, 100, 101, 103], "33": [93, 98], "31": [93, 94, 97, 99, 100, 101, 102], "03_minimum_eigen_optimiz": 94, "abord": [94, 96], "quimic": 94, "fisic": [94, 97], "traduccion": 94, "espin": 94, "mape": 94, "refer": [94, 95], "adecu": [94, 96, 97, 98, 103], "samplingvq": [94, 96, 97, 98], "envuelv": 94, "vuelt": 94, "ilustr": [94, 101], "mostr": [94, 95, 96, 97, 98, 101, 102], "posibl": [94, 95, 97, 98, 103], "mencion": [94, 103], "increment": 94, "tama\u00f1": [94, 95, 100], "prohibit": 94, "altern": [94, 96, 98], "luc": [94, 97], "formulations": [94, 98], "front": 94, "phys": [94, 97], "2014": [94, 97, 98], "kliesch": 94, "koenig": 94, "tang": 94, "algorithm_globals": [94, 97, 98, 99, 100, 101], "plot_histogram": [94, 97], "typing": 94, "desplaz": [94, 95], "iiz": 94, "izi": 94, "zii": 94, "izz": 94, "ziz": 94, "zzi": 94, "coeffs": [94, 97, 100, 103], "75": [94, 97], "traductor": 94, "empez": 94, "inicializ": 94, "quer": 94, "random_s": [94, 97, 98, 99, 100, 101], "10598": [94, 97, 98], "qaoa_m": [94, 101], "initial_point": [94, 101], "exact_m": [94, 101, 103], "peque\u00f1": [94, 98, 101], "exact_result": [94, 95, 103], "qaoa_result": [94, 101], "fraccion": 94, "consolid": [94, 103], "siend": [94, 95, 101], "atribut": [94, 96, 103], "4409914383320322": 94, "2276808656506505": 94, "1413908468641879": 94, "1257339279014548": 94, "020491301242878": 94, "0304288193232328": 94, "0123642766450843": 94, "0009185240404783": 94, "filtr": 94, "acuerd": 94, "get_filtered_sampl": 94, "allowed_status": 94, "res": [94, 101], "filtered_sampl": 94, "005": 94, "perspect": [94, 97], "estadist": [94, 96, 97], "ayud": 94, "medi": 94, "desviacion": 94, "estand": [94, 99, 103], "comprend": [94, 97, 98], "fvals": 94, "std": 94, "9364916731037085": 94, "pes": [94, 97, 98, 100], "visualiz": [94, 95, 96, 98], "suel": [94, 103], "tempran": [94, 97], "samples_for_plot": 94, "join": [94, 98, 101], "enumerat": [94, 101], "reduc": [94, 97], "intermedi": 94, "debaj": [94, 95], "umbral": [94, 95], "constru": [94, 95, 96, 97, 101], "rqao": 94, "rqaoa_result": 94, "1d844ecqiskit": [94, 97, 99, 100], "2qiskit": [94, 97, 99, 100], "nature0": [94, 97, 99, 100], "11python": [94, 97, 99, 100], "202": [94, 97, 99, 100], "31osdarwincpus4memory": [94, 97, 99, 100], "56": [94, 99, 103], "50": [94, 99], "04_grover_optimiz": 95, "combinatori": [95, 97, 98], "junt": [95, 97], "ejecu": [95, 98], "oracul": 95, "reconoc": 95, "min": 95, "cuadern": [95, 98, 99, 103], "component": [95, 97, 98, 100, 103], "gilliam": 95, "woern": [95, 101], "gonciule": 95, "polynomial": 95, "1912": 95, "04088": 95, "ingredient": 95, "O": 95, "amplitud": 95, "difusion": 95, "rangle_n": [95, 101], "bien": [95, 98, 101], "segun": 95, "vag": 95, "quadraticprogramtonegativevalueoracl": 95, "a_y": 95, "prep": 95, "registr": [95, 98], "rangle_m": 95, "negat": [95, 97], "marc": 95, "o_y": 95, "discut": [95, 98], "realid": 95, "requisit": 95, "clarid": 95, "formal": [95, 97], "haci": [95, 98], "abaj": 95, "juguet": 95, "eqnarray": 95, "min_": [95, 96, 98, 101], "2x_0x_2": 95, "x_1x_2": 95, "1x_0": 95, "2x_1": 95, "3x_2": 95, "inicial": [95, 97, 101], "docplex_model1": [95, 101], "codific": [95, 98], "hab": [95, 97, 101, 103], "progres": 95, "grover_optimiz": 95, "x_0": [95, 97, 99, 100, 103], "x_1": [95, 97, 99, 100, 103], "x_2": [95, 97, 99, 100, 103], "tiemp": [95, 97, 98], "randomiz": 95, "personalis": 95, "grafic": [95, 98], "contador": 95, "titul": 95, "eje": 95, "ppor": 95, "101": 95, "intens": 95, "brill": 95, "alta": 95, "fas": [95, 96], "rued": 95, "cantid": [95, 97, 102, 103], "distribu": [95, 97, 98, 101, 103], "verific": [95, 100], "exact_solv": 95, "47": [95, 96, 103], "01": [95, 98], "05_admm_optimiz": 96, "mixt": [96, 98], "mbco": 96, "aparec": [96, 97], "investig": [96, 97, 98, 103], "finanz": [96, 97], "logist": [96, 98], "subseteq": 96, "varphi": 96, "mathrm": [96, 97, 98], "ell": 96, "supuest": 96, "intercal": 96, "cuadr": 96, "x_": [96, 97, 98, 99], "impon": [96, 98], "mbo": 96, "propon": 96, "direccion": 96, "division": 96, "histori": 96, "sab": 96, "propiedad": 96, "convergent": [96, 103], "siempr": [96, 97, 100, 103], "cumpl": 96, "descomposicion": 96, "mbos": 96, "subproblem": 96, "regres": [96, 97, 98], "cost": [96, 98, 101], "discusion": 96, "exhaust": 96, "viabil": 96, "variant": 96, "bloqu": 96, "carg": [96, 98, 102], "paquet": [96, 98, 100], "pyplot": [96, 97, 98, 99], "plt": [96, 97, 98, 99], "cobylaoptimiz": 96, "admm_optimiz": 96, "admmoptimiz": 96, "uncomment": 96, "but": [96, 103], "plan": [96, 98], "instal": [96, 98, 100, 102], "dispon": [96, 97, 98, 100, 101, 103], "handl": 96, "benchmark": 96, "prob": [96, 98, 100], "simpl": [96, 97, 98], "report": 96, "ex6": 96, "cons1": 96, "cons2": 96, "cons3": 96, "usad": 96, "demuestr": [96, 103], "personaliz": 96, "argument": [96, 103], "1001": 96, "gx": 96, "900": 96, "toler": 96, "primari": 96, "converg": [96, 97], "teorem": 96, "activ": [96, 98], "admm_params": 96, "0e": 96, "instanci": [96, 97, 98, 99, 100, 101, 103], "separ": [96, 100], "convex_optimiz": 96, "camp": [96, 97], "residu": 96, "xlabel": [96, 99], "ylabel": [96, 99], "show": [96, 98, 99], "admm_q": 96, "result_q": 96, "clf": 96, "54": 96, "06_examples_max_cut_and_tsp": 97, "cuantit": 97, "ingeni": 97, "encuentr": [97, 100], "definicion": 97, "finit": 97, "contabl": 97, "criteri": 97, "tipic": [97, 98], "distanci": [97, 98, 100], "longitud": 97, "recorr": [97, 98], "consum": [97, 103], "benefici": [97, 103], "produccion": 97, "retorn": [97, 103], "rendimient": [97, 103], "manual": 97, "agrup": 97, "clustering": 97, "cienci": 97, "red": [97, 101, 102], "sistem": 97, "person": 97, "interactu": 97, "influ": 97, "individu": 97, "interaccion": 97, "conexion": 97, "ment": 97, "mercadotecni": 97, "supon": 97, "asum": [97, 103], "compr": 97, "influenci": 97, "predec": 97, "gratuit": [97, 102], "pregunt": 97, "cu\u00e1l": 97, "ingres": 97, "dirig": [97, 100], "ji": [97, 98], "cruz": 97, "Al": [97, 98, 101, 103], "global": 97, "corr": 97, "tild": 97, "textbf": 97, "obteng": 97, "gratis": 97, "principi": 97, "gananci": 97, "otorg": 97, "vuelv": [97, 101], "w_i": 97, "const": 97, "z_iz_j": 97, "naturalez": [97, 98, 103], "aceler": [97, 98], "farhi": [97, 98], "goldston": [97, 98], "gutmann": [97, 98], "enmarc": 97, "potenci": 97, "control": [97, 98, 101, 103], "boldsymbol": [97, 98], "compuert": [97, 98], "phas": [97, 98], "rotacion": [97, 98, 101], "parametriz": [97, 98], "alrededor": [97, 98], "alcanc": [97, 98], "suficient": [97, 98, 101], "respuest": [97, 98], "dificult": 97, "buen": 97, "onda": [97, 98], "entrelaz": [97, 98], "aline": 97, "u_": [97, 98], "coleccion": [97, 98, 100], "prod_": [97, 98], "theta_": [97, 98], "adiabat": 97, "z_iz_jz_k": 97, "annealing": 97, "recoc": 97, "frontiers": 97, "1411": [97, 98], "4028": [97, 98], "weck": 97, "hastings": 97, "troy": 97, "rev": 97, "94": 97, "022309": 97, "2016": 97, "1703": 97, "06199": 97, "useful": 97, "nx": [97, 100, 103], "twolocal": 97, "tsp": 97, "spsa": [97, 98], "add_nodes_from": 97, "arang": 97, "elist": 97, "add_weighted_edges_from": 97, "spring_layout": [97, 100, 103], "draw_graph": 97, "default_ax": 97, "axes": 97, "frameon": 97, "draw_networkx": 97, "node_color": 97, "node_siz": 97, "600": 97, "alpha": [97, 99], "edge_labels": 97, "get_edge_attribut": 97, "draw_networkx_edge_labels": 97, "computing": 97, "temp": 97, "get_edge_dat": 97, "071509e": 97, "30": [97, 98, 102], "best_cost_brut": 97, "revers": [97, 99], "zfill": 97, "xbest_brut": 97, "nbest": 97, "best": [97, 102], "max_cut": 97, "x_3": [97, 99, 100, 103], "qubitop": 97, "iizz": 97, "iziz": 97, "izzi": 97, "ziiz": 97, "zzii": 97, "convirt": 97, "making": 97, "getting": 97, "lowest": 97, "eigenvalu": [97, 103], "eigenvector": 97, "ee": 97, "compute_minimum_eigenvalu": 97, "energy": 97, "cicl": 97, "retroaliment": 97, "123": [97, 99, 100], "300": 97, "reps": [97, 99, 100], "entanglement": 97, "optimizer_tim": [97, 100, 103], "4996861455587311": 97, "708028078079224": 97, "999686145558731": 97, "vqe_optimiz": 97, "notori": 97, "atencion": 97, "cientif": 97, "durant": [97, 98], "sigl": 97, "repercusion": 97, "coloquial": 97, "habl": [97, 98], "va": [97, 98], "ciud": [97, 100], "vend": 97, "mercanc": 97, "camin": 97, "visit": [97, 98, 100], "ciudad": 97, "natal": 97, "viaj": [97, 98], "vent": 97, "menor": 97, "durez": 97, "ubicu": 97, "relev": [97, 103], "surg": [97, 103], "analisis": 97, "hamilton": 97, "xix": 97, "resum": [97, 98], "cerr": 97, "polinomial": [97, 98], "ocurr": 97, "equival": 97, "especifiqu": 97, "sumand": 97, "prospect": 97, "notin": 97, "fronter": 97, "equiv": 97, "supondr": 97, "pon": 97, "sum_p": 97, "asegur": [97, 98, 101], "to_numpy_array": 97, "distanc": [97, 98], "48": 97, "91": 97, "63": 97, "itertools": 97, "permutations": 97, "brute_force_tsp": 97, "last_best_distanc": 97, "1e10": 97, "pre_j": 97, "best_ord": 97, "best_distanc": 97, "forc": 97, "draw_tsp_solution": 97, "g2": 97, "digraph": 97, "add_edg": 97, "edge_color": 97, "font_color": 97, "x_0_0": 97, "x_1_1": 97, "x_1_2": 97, "x_2_1": 97, "x_2_2": 97, "x_0_1": 97, "x_1_0": 97, "x_2_0": 97, "x_0_2": 97, "c2": [97, 100], "c3": [97, 100], "c4": [97, 100], "c5": [97, 100], "qp2qub": 97, "7581": 97, "iiiiiiiiz": [97, 100], "iiiiiiizi": [97, 100], "iiiiiizii": [97, 100], "iiiiiziii": [97, 100], "iiiiziiii": [97, 100], "iiiziiiii": [97, 100], "iiziiiiii": [97, 100], "iziiiiiii": [97, 100], "ziiiiiiii": [97, 100], "iiiiiiizz": [97, 100], "iiiiiiziz": [97, 100], "iiiiiizzi": [97, 100], "iiiiiziiz": [97, 100], "iiiiizizi": [97, 100], "iiiiizzii": [97, 100], "iiiiziiiz": [97, 100], "iiiiziizi": [97, 100], "iiiizizii": [97, 100], "iiiizziii": [97, 100], "iiiziiiiz": [97, 100], "iiiziiizi": [97, 100], "iiiziizii": [97, 100], "iiiziziii": [97, 100], "iiizziiii": [97, 100], "iiziiiiiz": [97, 100], "iiziiiizi": [97, 100], "iiziiizii": [97, 100], "iiziiziii": [97, 100], "iiziziiii": [97, 100], "iizziiiii": [97, 100], "iziiiiiiz": [97, 100], "iziiiiizi": [97, 100], "iziiiizii": [97, 100], "iziiiziii": [97, 100], "iziiziiii": [97, 100], "iziziiiii": [97, 100], "izziiiiii": [97, 100], "ziiiiiiiz": [97, 100], "ziiiiiizi": [97, 100], "ziiiiizii": [97, 100], "ziiiiziii": [97, 100], "ziiiziiii": [97, 100], "ziiziiiii": [97, 100], "ziziiiiii": [97, 100], "zziiiiiii": [97, 100], "1282": 97, "1268": 97, "1290": 97, "606": 97, "7379": 97, "7326": 97, "024699521861": 97, "28": [97, 101, 102], "526036977767944": 97, "57": [97, 100], "58": 97, "07_examples_vehicle_routing": 98, "industri": 98, "usd": 98, "183": 98, "billon": 98, "mundial": 98, "2015": 98, "proveedor": [98, 103], "servici": 98, "camion": 98, "portacontenedor": 98, "deposit": [98, 100], "noch": 98, "sirv": 98, "ubic": 98, "client": 98, "dia": 98, "Hay": 98, "desafi": 98, "mill": 98, "emple": [98, 103], "similar": 98, "formaliz": 98, "idealiz": 98, "trabaj": [98, 103], "entreg": 98, "euclidian": 98, "vuel": 98, "pajar": 98, "quizas": 98, "hibr": 98, "parcial": 98, "enrut": 98, "vrp": 98, "extiend": 98, "vendedor": [98, 100], "viajer": [98, 100], "applegat": 98, "mtz": 98, "tuck": 98, "zemlin": 98, "1960": 98, "segment": 98, "convencion": 98, "dobl": 98, "enlac": [98, 102], "delt": 98, "0i": 98, "j0": 98, "u_j": 98, "q_j": 98, "neq": 98, "ponder": 98, "arcos": 98, "posit": [98, 100, 101], "terc": 98, "cot": 98, "bifurc": 98, "aras": 98, "empaquet": [98, 100], "bf": 98, "02": [98, 102, 103], "dimension": 98, "sigu": 98, "destac": 98, "destin": 98, "polinomi": 98, "moment": 98, "lagrangian": 98, "aument": [98, 103], "ih": 98, "_i": [98, 101], "_n": 98, "_0": 98, "2an": 98, "2ak": 98, "pil": 98, "programming": 98, "acm": 98, "326": 98, "329": 98, "doi": 98, "1145": 98, "321043": 98, "321046": 98, "bixby": 98, "chvatal": 98, "cook": 98, "princeton": 98, "university": 98, "press": 98, "isbn": 98, "978": 98, "691": 98, "12993": 98, "exceptions": 98, "cplexerror": 98, "warning": 98, "math": 98, "coloc": 98, "__init__": 98, "generate_instanc": 98, "1543": [98, 99], "xc": 98, "rand": 98, "yc": 98, "ii": 98, "jj": 98, "randomly": 98, "classicaloptimiz": 98, "compute_allowed_combinations": 98, "factorial": 98, "cplex_solution": 98, "refactoring": 98, "my_obj": 98, "reshap": 98, "my_ub": 98, "my_lb": 98, "my_ctype": 98, "my_rhs": 98, "my_sens": 98, "my_prob": 98, "populatebyrow": 98, "exc": 98, "get_valu": 98, "get_objective_valu": 98, "set_sens": 98, "set_log_stream": 98, "set_error_stream": 98, "set_warning_stream": 98, "set_results_stream": 98, "rows": 98, "col": [98, 103], "coef": 98, "tour": 98, "elimination": 98, "lin_expr": 98, "classical_optimiz": 98, "fashion": 98, "classical_cost": 98, "put": 98, "missing": 98, "visualize_solution": 98, "title_str": 98, "figur": [98, 99], "scatt": 98, "200": 98, "annotat": 98, "ms": 98, "grid": 98, "ix": 98, "iy": 98, "arrow": 98, "length_includes_h": 98, "head_width": 98, "titl": 98, "estrell": 98, "flech": 98, "quantumoptimiz": 98, "binary_representation": 98, "algebr": 98, "construct_problem": 98, "solve_problem": 98, "resuelv": [98, 100], "minimuneigenoptimiz": 98, "x_sol": 98, "instance_vec": 98, "w_list": 98, "id_n": 98, "eye": 98, "im_n_1": 98, "ones": 98, "iv_n_1": 98, "iv_n": 98, "neg_iv_n_1": 98, "vn": 98, "axis": 98, "interactions": 98, "kron": 98, "dot": 98, "contribution": 98, "path": 98, "fun": [98, 103], "lambd": [98, 99, 101], "around": 98, "quantum_optimiz": 98, "comprob": 98, "binary_cost": 98, "could": 98, "correctness": 98, "unavail": 98, "nameerror": 98, "ple": 98, "cells": 98, "abov": 98, "132": 98, "11148115684045": 98, "1114811568365": 98, "notes": 98, "tard": 98, "hor": 98, "log": 98, "quantum_solution": 98, "quantum_cost": 98, "x_quantum": 98, "kk": 98, "comparison": 98, "coincid": 98, "ilp": 98, "seran": 98, "viabl": 98, "garant": 98, "53": [98, 103], "08_cvar_optimization": 99, "riesg": 99, "condicional": 99, "conditional": 99, "risk": 99, "confianz": 99, "promedi": 99, "enfoc": 99, "suaviz": 99, "panoram": 99, "barkouts": 99, "improving": 99, "256": 99, "123456": 99, "assets": 99, "budget": 99, "scaling": 99, "mu": [99, 101], "7313": 99, "9893": 99, "2725": 99, "8750": 99, "7667": 99, "3622": 99, "sigm": [99, 101], "7312": 99, "6233": 99, "4689": 99, "5452": 99, "0082": 99, "3809": 99, "4732": 99, "7538": 99, "4659": 99, "0733": 99, "8945": 99, "4095": 99, "0007": 99, "4301": 99, "5067": 99, "2012": 99, "0922": 99, "6231": 99, "1509": 99, "8992": 99, "portfoli": 99, "random_model": 99, "covarianc": 99, "portfolio_optimization": 99, "opt_result": 99, "27835": 99, "x_4": [99, 100, 103], "x_5": [99, 100, 103], "analysis": 99, "would": 99, "necessary": 99, "translation": 99, "linear2penalty": 99, "num_parameters": 99, "alphas": 99, "confidenc": 99, "levels": 99, "progress": 99, "test": 99, "callback": 99, "stddev": 99, "real_if_clos": 99, "loop": 99, "aggregation": 99, "opt_alg": 99, "2783500000000174": 99, "figsiz": 99, "linewidth": 99, "label": 99, "2f": [99, 103], "legend": 99, "loc": 99, "fontsiz": 99, "xlim": 99, "xticks": 99, "yticks": 99, "objective_valu": 99, "x_bin": 99, "sb": 99, "ind": 99, "argsort": 99, "fromit": 99, "binary_probabiliti": 99, "dtype": 99, "4f": 99, "00": [99, 101, 102], "0000": 99, "2895": 99, "49": 99, "09_application_class": 100, "subcoleccion": 100, "esten": 100, "clan": 100, "cliqu": 100, "subgraf": 100, "induc": 100, "establ": 100, "rut": 100, "vehicul": 100, "dibuj": 100, "anteman": 100, "pid": 100, "busqu": 100, "cubiert": 100, "vertexcov": 100, "random_regular_graph": [100, 103], "c6": 100, "c7": 100, "c8": 100, "nsolution": 100, "ntim": 100, "721126079559326": 100, "articul": 100, "0846190452575684": 100, "previous": 100, "section": [100, 102], "624": 100, "520": 100, "468": 100, "780": 100, "936": 100, "832": 100, "1040": 100, "1248": 100, "650": 100, "1560": 100, "2080": 100, "1043": 100, "1564": 100, "2085": 100, "2606": 100, "3127": 100, "2600": 100, "num": 100, "1417": 100, "258": [100, 101], "388": 100, "517": 100, "647": 100, "776": 100, "390": 100, "195": 100, "65": 100, "10_warm_start_qao": 101, "tx": 101, "diagonal": [101, 103], "arranc": 101, "marecek": 101, "modelling": 101, "imports": 101, "quadratic_program_to_qub": 101, "create_problem": 101, "relax_problem": 101, "relaxed_problem": 101, "deepcopy": 101, "0913": 101, "2415": 101, "4436": 101, "892": 101, "4051": 101, "07978412": 101, "00768914": 101, "11227606": 101, "06842969": 101, "01016793": 101, "00839765": 101, "10922887": 101, "03043424": 101, "0020045": 101, "00670929": 101, "0147937": 101, "985353": 101, "02307313": 101, "05249785": 101, "00904119": 101, "6043817": 101, "03740115": 101, "00945322": 101, "79839634": 101, "07616951": 101, "08464544": 101, "15956824": 101, "03075656": 101, "44910424": 101, "27371876": 101, "04067172": 101, "x4": 101, "0335906": 101, "x5": 101, "21845774": 101, "12173696": 101, "008018": 101, "02683716": 101, "0591748": 101, "970706": 101, "09229252": 101, "2099914": 101, "03616476": 101, "2087634": 101, "1496046": 101, "03781288": 101, "59679268": 101, "30467804": 101, "16929088": 101, "7689322": 101, "manten": 101, "coherent": 101, "intern": [101, 103], "84880018": 101, "85": 101, "40922044": 101, "82756812": 101, "10474511999999": 101, "33779215999999": 101, "34487328": 101, "42": 101, "90768968": 101, "25672692": 101, "37044588": 101, "40530104": 101, "43763867999999": 101, "65993794": 101, "4707564": 101, "16847247999999": 101, "41462863999999": 101, "43": 101, "89799534": 101, "52806848": 101, "34065100000001": 101, "28602462": 101, "68314192": 101, "85852282": 101, "259": 101, "55339164": 101, "22669163999996": 101, "262": 101, "37689163999994": 101, "57899163999997": 101, "267": 101, "02739163999996": 101, "54049163999997": 101, "384": 101, "20308746": 101, "inici": 101, "01205502568274": 101, "17524995761801201": 101, "4803888163984595e": 101, "9709053264087679": 101, "7384168677494151": 101, "9999999916475085": 101, "14438904470168346": 101, "c_stars": 101, "12345": 101, "768932200000002": 101, "phi": 101, "bigotimes_": 101, "r_y": 101, "theta_i": 101, "angul": 101, "arcsin": 101, "c_star": 101, "init_qc": 101, "idx": 101, "mpl": 101, "style": 101, "clifford": 101, "mezclador": 101, "h_": 101, "ws": 101, "pmatrix": 101, "2c_i": 101, "c_i": 101, "exponenci": 101, "\u03b2": 101, "ws_mix": 101, "ws_qaoa_m": 101, "initial_stat": 101, "ws_qao": 101, "ws_qaoa_result": 101, "format_qaoa_sampl": 101, "max_l": 101, "qaoa_r": 101, "3f": 101, "1e2": 101, "1f": 101, "001110": 101, "769": 101, "011010": 101, "744": 101, "001011": 101, "671": 101, "101010": 101, "626": 101, "010110": 101, "100110": 101, "953": 101, "000111": 101, "349": 101, "110010": 101, "410": 101, "010011": 101, "013": 101, "100011": 101, "559": 101, "72": 101, "warmstartqaoaoptimiz": 101, "ws_result": 101, "1qiskit_algorithms0": 101, "1qiskit_optimization0": [101, 102], "20230728": [101, 102], "hat": [101, 102], "00oslinuxcpus12memory": [101, 102], "056411743164062wed": [101, 102], "59": 101, "cet": [101, 102], "11_using_classical_optimization_solvers_and_models": 102, "api": 102, "guard": 102, "dependent": 102, "vien": 102, "cplex_result": 102, "gurobi_result": 102, "restrict": 102, "production": 102, "expir": 102, "2025": 102, "resolu": [102, 103], "mensaj": 102, "threads": 102, "timelimit": 102, "identifi": [102, 103], "22d6266e5": 102, "cpxparam_read_datacheck": 102, "cpxparam_threads": 102, "cpxparam_timelimit": 102, "10000000000000001": 102, "incumbent": 102, "000000": 102, "sec": 102, "ticks": 102, "processing": 102, "amp": 102, "sequential": 102, "branch": 102, "ndisplay": 102, "024179976472345502": 102, "05819514104929059": 102, "16262615426689528": 102, "1342595428408242": 102, "048555539627953996": 102, "docplex_model": 102, "dvar": 102, "stringi": 102, "tempfil": 102, "namedtemporaryfil": 102, "gp": 102, "gpy_display": 102, "convenienc": 102, "tmp_fil": 102, "gurobipy_model": 102, "addvar": 102, "vtype": 102, "grb": 102, "setobjectiv": 102, "addconstr": 102, "browsing": 102, "mps": 102, "captur": 102, "detail": 102, "r0": 102, "vem": 102, "from_gurobipy": 102, "docpblex": 102, "qp2": 102, "to_gurobipy": 102, "gmod": 102, "dmod": 102, "nconvert": 102, "ind_mod": 102, "add_indicator": 102, "lc1": 102, "comp": 102, "nativ": 102, "ncplex": 102, "optimal_solution": 102, "1system": 102, "12_quantum_random_access_optimiz": 103, "ahorr": 103, "semidterministicrounding": 103, "Nos": 103, "asegurat": 103, "quadraticprograms": 103, "num_nod": 103, "with_labels": 103, "difier": 103, "acomod": 103, "recuper": 103, "bits": 103, "compresion": 103, "examin": 103, "aka": 103, "our": 103, "achiev": 103, "xx": 103, "xy": 103, "xz": 103, "yx": 103, "zx": 103, "yy": 103, "yz": 103, "zy": 103, "zz": 103, "known": 103, "pdf": 103, "03167v2": 103, "semidterministic_rounding": 103, "avanz": 103, "comprension": 103, "simplific": 103, "neces": 103, "ajust": 103, "unidad": 103, "999999989772657": 103, "dic": 103, "pertenec": 103, "maxcut_partition": 103, "plac": 103, "vqeresult": 103, "0x1478add00": 103, "semideterministricrounding": 103, "semidetermin": 103, "candidat": 103, "cerc": 103, "67": 103, "optar": 103, "dispar": 103, "impact": 103, "divers": 103, "pretend": 103, "identific": 103, "magic_rounding": 103, "999996519407159": 103, "recopil": 103, "recuent": 103, "duplic": 103, "empir": 103, "largest": 103, "0094": 103, "0112": 103, "0195": 103, "0205": 103, "0214": 103, "0194": 103, "0204": 103, "021599999999999998": 103, "021": 103, "especial": 103, "encapsul": 103, "dir": 103, "startswith": 103, "getattr": 103, "aux_operators_evaluat": 103, "010835872623325702": 103, "9999999914513272": 103, "026074300411246972": 103, "999999991452347": 103, "01044933784106082": 103, "04120945001189341": 103, "02868127134978543": 103, "9999999973575187": 103, "014064208211884945": 103, "9999999973585384": 103, "algorithmresult": 103, "0x14789b880": 103, "cost_function_evals": 103, "114": 103, "499994593889271": 103, "optimal_circuit": 103, "\u03b8": 103, "q_1": 103, "optimal_parameters": 103, "parametervectorelement": 103, "3782657558818425": 103, "6307309944567154": 103, "872906908815765": 103, "1989998525444124": 103, "8660234975739094": 103, "9853046968649906": 103, "7699284547923341": 103, "5498132912316986": 103, "optimal_point": 103, "37826576": 103, "63073099": 103, "87290691": 103, "19899985": 103, "8660235": 103, "9853047": 103, "76992845": 103, "54981329": 103, "optimal_valu": 103, "optimizer_evals": 103, "optimizer_result": 103, "jac": 103, "nfev": 103, "nit": 103, "njev": 103, "19381928443908691": 103, "flexibil": 103, "sdr_results": 103, "qrao_results_sdr": 103, "999994593889271": 103, "mr_results": 103, "qrao_results_mr": 103, "conmut": 103, "pedagog": 103, "inesper": 103, "descubr": 103, "recomend": 103, "envi": 103, "encodingcommutationverifi": 103, "discrep": 103, "coinc": 103, "verifi": 103, "str_dvars": 103, "obj_val": 103, "encoded_obj_val": 103, "isclos": 103, "violation": 103, "caus": 103, "infraccion": 103, "descubiert": 103, "agradec": 103, "pud": 103, "nosotr": 103, "8a52d88qiskit": 103, "10python": 103, "1316": 103, "17osdarwincpus10memory": 103}, "objects": {"": [[0, 0, 0, "-", "qiskit_optimization"]], "qiskit_optimization": [[15, 1, 1, "", "QiskitOptimizationError"], [16, 3, 1, "", "QuadraticProgram"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "applications"], [4, 0, 0, "-", "converters"], [5, 0, 0, "-", "problems"], [6, 0, 0, "-", "translators"]], "qiskit_optimization.QiskitOptimizationError": [[15, 2, 1, "", "add_note"], [15, 2, 1, "", "with_traceback"]], "qiskit_optimization.QuadraticProgram": [[16, 2, 1, "", "binary_var"], [16, 2, 1, "", "binary_var_dict"], [16, 2, 1, "", "binary_var_list"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "continuous_var"], [16, 2, 1, "", "continuous_var_dict"], [16, 2, 1, "", "continuous_var_list"], [16, 2, 1, "", "export_as_lp_string"], [16, 2, 1, "", "from_ising"], [16, 2, 1, "", "get_feasibility_info"], [16, 2, 1, "", "get_linear_constraint"], [16, 2, 1, "", "get_num_binary_vars"], [16, 2, 1, "", "get_num_continuous_vars"], [16, 2, 1, "", "get_num_integer_vars"], [16, 2, 1, "", "get_num_linear_constraints"], [16, 2, 1, "", "get_num_quadratic_constraints"], [16, 2, 1, "", "get_num_vars"], [16, 2, 1, "", "get_quadratic_constraint"], [16, 2, 1, "", "get_variable"], [16, 2, 1, "", "integer_var"], [16, 2, 1, "", "integer_var_dict"], [16, 2, 1, "", "integer_var_list"], [16, 2, 1, "", "is_feasible"], [16, 2, 1, "", "linear_constraint"], [16, 4, 1, "", "linear_constraints"], [16, 4, 1, "", "linear_constraints_index"], [16, 2, 1, "", "maximize"], [16, 2, 1, "", "minimize"], [16, 4, 1, "", "name"], [16, 4, 1, "", "objective"], [16, 2, 1, "", "prettyprint"], [16, 2, 1, "", "quadratic_constraint"], [16, 4, 1, "", "quadratic_constraints"], [16, 4, 1, "", "quadratic_constraints_index"], [16, 2, 1, "", "read_from_lp_file"], [16, 2, 1, "", "remove_linear_constraint"], [16, 2, 1, "", "remove_quadratic_constraint"], [16, 4, 1, "", "status"], [16, 2, 1, "", "substitute_variables"], [16, 2, 1, "", "to_ising"], [16, 4, 1, "", "variables"], [16, 4, 1, "", "variables_index"], [16, 2, 1, "", "write_to_lp_file"]], "qiskit_optimization.algorithms": [[17, 3, 1, "", "ADMMOptimizationResult"], [18, 3, 1, "", "ADMMOptimizer"], [19, 3, 1, "", "ADMMParameters"], [20, 3, 1, "", "ADMMState"], [21, 3, 1, "", "BaseAggregator"], [22, 3, 1, "", "CobylaOptimizer"], [23, 3, 1, "", "CplexOptimizer"], [24, 3, 1, "", "GoemansWilliamsonOptimizationResult"], [25, 3, 1, "", "GoemansWilliamsonOptimizer"], [26, 3, 1, "", "GroverOptimizationResult"], [27, 3, 1, "", "GroverOptimizer"], [28, 3, 1, "", "GurobiOptimizer"], [29, 3, 1, "", "IntermediateResult"], [30, 3, 1, "", "MeanAggregator"], [31, 3, 1, "", "MinimumEigenOptimizationResult"], [32, 3, 1, "", "MinimumEigenOptimizer"], [33, 3, 1, "", "MultiStartOptimizer"], [34, 3, 1, "", "OptimizationAlgorithm"], [35, 3, 1, "", "OptimizationResult"], [36, 3, 1, "", "OptimizationResultStatus"], [37, 3, 1, "", "RecursiveMinimumEigenOptimizationResult"], [38, 3, 1, "", "RecursiveMinimumEigenOptimizer"], [39, 3, 1, "", "ScipyMilpOptimizer"], [40, 3, 1, "", "SlsqpOptimizationResult"], [41, 3, 1, "", "SlsqpOptimizer"], [42, 3, 1, "", "SolutionSample"], [43, 3, 1, "", "WarmStartQAOAFactory"], [44, 3, 1, "", "WarmStartQAOAOptimizer"], [2, 0, 0, "-", "qrao"]], "qiskit_optimization.algorithms.ADMMOptimizationResult": [[17, 4, 1, "", "fval"], [17, 2, 1, "", "get_correlations"], [17, 2, 1, "", "prettyprint"], [17, 4, 1, "", "raw_results"], [17, 4, 1, "", "samples"], [17, 4, 1, "", "state"], [17, 4, 1, "", "status"], [17, 4, 1, "", "variable_names"], [17, 4, 1, "", "variables"], [17, 4, 1, "", "variables_dict"], [17, 4, 1, "", "x"]], "qiskit_optimization.algorithms.ADMMOptimizer": [[18, 2, 1, "", "get_compatibility_msg"], [18, 2, 1, "", "is_compatible"], [18, 4, 1, "", "parameters"], [18, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.BaseAggregator": [[21, 2, 1, "", "aggregate"]], "qiskit_optimization.algorithms.CobylaOptimizer": [[22, 4, 1, "", "clip"], [22, 2, 1, "", "get_compatibility_msg"], [22, 2, 1, "", "is_compatible"], [22, 2, 1, "", "multi_start_solve"], [22, 2, 1, "", "solve"], [22, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.CplexOptimizer": [[23, 4, 1, "", "cplex_parameters"], [23, 4, 1, "", "disp"], [23, 2, 1, "", "get_compatibility_msg"], [23, 2, 1, "", "is_compatible"], [23, 2, 1, "", "is_cplex_installed"], [23, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult": [[24, 4, 1, "", "fval"], [24, 2, 1, "", "get_correlations"], [24, 2, 1, "", "prettyprint"], [24, 4, 1, "", "raw_results"], [24, 4, 1, "", "samples"], [24, 4, 1, "", "sdp_solution"], [24, 4, 1, "", "status"], [24, 4, 1, "", "variable_names"], [24, 4, 1, "", "variables"], [24, 4, 1, "", "variables_dict"], [24, 4, 1, "", "x"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer": [[25, 2, 1, "", "get_compatibility_msg"], [25, 2, 1, "", "is_compatible"], [25, 2, 1, "", "max_cut_value"], [25, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GroverOptimizationResult": [[26, 4, 1, "", "fval"], [26, 2, 1, "", "get_correlations"], [26, 4, 1, "", "intermediate_fval"], [26, 4, 1, "", "n_input_qubits"], [26, 4, 1, "", "n_output_qubits"], [26, 4, 1, "", "operation_counts"], [26, 2, 1, "", "prettyprint"], [26, 4, 1, "", "raw_results"], [26, 4, 1, "", "raw_samples"], [26, 4, 1, "", "samples"], [26, 4, 1, "", "status"], [26, 4, 1, "", "threshold"], [26, 4, 1, "", "variable_names"], [26, 4, 1, "", "variables"], [26, 4, 1, "", "variables_dict"], [26, 4, 1, "", "x"]], "qiskit_optimization.algorithms.GroverOptimizer": [[27, 2, 1, "", "get_compatibility_msg"], [27, 2, 1, "", "is_compatible"], [27, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.GurobiOptimizer": [[28, 4, 1, "", "disp"], [28, 2, 1, "", "get_compatibility_msg"], [28, 2, 1, "", "is_compatible"], [28, 2, 1, "", "is_gurobi_installed"], [28, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.IntermediateResult": [[29, 4, 1, "", "ALL_ITERATIONS"], [29, 4, 1, "", "LAST_ITERATION"], [29, 4, 1, "", "NO_ITERATIONS"]], "qiskit_optimization.algorithms.MeanAggregator": [[30, 2, 1, "", "aggregate"]], "qiskit_optimization.algorithms.MinimumEigenOptimizationResult": [[31, 4, 1, "", "fval"], [31, 2, 1, "", "get_correlations"], [31, 4, 1, "", "min_eigen_solver_result"], [31, 2, 1, "", "prettyprint"], [31, 4, 1, "", "raw_results"], [31, 4, 1, "", "raw_samples"], [31, 4, 1, "", "samples"], [31, 4, 1, "", "status"], [31, 4, 1, "", "variable_names"], [31, 4, 1, "", "variables"], [31, 4, 1, "", "variables_dict"], [31, 4, 1, "", "x"]], "qiskit_optimization.algorithms.MinimumEigenOptimizer": [[32, 2, 1, "", "get_compatibility_msg"], [32, 2, 1, "", "is_compatible"], [32, 4, 1, "", "min_eigen_solver"], [32, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.MultiStartOptimizer": [[33, 4, 1, "", "clip"], [33, 2, 1, "", "get_compatibility_msg"], [33, 2, 1, "", "is_compatible"], [33, 2, 1, "", "multi_start_solve"], [33, 2, 1, "", "solve"], [33, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.OptimizationAlgorithm": [[34, 2, 1, "", "get_compatibility_msg"], [34, 2, 1, "", "is_compatible"], [34, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.OptimizationResult": [[35, 4, 1, "", "fval"], [35, 2, 1, "", "get_correlations"], [35, 2, 1, "", "prettyprint"], [35, 4, 1, "", "raw_results"], [35, 4, 1, "", "samples"], [35, 4, 1, "", "status"], [35, 4, 1, "", "variable_names"], [35, 4, 1, "", "variables"], [35, 4, 1, "", "variables_dict"], [35, 4, 1, "", "x"]], "qiskit_optimization.algorithms.OptimizationResultStatus": [[36, 4, 1, "", "FAILURE"], [36, 4, 1, "", "INFEASIBLE"], [36, 4, 1, "", "SUCCESS"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult": [[37, 4, 1, "", "fval"], [37, 2, 1, "", "get_correlations"], [37, 4, 1, "", "history"], [37, 2, 1, "", "prettyprint"], [37, 4, 1, "", "raw_results"], [37, 4, 1, "", "replacements"], [37, 4, 1, "", "samples"], [37, 4, 1, "", "status"], [37, 4, 1, "", "variable_names"], [37, 4, 1, "", "variables"], [37, 4, 1, "", "variables_dict"], [37, 4, 1, "", "x"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer": [[38, 2, 1, "", "get_compatibility_msg"], [38, 2, 1, "", "is_compatible"], [38, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.ScipyMilpOptimizer": [[39, 4, 1, "", "disp"], [39, 2, 1, "", "get_compatibility_msg"], [39, 2, 1, "", "is_compatible"], [39, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.SlsqpOptimizationResult": [[40, 4, 1, "", "fval"], [40, 4, 1, "", "fx"], [40, 2, 1, "", "get_correlations"], [40, 4, 1, "", "imode"], [40, 4, 1, "", "its"], [40, 2, 1, "", "prettyprint"], [40, 4, 1, "", "raw_results"], [40, 4, 1, "", "samples"], [40, 4, 1, "", "smode"], [40, 4, 1, "", "status"], [40, 4, 1, "", "variable_names"], [40, 4, 1, "", "variables"], [40, 4, 1, "", "variables_dict"], [40, 4, 1, "", "x"]], "qiskit_optimization.algorithms.SlsqpOptimizer": [[41, 4, 1, "", "clip"], [41, 2, 1, "", "get_compatibility_msg"], [41, 2, 1, "", "is_compatible"], [41, 2, 1, "", "multi_start_solve"], [41, 2, 1, "", "solve"], [41, 4, 1, "", "trials"]], "qiskit_optimization.algorithms.SolutionSample": [[42, 4, 1, "", "fval"], [42, 4, 1, "", "probability"], [42, 4, 1, "", "status"], [42, 4, 1, "", "x"]], "qiskit_optimization.algorithms.WarmStartQAOAFactory": [[43, 2, 1, "", "create_initial_state"], [43, 2, 1, "", "create_initial_variables"], [43, 2, 1, "", "create_mixer"]], "qiskit_optimization.algorithms.WarmStartQAOAOptimizer": [[44, 2, 1, "", "get_compatibility_msg"], [44, 2, 1, "", "is_compatible"], [44, 4, 1, "", "min_eigen_solver"], [44, 2, 1, "", "solve"]], "qiskit_optimization.algorithms.qrao": [[45, 3, 1, "", "EncodingCommutationVerifier"], [46, 3, 1, "", "MagicRounding"], [47, 3, 1, "", "QuantumRandomAccessEncoding"], [48, 3, 1, "", "QuantumRandomAccessOptimizationResult"], [49, 3, 1, "", "QuantumRandomAccessOptimizer"], [50, 3, 1, "", "RoundingContext"], [51, 3, 1, "", "RoundingResult"], [52, 3, 1, "", "RoundingScheme"], [53, 3, 1, "", "SemideterministicRounding"]], "qiskit_optimization.algorithms.qrao.MagicRounding": [[46, 4, 1, "", "basis_sampling"], [46, 2, 1, "", "round"], [46, 4, 1, "", "sampler"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding": [[47, 4, 1, "", "compression_ratio"], [47, 2, 1, "", "encode"], [47, 2, 1, "", "freeze"], [47, 4, 1, "", "frozen"], [47, 4, 1, "", "max_vars_per_qubit"], [47, 4, 1, "", "minimum_recovery_probability"], [47, 4, 1, "", "num_qubits"], [47, 4, 1, "", "num_vars"], [47, 4, 1, "", "offset"], [47, 4, 1, "", "problem"], [47, 4, 1, "", "q2vars"], [47, 4, 1, "", "qubit_op"], [47, 2, 1, "", "state_preparation_circuit"], [47, 4, 1, "", "var2op"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult": [[48, 4, 1, "", "encoding"], [48, 4, 1, "", "fval"], [48, 2, 1, "", "get_correlations"], [48, 2, 1, "", "prettyprint"], [48, 4, 1, "", "raw_results"], [48, 4, 1, "", "relaxed_fval"], [48, 4, 1, "", "relaxed_result"], [48, 4, 1, "", "rounding_result"], [48, 4, 1, "", "samples"], [48, 4, 1, "", "status"], [48, 4, 1, "", "variable_names"], [48, 4, 1, "", "variables"], [48, 4, 1, "", "variables_dict"], [48, 4, 1, "", "x"]], "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer": [[49, 2, 1, "", "get_compatibility_msg"], [49, 2, 1, "", "is_compatible"], [49, 4, 1, "", "max_vars_per_qubit"], [49, 4, 1, "", "min_eigen_solver"], [49, 2, 1, "", "process_result"], [49, 4, 1, "", "rounding_scheme"], [49, 2, 1, "", "solve"], [49, 2, 1, "", "solve_relaxed"]], "qiskit_optimization.algorithms.qrao.RoundingContext": [[50, 4, 1, "", "circuit"], [50, 4, 1, "", "encoding"], [50, 4, 1, "", "expectation_values"]], "qiskit_optimization.algorithms.qrao.RoundingResult": [[51, 4, 1, "", "bases"], [51, 4, 1, "", "basis_counts"], [51, 4, 1, "", "basis_shots"], [51, 4, 1, "", "expectation_values"], [51, 4, 1, "", "samples"]], "qiskit_optimization.algorithms.qrao.RoundingScheme": [[52, 2, 1, "", "round"]], "qiskit_optimization.algorithms.qrao.SemideterministicRounding": [[53, 2, 1, "", "round"]], "qiskit_optimization.applications": [[54, 3, 1, "", "BinPacking"], [55, 3, 1, "", "Clique"], [56, 3, 1, "", "ExactCover"], [57, 3, 1, "", "GraphOptimizationApplication"], [58, 3, 1, "", "GraphPartition"], [59, 3, 1, "", "Knapsack"], [60, 3, 1, "", "Maxcut"], [61, 3, 1, "", "NumberPartition"], [62, 3, 1, "", "OptimizationApplication"], [63, 3, 1, "", "SKModel"], [64, 3, 1, "", "SetPacking"], [65, 3, 1, "", "StableSet"], [66, 3, 1, "", "Tsp"], [67, 3, 1, "", "VehicleRouting"], [68, 3, 1, "", "VertexCover"]], "qiskit_optimization.applications.BinPacking": [[54, 2, 1, "", "get_figure"], [54, 2, 1, "", "interpret"], [54, 2, 1, "", "sample_most_likely"], [54, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Clique": [[55, 2, 1, "", "draw"], [55, 4, 1, "", "graph"], [55, 2, 1, "", "interpret"], [55, 2, 1, "", "sample_most_likely"], [55, 4, 1, "", "size"], [55, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.ExactCover": [[56, 2, 1, "", "interpret"], [56, 2, 1, "", "sample_most_likely"], [56, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.GraphOptimizationApplication": [[57, 2, 1, "", "draw"], [57, 4, 1, "", "graph"], [57, 2, 1, "", "interpret"], [57, 2, 1, "", "sample_most_likely"], [57, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.GraphPartition": [[58, 2, 1, "", "draw"], [58, 4, 1, "", "graph"], [58, 2, 1, "", "interpret"], [58, 2, 1, "", "sample_most_likely"], [58, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Knapsack": [[59, 2, 1, "", "interpret"], [59, 4, 1, "", "max_weight"], [59, 2, 1, "", "sample_most_likely"], [59, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Maxcut": [[60, 2, 1, "", "draw"], [60, 2, 1, "", "get_gset_result"], [60, 4, 1, "", "graph"], [60, 2, 1, "", "interpret"], [60, 2, 1, "", "parse_gset_format"], [60, 2, 1, "", "sample_most_likely"], [60, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.NumberPartition": [[61, 2, 1, "", "interpret"], [61, 2, 1, "", "sample_most_likely"], [61, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.OptimizationApplication": [[62, 2, 1, "", "interpret"], [62, 2, 1, "", "sample_most_likely"], [62, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SKModel": [[63, 2, 1, "", "disorder"], [63, 4, 1, "", "graph"], [63, 2, 1, "", "interpret"], [63, 4, 1, "", "num_sites"], [63, 2, 1, "", "sample_most_likely"], [63, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SetPacking": [[64, 2, 1, "", "interpret"], [64, 2, 1, "", "sample_most_likely"], [64, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.StableSet": [[65, 2, 1, "", "draw"], [65, 4, 1, "", "graph"], [65, 2, 1, "", "interpret"], [65, 2, 1, "", "sample_most_likely"], [65, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Tsp": [[66, 2, 1, "", "create_random_instance"], [66, 2, 1, "", "draw"], [66, 4, 1, "", "graph"], [66, 2, 1, "", "interpret"], [66, 2, 1, "", "parse_tsplib_format"], [66, 2, 1, "", "sample_most_likely"], [66, 2, 1, "", "to_quadratic_program"], [66, 2, 1, "", "tsp_value"]], "qiskit_optimization.applications.VehicleRouting": [[67, 2, 1, "", "create_random_instance"], [67, 4, 1, "", "depot"], [67, 2, 1, "", "draw"], [67, 4, 1, "", "graph"], [67, 2, 1, "", "interpret"], [67, 4, 1, "", "num_vehicles"], [67, 2, 1, "", "sample_most_likely"], [67, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.VertexCover": [[68, 2, 1, "", "draw"], [68, 4, 1, "", "graph"], [68, 2, 1, "", "interpret"], [68, 2, 1, "", "sample_most_likely"], [68, 2, 1, "", "to_quadratic_program"]], "qiskit_optimization.converters": [[69, 3, 1, "", "InequalityToEquality"], [70, 3, 1, "", "IntegerToBinary"], [71, 3, 1, "", "LinearEqualityToPenalty"], [72, 3, 1, "", "LinearInequalityToPenalty"], [73, 3, 1, "", "MaximizeToMinimize"], [74, 3, 1, "", "MinimizeToMaximize"], [75, 3, 1, "", "QuadraticProgramConverter"], [76, 3, 1, "", "QuadraticProgramToQubo"]], "qiskit_optimization.converters.InequalityToEquality": [[69, 2, 1, "", "convert"], [69, 2, 1, "", "interpret"], [69, 4, 1, "", "mode"]], "qiskit_optimization.converters.IntegerToBinary": [[70, 2, 1, "", "convert"], [70, 2, 1, "", "interpret"]], "qiskit_optimization.converters.LinearEqualityToPenalty": [[71, 2, 1, "", "convert"], [71, 2, 1, "", "interpret"], [71, 4, 1, "", "penalty"]], "qiskit_optimization.converters.LinearInequalityToPenalty": [[72, 2, 1, "", "convert"], [72, 2, 1, "", "interpret"], [72, 4, 1, "", "penalty"]], "qiskit_optimization.converters.MaximizeToMinimize": [[73, 2, 1, "", "convert"], [73, 2, 1, "", "interpret"]], "qiskit_optimization.converters.MinimizeToMaximize": [[74, 2, 1, "", "convert"], [74, 2, 1, "", "interpret"]], "qiskit_optimization.converters.QuadraticProgramConverter": [[75, 2, 1, "", "convert"], [75, 2, 1, "", "interpret"]], "qiskit_optimization.converters.QuadraticProgramToQubo": [[76, 2, 1, "", "convert"], [76, 2, 1, "", "get_compatibility_msg"], [76, 2, 1, "", "interpret"], [76, 2, 1, "", "is_compatible"], [76, 4, 1, "", "penalty"]], "qiskit_optimization.infinity": [[77, 5, 1, "", "INFINITY"]], "qiskit_optimization.problems": [[78, 3, 1, "", "Constraint"], [79, 3, 1, "", "LinearConstraint"], [80, 3, 1, "", "LinearExpression"], [81, 3, 1, "", "QuadraticConstraint"], [82, 3, 1, "", "QuadraticExpression"], [83, 3, 1, "", "QuadraticObjective"], [84, 3, 1, "", "QuadraticProgramElement"], [85, 3, 1, "", "Variable"]], "qiskit_optimization.problems.Constraint": [[78, 2, 1, "", "evaluate"], [78, 4, 1, "", "name"], [78, 4, 1, "", "quadratic_program"], [78, 4, 1, "", "rhs"], [78, 4, 1, "", "sense"]], "qiskit_optimization.problems.LinearConstraint": [[79, 2, 1, "", "evaluate"], [79, 4, 1, "", "linear"], [79, 4, 1, "", "name"], [79, 4, 1, "", "quadratic_program"], [79, 4, 1, "", "rhs"], [79, 4, 1, "", "sense"]], "qiskit_optimization.problems.LinearExpression": [[80, 4, 1, "", "bounds"], [80, 4, 1, "", "coefficients"], [80, 2, 1, "", "evaluate"], [80, 2, 1, "", "evaluate_gradient"], [80, 4, 1, "", "quadratic_program"], [80, 2, 1, "", "to_array"], [80, 2, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticConstraint": [[81, 2, 1, "", "evaluate"], [81, 4, 1, "", "linear"], [81, 4, 1, "", "name"], [81, 4, 1, "", "quadratic"], [81, 4, 1, "", "quadratic_program"], [81, 4, 1, "", "rhs"], [81, 4, 1, "", "sense"]], "qiskit_optimization.problems.QuadraticExpression": [[82, 4, 1, "", "bounds"], [82, 4, 1, "", "coefficients"], [82, 2, 1, "", "evaluate"], [82, 2, 1, "", "evaluate_gradient"], [82, 4, 1, "", "quadratic_program"], [82, 2, 1, "", "to_array"], [82, 2, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticObjective": [[83, 4, 1, "", "constant"], [83, 2, 1, "", "evaluate"], [83, 2, 1, "", "evaluate_gradient"], [83, 4, 1, "", "linear"], [83, 4, 1, "", "quadratic"], [83, 4, 1, "", "quadratic_program"], [83, 4, 1, "", "sense"]], "qiskit_optimization.problems.QuadraticProgramElement": [[84, 4, 1, "", "quadratic_program"]], "qiskit_optimization.problems.Variable": [[85, 2, 1, "", "as_tuple"], [85, 4, 1, "", "lowerbound"], [85, 4, 1, "", "name"], [85, 4, 1, "", "quadratic_program"], [85, 4, 1, "", "upperbound"], [85, 4, 1, "", "vartype"]], "qiskit_optimization.translators": [[86, 6, 1, "", "from_docplex_mp"], [87, 6, 1, "", "from_gurobipy"], [88, 6, 1, "", "from_ising"], [89, 6, 1, "", "to_docplex_mp"], [90, 6, 1, "", "to_gurobipy"], [91, 6, 1, "", "to_ising"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:attribute", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python m\u00f3dulo"], "1": ["py", "exception", "Python excepci\u00f3n"], "2": ["py", "method", "Python m\u00e9todo"], "3": ["py", "class", "Python clase"], "4": ["py", "attribute", "Python atributo"], "5": ["py", "data", "Python dato"], "6": ["py", "function", "Python funci\u00f3n"]}, "titleterms": {"qiskit": [0, 7, 10, 11, 12, 13, 102], "optimization": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 102, 104], "api": 0, "referenc": 0, "modul": 0, "qiskit_optimization": [0, 1, 2, 3, 4, 5, 6], "submodul": [0, 1], "algorithms": [1, 2], "bas": [1, 3, 4], "class": [1, 3, 4], "for": [1, 3, 4], "and": [1, 2], "results": 1, "quantum": [2, 8], "random": [2, 8], "access": [2, 8], "qra": 2, "encoding": 2, "rounding": 2, "schem": 2, "applications": 3, "converters": 4, "problems": 5, "quadratic": [5, 6], "program": [5, 6, 92, 93], "translators": 6, "explic": 7, "antecedent": 8, "sobr": 8, "optimiz": [8, 94, 95, 96, 97, 99, 100, 101, 102, 103], "cuantic": [8, 96, 97, 98, 99, 101, 103], "acces": [8, 103], "aleatori": [8, 103], "relaj": [8, 101, 103], "codig": 8, "esquem": 8, "redonde": [8, 103], "Una": 8, "simpl": 8, "traves": 8, "qrac": 8, "1": [8, 98], "2": [8, 98], "p": 8, "3": [8, 96, 98], "recuper": 8, "bits": 8, "codific": [8, 103], "problem": [8, 95, 97, 100, 103], "hamiltonian": [8, 97, 98, 100, 103], "conmut": 8, "semidetermin": 8, "Estado": 8, "magic": 8, "referent": [8, 94, 95, 96, 98, 99, 101], "primer": 9, "pas": [9, 10, 98, 103], "instal": 9, "opcional": 9, "list": 9, "par": [9, 93, 97, 100], "empez": 9, "descripcion": [10, 11, 12], "general": [10, 11, 12], "siguient": 10, "gui": [11, 12, 13], "migracion": [11, 12, 13], "v0": [11, 12], "5": [11, 98], "minimumeigenoptimiz": [11, 12, 32, 94], "numpyminimumeigensolv": [11, 12, 103], "qao": [11, 12, 101], "vqe": 11, "anterior": 11, "samplingvq": [11, 12, 99], "nuev": 11, "warmstartqaoaoptimiz": [11, 12, 44], "groveroptimiz": [11, 12, 27, 95], "6": 12, "not": 14, "version": 14, "qiskitoptimizationerror": 15, "quadraticprogram": [16, 92, 102], "admmoptimizationresult": 17, "admmoptimiz": 18, "admmparameters": 19, "admmstat": 20, "baseaggregator": 21, "cobylaoptimiz": 22, "cplexoptimiz": 23, "goemanswilliamsonoptimizationresult": 24, "goemanswilliamsonoptimiz": 25, "groveroptimizationresult": 26, "gurobioptimiz": 28, "intermediateresult": 29, "meanaggregator": 30, "minimumeigenoptimizationresult": 31, "multistartoptimiz": 33, "optimizationalgorithm": 34, "optimizationresult": 35, "optimizationresultstatus": 36, "recursiveminimumeigenoptimizationresult": 37, "recursiveminimumeigenoptimiz": [38, 94], "scipymilpoptimiz": 39, "slsqpoptimizationresult": 40, "slsqpoptimiz": 41, "solutionsampl": 42, "warmstartqaoafactory": 43, "encodingcommutationverifi": 45, "magicrounding": [46, 103], "quantumrandomaccessencoding": 47, "quantumrandomaccessoptimizationresult": 48, "quantumrandomaccessoptimiz": [49, 103], "roundingcontext": 50, "roundingresult": 51, "roundingschem": 52, "semideterministicrounding": 53, "binpacking": 54, "cliqu": 55, "exactcov": 56, "graphoptimizationapplication": 57, "graphpartition": 58, "knapsack": [59, 100], "maxcut": 60, "numberpartition": 61, "optimizationapplication": 62, "skmodel": 63, "setpacking": 64, "stableset": 65, "tsp": 66, "vehiclerouting": 67, "vertexcov": 68, "inequalitytoequality": [69, 93], "integertobinary": [70, 93], "linearequalitytopenalty": 71, "linearinequalitytopenalty": 72, "maximizetominimiz": 73, "minimizetomaximiz": 74, "quadraticprogramconvert": 75, "quadraticprogramtoqub": 76, "infinity": 77, "constraint": 78, "linearconstraint": 79, "linearexpression": 80, "quadraticconstraint": 81, "quadraticexpression": 82, "quadraticobjectiv": 83, "quadraticprogramelement": 84, "variabl": [85, 92], "from_docplex_mp": 86, "from_gurobipy": 87, "from_ising": 88, "to_docplex_mp": 89, "to_gurobipy": 90, "to_ising": 91, "cuadrat": [92, 93], "introduccion": [92, 94, 95, 96, 97, 98, 99, 100, 101], "carg": 92, "desd": [92, 98], "archiv": 92, "lp": 92, "model": [92, 98, 102], "docplex": [92, 102], "constru": [92, 98], "direct": 92, "agreg": 92, "elimin": 92, "restriccion": [92, 102], "lineal": 92, "sustitu": 92, "conversor": 93, "lineequalitytopenalty": 93, "propi": [94, 99], "minim": [94, 95, 99], "convert": 94, "qub": [94, 95, 101], "sparsepauliop": 94, "resolv": [94, 103], "analisis": [94, 101], "muestr": 94, "grov": 95, "busqued": 95, "adapt": 95, "encontr": 95, "utiliz": [95, 98], "comprob": 95, "encuentr": 95, "valor": 95, "correct": [95, 97], "admm": 96, "inicializ": [96, 98], "ejempl": 96, "solucion": [96, 98, 102, 103], "clasic": [96, 98, 102], "parametr": 96, "llam": 96, "algoritm": 96, "h": 96, "result": [96, 103], "max": 97, "cut": 97, "vendedor": 97, "viajer": 97, "ponder": 97, "comput": 97, "universal": 97, "aproxim": 97, "clas": [97, 100], "aplic": [97, 100], "maxim": 97, "cort": 97, "enfoqu": 97, "fuerz": 97, "brut": 97, "map": 97, "ising": [97, 98], "verific": [97, 103], "complet": 97, "proporcion": 97, "cost": 97, "ejecut": 97, "rut": 98, "vehicul": 98, "El": 98, "Del": 98, "formul": 98, "qp": 98, "ibm": 98, "ilog": 98, "cplex": 98, "cer": 98, "4": 98, "mejor": 99, "variacional": 99, "mediant": 99, "cvar": 99, "carter": 99, "usand": [99, 103], "da": 100, "cobertur": 100, "vertic": 100, "mochil": 100, "com": [100, 103], "revis": 100, "arranqu": 101, "calient": 101, "warm": 101, "starting": 101, "preliminar": 101, "estand": 101, "start": 101, "uso": 102, "cplexsolv": 102, "gurobisolv": 102, "traductor": 102, "gurobipy": 102, "indic": 102, "configur": 103, "combinatori": 103, "interpret": 103, "inspeccion": 103, "subrutin": 103, "exact": 103, "altern": 103, "dos": 103, "explicit": 103, "resuelv": 103, "manual": 103, "realiz": 103, "apendic": 103, "exactitud": 103, "codif": 103, "tutorial": 104}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Qiskit Optimization API Reference": [[0, "qiskit-optimization-api-reference"]], "Qiskit optimization module (qiskit_optimization)": [[0, "qiskit-optimization-module-qiskit-optimization"]], "Submodules": [[0, "submodules"], [1, "submodules"]], "Optimization algorithms (qiskit_optimization.algorithms)": [[1, "optimization-algorithms-qiskit-optimization-algorithms"]], "Base classes for algorithms and results": [[1, "base-classes-for-algorithms-and-results"]], "Algorithms and results": [[1, "algorithms-and-results"]], "Quantum Random Access Optimization (qiskit_optimization.algorithms.qrao)": [[2, "quantum-random-access-optimization-qiskit-optimization-algorithms-qrao"]], "Quantum Random Access Encoding and Optimization": [[2, "quantum-random-access-encoding-and-optimization"]], "Rounding schemes": [[2, "rounding-schemes"]], "Optimization applications (qiskit_optimization.applications)": [[3, "optimization-applications-qiskit-optimization-applications"]], "Base classes for applications": [[3, "base-classes-for-applications"]], "Applications": [[3, "applications"]], "Optimization converters (qiskit_optimization.converters)": [[4, "optimization-converters-qiskit-optimization-converters"]], "Base class for converters": [[4, "base-class-for-converters"]], "Converters": [[4, "converters"]], "Optimization problems (qiskit_optimization.problems)": [[5, "optimization-problems-qiskit-optimization-problems"]], "Quadratic program": [[5, "quadratic-program"]], "Quadratic program translators (qiskit_optimization.translators)": [[6, "quadratic-program-translators-qiskit-optimization-translators"]], "Translators": [[6, "translators"]], "Explicaciones de Qiskit Optimization": [[7, "qiskit-optimization-explanations"]], "Explicaciones\u2026": [[7, "explanations"]], "Antecedentes sobre la Optimizaci\u00f3n Cu\u00e1ntica de Acceso Aleatorio (Quantum Random Access Optimization): Relajaciones cu\u00e1nticas, c\u00f3digos cu\u00e1nticos de acceso aleatorio, esquemas de redondeo": [[8, "background-on-quantum-random-access-optimization-quantum-relaxations-quantum-random-access-codes-rounding-schemes"]], "Relajaciones": [[8, "relaxations"]], "Relajaci\u00f3n Cu\u00e1ntica": [[8, "quantum-relaxation"]], "Una Relajaci\u00f3n Cu\u00e1ntica Simple": [[8, "a-simple-quantum-relaxation"]], "Relajaciones Cu\u00e1nticas a trav\u00e9s de C\u00f3digos Cu\u00e1nticos de Acceso Aleatorio (QRAC)": [[8, "quantum-relaxations-via-quantum-random-access-codes-qracs"]], "(1,1,1), (2,1,p), y (3,1,p) C\u00f3digos Cu\u00e1nticos de Acceso Aleatorio": [[8, "p-and-3-1-p-quantum-random-access-codes"]], "Recuperar Bits Codificados": [[8, "recovering-encoded-bits"]], "Problema de Codificado de Hamiltonianos": [[8, "encoded-problem-hamiltonians"]], "Conmutaci\u00f3n de la Relajaci\u00f3n Cu\u00e1ntica": [[8, "commutation-of-quantum-relaxation"]], "Esquemas de Redondeo Cu\u00e1ntico": [[8, "quantum-rounding-schemes"]], "Redondeo Semideterminista": [[8, "semi-deterministic-rounding"]], "Redondeo de Estado M\u00e1gico": [[8, "magic-state-rounding"]], "Referencias": [[8, "references"], [94, "Referencias"], [95, "Referencias"], [96, "Referencias"], [98, "Referencias"], [99, "Referencias"], [101, "Referencias"]], "Primeros pasos": [[9, "getting-started"]], "Instalaci\u00f3n": [[9, "installation"]], "Instalaciones opcionales": [[9, "optional-installs"]], "\u00bfListo para empezar?\u2026": [[9, "ready-to-get-going"]], "Descripci\u00f3n general de Qiskit Optimization": [[10, "qiskit-optimization-overview"]], "Descripci\u00f3n general": [[10, "overview"]], "Siguientes Pasos": [[10, "next-steps"]], "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization v0.5": [[11, "qiskit-optimization-v0-5-migration-guide"]], "Descripci\u00f3n General": [[11, "overview"], [12, "overview"]], "MinimumEigenOptimizer": [[11, "minimumeigenoptimizer"], [12, "minimumeigenoptimizer"], [32, "minimumeigenoptimizer"]], "NumPyMinimumEigensolver": [[11, "numpyminimumeigensolver"], [12, "numpyminimumeigensolver"]], "QAOA": [[11, "qaoa"], [12, "qaoa"], [101, "QAOA"]], "VQE (anterior) \u2192 SamplingVQE (nuevo)": [[11, "vqe-former-samplingvqe-new"]], "WarmStartQAOAOptimizer": [[11, "warmstartqaoaoptimizer"], [12, "warmstartqaoaoptimizer"], [44, "warmstartqaoaoptimizer"]], "GroverOptimizer": [[11, "groveroptimizer"], [12, "groveroptimizer"], [27, "groveroptimizer"]], "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization v0.6": [[12, "qiskit-optimization-v0-6-migration-guide"]], "SamplingVQE": [[12, "samplingvqe"]], "Gu\u00eda de Migraci\u00f3n de Qiskit Optimization": [[13, "qiskit-optimization-migration-guide"]], "Notas de la Versi\u00f3n": [[14, "release-notes"]], "QiskitOptimizationError": [[15, "qiskitoptimizationerror"]], "QuadraticProgram": [[16, "quadraticprogram"]], "ADMMOptimizationResult": [[17, "admmoptimizationresult"]], "ADMMOptimizer": [[18, "admmoptimizer"]], "ADMMParameters": [[19, "admmparameters"]], "ADMMState": [[20, "admmstate"]], "BaseAggregator": [[21, "baseaggregator"]], "CobylaOptimizer": [[22, "cobylaoptimizer"]], "CplexOptimizer": [[23, "cplexoptimizer"]], "GoemansWilliamsonOptimizationResult": [[24, "goemanswilliamsonoptimizationresult"]], "GoemansWilliamsonOptimizer": [[25, "goemanswilliamsonoptimizer"]], "GroverOptimizationResult": [[26, "groveroptimizationresult"]], "GurobiOptimizer": [[28, "gurobioptimizer"]], "IntermediateResult": [[29, "intermediateresult"]], "MeanAggregator": [[30, "meanaggregator"]], "MinimumEigenOptimizationResult": [[31, "minimumeigenoptimizationresult"]], "MultiStartOptimizer": [[33, "multistartoptimizer"]], "OptimizationAlgorithm": [[34, "optimizationalgorithm"]], "OptimizationResult": [[35, "optimizationresult"]], "OptimizationResultStatus": [[36, "optimizationresultstatus"]], "RecursiveMinimumEigenOptimizationResult": [[37, "recursiveminimumeigenoptimizationresult"]], "RecursiveMinimumEigenOptimizer": [[38, "recursiveminimumeigenoptimizer"], [94, "RecursiveMinimumEigenOptimizer"]], "ScipyMilpOptimizer": [[39, "scipymilpoptimizer"]], "SlsqpOptimizationResult": [[40, "slsqpoptimizationresult"]], "SlsqpOptimizer": [[41, "slsqpoptimizer"]], "SolutionSample": [[42, "solutionsample"]], "WarmStartQAOAFactory": [[43, "warmstartqaoafactory"]], "EncodingCommutationVerifier": [[45, "encodingcommutationverifier"]], "MagicRounding": [[46, "magicrounding"]], "QuantumRandomAccessEncoding": [[47, "quantumrandomaccessencoding"]], "QuantumRandomAccessOptimizationResult": [[48, "quantumrandomaccessoptimizationresult"]], "QuantumRandomAccessOptimizer": [[49, "quantumrandomaccessoptimizer"]], "RoundingContext": [[50, "roundingcontext"]], "RoundingResult": [[51, "roundingresult"]], "RoundingScheme": [[52, "roundingscheme"]], "SemideterministicRounding": [[53, "semideterministicrounding"]], "BinPacking": [[54, "binpacking"]], "Clique": [[55, "clique"]], "ExactCover": [[56, "exactcover"]], "GraphOptimizationApplication": [[57, "graphoptimizationapplication"]], "GraphPartition": [[58, "graphpartition"]], "Knapsack": [[59, "knapsack"]], "Maxcut": [[60, "maxcut"]], "NumberPartition": [[61, "numberpartition"]], "OptimizationApplication": [[62, "optimizationapplication"]], "SKModel": [[63, "skmodel"]], "SetPacking": [[64, "setpacking"]], "StableSet": [[65, "stableset"]], "Tsp": [[66, "tsp"]], "VehicleRouting": [[67, "vehiclerouting"]], "VertexCover": [[68, "vertexcover"]], "InequalityToEquality": [[69, "inequalitytoequality"], [93, "InequalityToEquality"]], "IntegerToBinary": [[70, "integertobinary"], [93, "IntegerToBinary"]], "LinearEqualityToPenalty": [[71, "linearequalitytopenalty"]], "LinearInequalityToPenalty": [[72, "linearinequalitytopenalty"]], "MaximizeToMinimize": [[73, "maximizetominimize"]], "MinimizeToMaximize": [[74, "minimizetomaximize"]], "QuadraticProgramConverter": [[75, "quadraticprogramconverter"]], "QuadraticProgramToQubo": [[76, "quadraticprogramtoqubo"]], "INFINITY": [[77, "infinity"]], "Constraint": [[78, "constraint"]], "LinearConstraint": [[79, "linearconstraint"]], "LinearExpression": [[80, "linearexpression"]], "QuadraticConstraint": [[81, "quadraticconstraint"]], "QuadraticExpression": [[82, "quadraticexpression"]], "QuadraticObjective": [[83, "quadraticobjective"]], "QuadraticProgramElement": [[84, "quadraticprogramelement"]], "Variable": [[85, "variable"]], "from_docplex_mp": [[86, "from-docplex-mp"]], "from_gurobipy": [[87, "from-gurobipy"]], "from_ising": [[88, "from-ising"]], "to_docplex_mp": [[89, "to-docplex-mp"]], "to_gurobipy": [[90, "to-gurobipy"]], "to_ising": [[91, "to-ising"]], "Programas Cuadr\u00e1ticos": [[92, "Programas-Cuadr\u00e1ticos"]], "Introducci\u00f3n": [[92, "Introducci\u00f3n"], [94, "Introducci\u00f3n"], [95, "Introducci\u00f3n"], [96, "Introducci\u00f3n"], [97, "Introducci\u00f3n"], [98, "Introducci\u00f3n"], [99, "Introducci\u00f3n"], [100, "Introducci\u00f3n"], [101, "Introducci\u00f3n"]], "Cargar un QuadraticProgram desde un archivo LP": [[92, "Cargar-un-QuadraticProgram-desde-un-archivo-LP"]], "Carga de un QuadraticProgram desde un modelo docplex": [[92, "Carga-de-un-QuadraticProgram-desde-un-modelo-docplex"]], "Construir directamente un QuadraticProgram": [[92, "Construir-directamente-un-QuadraticProgram"]], "Agregar/eliminar restricciones lineales y cuadr\u00e1ticas": [[92, "Agregar/eliminar-restricciones-lineales-y-cuadr\u00e1ticas"]], "Sustituir Variables": [[92, "Sustituir-Variables"]], "Conversores para Programas Cuadr\u00e1ticos": [[93, "Conversores-para-Programas-Cuadr\u00e1ticos"]], "LineEqualityToPenalty": [[93, "LineEqualityToPenalty"]], "Optimizador Propio M\u00ednimo": [[94, "Optimizador-Propio-M\u00ednimo"]], "Convertir un QUBO a un SparsePauliOp": [[94, "Convertir-un-QUBO-a-un-SparsePauliOp"]], "Resolver un QUBO con el MinimumEigenOptimizer": [[94, "Resolver-un-QUBO-con-el-MinimumEigenOptimizer"]], "An\u00e1lisis de Muestras": [[94, "An\u00e1lisis-de-Muestras"]], "Optimizador de Grover": [[95, "Optimizador-de-Grover"]], "B\u00fasqueda Adaptativa de Grover": [[95, "B\u00fasqueda-Adaptativa-de-Grover"]], "Encontrar el M\u00ednimo de un Problema QUBO utilizando GroverOptimizer": [[95, "Encontrar-el-M\u00ednimo-de-un-Problema-QUBO-utilizando-GroverOptimizer"]], "Comprobar que GroverOptimizer encuentra el valor correcto": [[95, "Comprobar-que-GroverOptimizer-encuentra-el-valor-correcto"]], "Optimizador ADMM": [[96, "Optimizador-ADMM"]], "Inicializaci\u00f3n": [[96, "Inicializaci\u00f3n"], [98, "Inicializaci\u00f3n"]], "Ejemplo": [[96, "Ejemplo"]], "Soluci\u00f3n Cl\u00e1sica": [[96, "Soluci\u00f3n-Cl\u00e1sica"]], "Par\u00e1metros": [[96, "Par\u00e1metros"]], "Llamar al algoritmo 3-ADMM-H": [[96, "Llamar-al-algoritmo-3-ADMM-H"]], "Resultado del Solucionador Cl\u00e1sico": [[96, "Resultado-del-Solucionador-Cl\u00e1sico"]], "Soluci\u00f3n Cu\u00e1ntica": [[96, "Soluci\u00f3n-Cu\u00e1ntica"]], "Resultados de Solucionador Cu\u00e1ntico": [[96, "Resultados-de-Solucionador-Cu\u00e1ntico"]], "Max-Cut y Problema del Vendedor Viajero": [[97, "Max-Cut-y-Problema-del-Vendedor-Viajero"]], "Max-Cut Ponderado": [[97, "Max-Cut-Ponderado"]], "Computaci\u00f3n Cu\u00e1ntica Universal Aproximada para Problemas de Optimizaci\u00f3n": [[97, "Computaci\u00f3n-Cu\u00e1ntica-Universal-Aproximada-para-Problemas-de-Optimizaci\u00f3n"]], "Clases de aplicaci\u00f3n": [[97, "Clases-de-aplicaci\u00f3n"]], "Problema de M\u00e1ximo Corte (Max-Cut)": [[97, "Problema-de-M\u00e1ximo-Corte-(Max-Cut)"]], "Enfoque de fuerza bruta": [[97, "Enfoque-de-fuerza-bruta"], [97, "id2"]], "Mapear del problema de Ising": [[97, "Mapear-del-problema-de-Ising"], [97, "id3"]], "Verificar que el Hamiltoniano completo proporcione el costo correcto": [[97, "Verificar-que-el-Hamiltoniano-completo-proporcione-el-costo-correcto"], [97, "id4"]], "Ejecutar en una computadora cu\u00e1ntica": [[97, "Ejecutar-en-una-computadora-cu\u00e1ntica"], [97, "id5"]], "Problema del Vendedor Viajero": [[97, "Problema-del-Vendedor-Viajero"]], "Rutas de Veh\u00edculos": [[98, "Rutas-de-Veh\u00edculos"]], "El Modelo": [[98, "El-Modelo"]], "Soluci\u00f3n cl\u00e1sica": [[98, "Soluci\u00f3n-cl\u00e1sica"]], "Soluci\u00f3n cu\u00e1ntica": [[98, "Soluci\u00f3n-cu\u00e1ntica"]], "Construir el Hamiltoniano de Ising": [[98, "Construir-el-Hamiltoniano-de-Ising"]], "Del Hamiltoniano a la formulaci\u00f3n QP": [[98, "Del-Hamiltoniano-a-la-formulaci\u00f3n-QP"]], "Soluci\u00f3n cl\u00e1sica utilizando IBM ILOG CPLEX": [[98, "Soluci\u00f3n-cl\u00e1sica-utilizando-IBM-ILOG-CPLEX"]], "Soluci\u00f3n cu\u00e1ntica desde cero": [[98, "Soluci\u00f3n-cu\u00e1ntica-desde-cero"]], "Paso 1": [[98, "Paso-1"]], "Paso 2": [[98, "Paso-2"]], "Paso 3": [[98, "Paso-3"]], "Paso 4": [[98, "Paso-4"]], "Paso 5": [[98, "Paso-5"]], "Mejora de la Optimizaci\u00f3n Cu\u00e1ntica Variacional mediante CVaR": [[99, "Mejora-de-la-Optimizaci\u00f3n-Cu\u00e1ntica-Variacional-mediante-CVaR"]], "Optimizaci\u00f3n de Cartera": [[99, "Optimizaci\u00f3n-de-Cartera"]], "Optimizador Propio M\u00ednimo usando SamplingVQE": [[99, "Optimizador-Propio-M\u00ednimo-usando-SamplingVQE"]], "Clases de Aplicaci\u00f3n para Problemas de Optimizaci\u00f3n": [[100, "Clases-de-Aplicaci\u00f3n-para-Problemas-de-Optimizaci\u00f3n"]], "Problema da la cobertura de v\u00e9rtices": [[100, "Problema-da-la-cobertura-de-v\u00e9rtices"]], "Problema de la mochila (knapsack)": [[100, "Problema-de-la-mochila-(knapsack)"]], "C\u00f3mo revisar el Hamiltoniano": [[100, "C\u00f3mo-revisar-el-Hamiltoniano"]], "Optimizaci\u00f3n cu\u00e1ntica de arranque en caliente (warm-starting)": [[101, "Optimizaci\u00f3n-cu\u00e1ntica-de-arranque-en-caliente-(warm-starting)"]], "Preliminares: relajando QUBOs": [[101, "Preliminares:-relajando-QUBOs"]], "QAOA est\u00e1ndar": [[101, "QAOA-est\u00e1ndar"]], "QAOA de arranque en caliente (warm-start)": [[101, "QAOA-de-arranque-en-caliente-(warm-start)"], [101, "id2"]], "An\u00e1lisis": [[101, "An\u00e1lisis"]], "Uso de Modelos y Solucionadores de Optimizaci\u00f3n Cl\u00e1sicos con Qiskit Optimization": [[102, "Uso-de-Modelos-y-Solucionadores-de-Optimizaci\u00f3n-Cl\u00e1sicos-con-Qiskit-Optimization"]], "CplexSolver y GurobiSolver": [[102, "CplexSolver-y-GurobiSolver"]], "Traductores entre QuadraticProgram y Docplex/Gurobipy": [[102, "Traductores-entre-QuadraticProgram-y-Docplex/Gurobipy"]], "Restricciones de los indicadores de Docplex": [[102, "Restricciones-de-los-indicadores-de-Docplex"]], "Optimizaci\u00f3n Cu\u00e1ntica de Acceso Aleatorio": [[103, "Optimizaci\u00f3n-Cu\u00e1ntica-de-Acceso-Aleatorio"]], "Configurar un problema de optimizaci\u00f3n combinatoria": [[103, "Configurar-un-problema-de-optimizaci\u00f3n-combinatoria"]], "Codificar el problema en un Hamiltoniano cu\u00e1ntico": [[103, "Codificar-el-problema-en-un-Hamiltoniano-cu\u00e1ntico"]], "Resolver el problema usando el QuantumRandomAccessOptimizer": [[103, "Resolver-el-problema-usando-el-QuantumRandomAccessOptimizer"]], "Interpretar la soluci\u00f3n": [[103, "Interpretar-la-soluci\u00f3n"]], "Inspeccionar los resultados de las subrutinas": [[103, "Inspeccionar-los-resultados-de-las-subrutinas"]], "Soluci\u00f3n Exacta del Problema con NumpyMinimumEigensolver": [[103, "Soluci\u00f3n-Exacta-del-Problema-con-NumpyMinimumEigensolver"]], "Resolver el problema usando el QuantumRandomAccessOptimizer con MagicRounding": [[103, "Resolver-el-problema-usando-el-QuantumRandomAccessOptimizer-con-MagicRounding"]], "Alternativa: Resolver el Problema en dos Pasos Expl\u00edcitos": [[103, "Alternativa:-Resolver-el-Problema-en-dos-Pasos-Expl\u00edcitos"]], "Resuelve manualmente el problema relajado.": [[103, "Resuelve-manualmente-el-problema-relajado."]], "Realiza manualmente el redondeo de los resultados del problema relajado": [[103, "Realiza-manualmente-el-redondeo-de-los-resultados-del-problema-relajado"]], "Ap\u00e9ndice": [[103, "Ap\u00e9ndice"]], "C\u00f3mo verificar la exactitud de tu codificaci\u00f3n": [[103, "C\u00f3mo-verificar-la-exactitud-de-tu-codificaci\u00f3n"]], "Tutoriales de Optimization": [[104, "optimization-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_optimization"], [1, "module-qiskit_optimization.algorithms"], [2, "module-qiskit_optimization.algorithms.qrao"], [3, "module-qiskit_optimization.applications"], [4, "module-qiskit_optimization.converters"], [5, "module-qiskit_optimization.problems"], [6, "module-qiskit_optimization.translators"]], "qiskit_optimization": [[0, "module-qiskit_optimization"]], "qiskit_optimization.algorithms": [[1, "module-qiskit_optimization.algorithms"]], "qiskit_optimization.algorithms.qrao": [[2, "module-qiskit_optimization.algorithms.qrao"]], "qiskit_optimization.applications": [[3, "module-qiskit_optimization.applications"]], "qiskit_optimization.converters": [[4, "module-qiskit_optimization.converters"]], "qiskit_optimization.problems": [[5, "module-qiskit_optimization.problems"]], "qiskit_optimization.translators": [[6, "module-qiskit_optimization.translators"]], "qiskitoptimizationerror": [[15, "qiskit_optimization.QiskitOptimizationError"]], "add_note() (m\u00e9todo de qiskitoptimizationerror)": [[15, "qiskit_optimization.QiskitOptimizationError.add_note"]], "with_traceback() (m\u00e9todo de qiskitoptimizationerror)": [[15, "qiskit_optimization.QiskitOptimizationError.with_traceback"]], "quadraticprogram (clase en qiskit_optimization)": [[16, "qiskit_optimization.QuadraticProgram"]], "binary_var() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.binary_var"]], "binary_var_dict() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.binary_var_dict"]], "binary_var_list() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.binary_var_list"]], "clear() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.clear"]], "continuous_var() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.continuous_var"]], "continuous_var_dict() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.continuous_var_dict"]], "continuous_var_list() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.continuous_var_list"]], "export_as_lp_string() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.export_as_lp_string"]], "from_ising() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.from_ising"]], "get_feasibility_info() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_feasibility_info"]], "get_linear_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_linear_constraint"]], "get_num_binary_vars() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_binary_vars"]], "get_num_continuous_vars() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_continuous_vars"]], "get_num_integer_vars() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_integer_vars"]], "get_num_linear_constraints() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_linear_constraints"]], "get_num_quadratic_constraints() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints"]], "get_num_vars() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_num_vars"]], "get_quadratic_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_quadratic_constraint"]], "get_variable() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.get_variable"]], "integer_var() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.integer_var"]], "integer_var_dict() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.integer_var_dict"]], "integer_var_list() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.integer_var_list"]], "is_feasible() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.is_feasible"]], "linear_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.linear_constraint"]], "linear_constraints (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.linear_constraints"]], "linear_constraints_index (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.linear_constraints_index"]], "maximize() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.maximize"]], "minimize() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.minimize"]], "name (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.name"]], "objective (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.objective"]], "prettyprint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.prettyprint"]], "quadratic_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.quadratic_constraint"]], "quadratic_constraints (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.quadratic_constraints"]], "quadratic_constraints_index (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.quadratic_constraints_index"]], "read_from_lp_file() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.read_from_lp_file"]], "remove_linear_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.remove_linear_constraint"]], "remove_quadratic_constraint() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.remove_quadratic_constraint"]], "status (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.status"]], "substitute_variables() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.substitute_variables"]], "to_ising() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.to_ising"]], "variables (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.variables"]], "variables_index (atributo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.variables_index"]], "write_to_lp_file() (m\u00e9todo de quadraticprogram)": [[16, "qiskit_optimization.QuadraticProgram.write_to_lp_file"]], "admmoptimizationresult (clase en qiskit_optimization.algorithms)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult"]], "fval (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.get_correlations"]], "prettyprint() (m\u00e9todo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.prettyprint"]], "raw_results (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.raw_results"]], "samples (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.samples"]], "state (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.state"]], "status (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.status"]], "variable_names (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.variable_names"]], "variables (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.variables"]], "variables_dict (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.variables_dict"]], "x (atributo de admmoptimizationresult)": [[17, "qiskit_optimization.algorithms.ADMMOptimizationResult.x"]], "admmoptimizer (clase en qiskit_optimization.algorithms)": [[18, "qiskit_optimization.algorithms.ADMMOptimizer"]], "get_compatibility_msg() (m\u00e9todo de admmoptimizer)": [[18, "qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de admmoptimizer)": [[18, "qiskit_optimization.algorithms.ADMMOptimizer.is_compatible"]], "parameters (atributo de admmoptimizer)": [[18, "qiskit_optimization.algorithms.ADMMOptimizer.parameters"]], "solve() (m\u00e9todo de admmoptimizer)": [[18, "qiskit_optimization.algorithms.ADMMOptimizer.solve"]], "admmparameters (clase en qiskit_optimization.algorithms)": [[19, "qiskit_optimization.algorithms.ADMMParameters"]], "admmstate (clase en qiskit_optimization.algorithms)": [[20, "qiskit_optimization.algorithms.ADMMState"]], "baseaggregator (clase en qiskit_optimization.algorithms)": [[21, "qiskit_optimization.algorithms.BaseAggregator"]], "aggregate() (m\u00e9todo de baseaggregator)": [[21, "qiskit_optimization.algorithms.BaseAggregator.aggregate"]], "cobylaoptimizer (clase en qiskit_optimization.algorithms)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer"]], "clip (atributo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.clip"]], "get_compatibility_msg() (m\u00e9todo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.is_compatible"]], "multi_start_solve() (m\u00e9todo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.multi_start_solve"]], "solve() (m\u00e9todo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.solve"]], "trials (atributo de cobylaoptimizer)": [[22, "qiskit_optimization.algorithms.CobylaOptimizer.trials"]], "cplexoptimizer (clase en qiskit_optimization.algorithms)": [[23, "qiskit_optimization.algorithms.CplexOptimizer"]], "cplex_parameters (atributo de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters"]], "disp (atributo de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.disp"]], "get_compatibility_msg() (m\u00e9todo de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.is_compatible"]], "is_cplex_installed() (m\u00e9todo est\u00e1tico de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed"]], "solve() (m\u00e9todo de cplexoptimizer)": [[23, "qiskit_optimization.algorithms.CplexOptimizer.solve"]], "goemanswilliamsonoptimizationresult (clase en qiskit_optimization.algorithms)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult"]], "fval (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.get_correlations"]], "prettyprint() (m\u00e9todo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.prettyprint"]], "raw_results (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.raw_results"]], "samples (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.samples"]], "sdp_solution (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution"]], "status (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.status"]], "variable_names (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variable_names"]], "variables (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variables"]], "variables_dict (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.variables_dict"]], "x (atributo de goemanswilliamsonoptimizationresult)": [[24, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.x"]], "goemanswilliamsonoptimizer (clase en qiskit_optimization.algorithms)": [[25, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer"]], "get_compatibility_msg() (m\u00e9todo de goemanswilliamsonoptimizer)": [[25, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de goemanswilliamsonoptimizer)": [[25, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.is_compatible"]], "max_cut_value() (m\u00e9todo est\u00e1tico de goemanswilliamsonoptimizer)": [[25, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value"]], "solve() (m\u00e9todo de goemanswilliamsonoptimizer)": [[25, "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve"]], "groveroptimizationresult (clase en qiskit_optimization.algorithms)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult"]], "fval (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.get_correlations"]], "intermediate_fval (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval"]], "n_input_qubits (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits"]], "n_output_qubits (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits"]], "operation_counts (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts"]], "prettyprint() (m\u00e9todo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.prettyprint"]], "raw_results (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.raw_results"]], "raw_samples (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples"]], "samples (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.samples"]], "status (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.status"]], "threshold (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.threshold"]], "variable_names (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.variable_names"]], "variables (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.variables"]], "variables_dict (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.variables_dict"]], "x (atributo de groveroptimizationresult)": [[26, "qiskit_optimization.algorithms.GroverOptimizationResult.x"]], "groveroptimizer (clase en qiskit_optimization.algorithms)": [[27, "qiskit_optimization.algorithms.GroverOptimizer"]], "get_compatibility_msg() (m\u00e9todo de groveroptimizer)": [[27, "qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de groveroptimizer)": [[27, "qiskit_optimization.algorithms.GroverOptimizer.is_compatible"]], "solve() (m\u00e9todo de groveroptimizer)": [[27, "qiskit_optimization.algorithms.GroverOptimizer.solve"]], "gurobioptimizer (clase en qiskit_optimization.algorithms)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer"]], "disp (atributo de gurobioptimizer)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer.disp"]], "get_compatibility_msg() (m\u00e9todo de gurobioptimizer)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de gurobioptimizer)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer.is_compatible"]], "is_gurobi_installed() (m\u00e9todo est\u00e1tico de gurobioptimizer)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed"]], "solve() (m\u00e9todo de gurobioptimizer)": [[28, "qiskit_optimization.algorithms.GurobiOptimizer.solve"]], "all_iterations (atributo de intermediateresult)": [[29, "qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS"]], "intermediateresult (clase en qiskit_optimization.algorithms)": [[29, "qiskit_optimization.algorithms.IntermediateResult"]], "last_iteration (atributo de intermediateresult)": [[29, "qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION"]], "no_iterations (atributo de intermediateresult)": [[29, "qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS"]], "meanaggregator (clase en qiskit_optimization.algorithms)": [[30, "qiskit_optimization.algorithms.MeanAggregator"]], "aggregate() (m\u00e9todo de meanaggregator)": [[30, "qiskit_optimization.algorithms.MeanAggregator.aggregate"]], "minimumeigenoptimizationresult (clase en qiskit_optimization.algorithms)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult"]], "fval (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.get_correlations"]], "min_eigen_solver_result (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result"]], "prettyprint() (m\u00e9todo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.prettyprint"]], "raw_results (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_results"]], "raw_samples (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples"]], "samples (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.samples"]], "status (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.status"]], "variable_names (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variable_names"]], "variables (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variables"]], "variables_dict (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.variables_dict"]], "x (atributo de minimumeigenoptimizationresult)": [[31, "qiskit_optimization.algorithms.MinimumEigenOptimizationResult.x"]], "minimumeigenoptimizer (clase en qiskit_optimization.algorithms)": [[32, "qiskit_optimization.algorithms.MinimumEigenOptimizer"]], "get_compatibility_msg() (m\u00e9todo de minimumeigenoptimizer)": [[32, "qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de minimumeigenoptimizer)": [[32, "qiskit_optimization.algorithms.MinimumEigenOptimizer.is_compatible"]], "min_eigen_solver (atributo de minimumeigenoptimizer)": [[32, "qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver"]], "solve() (m\u00e9todo de minimumeigenoptimizer)": [[32, "qiskit_optimization.algorithms.MinimumEigenOptimizer.solve"]], "multistartoptimizer (clase en qiskit_optimization.algorithms)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer"]], "clip (atributo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.clip"]], "get_compatibility_msg() (m\u00e9todo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.is_compatible"]], "multi_start_solve() (m\u00e9todo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve"]], "solve() (m\u00e9todo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.solve"]], "trials (atributo de multistartoptimizer)": [[33, "qiskit_optimization.algorithms.MultiStartOptimizer.trials"]], "optimizationalgorithm (clase en qiskit_optimization.algorithms)": [[34, "qiskit_optimization.algorithms.OptimizationAlgorithm"]], "get_compatibility_msg() (m\u00e9todo de optimizationalgorithm)": [[34, "qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de optimizationalgorithm)": [[34, "qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible"]], "solve() (m\u00e9todo de optimizationalgorithm)": [[34, "qiskit_optimization.algorithms.OptimizationAlgorithm.solve"]], "optimizationresult (clase en qiskit_optimization.algorithms)": [[35, "qiskit_optimization.algorithms.OptimizationResult"]], "fval (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.fval"]], "get_correlations() (m\u00e9todo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.get_correlations"]], "prettyprint() (m\u00e9todo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.prettyprint"]], "raw_results (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.raw_results"]], "samples (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.samples"]], "status (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.status"]], "variable_names (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.variable_names"]], "variables (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.variables"]], "variables_dict (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.variables_dict"]], "x (atributo de optimizationresult)": [[35, "qiskit_optimization.algorithms.OptimizationResult.x"]], "failure (atributo de optimizationresultstatus)": [[36, "qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE"]], "infeasible (atributo de optimizationresultstatus)": [[36, "qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE"]], "optimizationresultstatus (clase en qiskit_optimization.algorithms)": [[36, "qiskit_optimization.algorithms.OptimizationResultStatus"]], "success (atributo de optimizationresultstatus)": [[36, "qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS"]], "recursiveminimumeigenoptimizationresult (clase en qiskit_optimization.algorithms)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult"]], "fval (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.get_correlations"]], "history (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history"]], "prettyprint() (m\u00e9todo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.prettyprint"]], "raw_results (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.raw_results"]], "replacements (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements"]], "samples (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.samples"]], "status (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.status"]], "variable_names (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variable_names"]], "variables (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variables"]], "variables_dict (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.variables_dict"]], "x (atributo de recursiveminimumeigenoptimizationresult)": [[37, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.x"]], "recursiveminimumeigenoptimizer (clase en qiskit_optimization.algorithms)": [[38, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer"]], "get_compatibility_msg() (m\u00e9todo de recursiveminimumeigenoptimizer)": [[38, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de recursiveminimumeigenoptimizer)": [[38, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.is_compatible"]], "solve() (m\u00e9todo de recursiveminimumeigenoptimizer)": [[38, "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve"]], "scipymilpoptimizer (clase en qiskit_optimization.algorithms)": [[39, "qiskit_optimization.algorithms.ScipyMilpOptimizer"]], "disp (atributo de scipymilpoptimizer)": [[39, "qiskit_optimization.algorithms.ScipyMilpOptimizer.disp"]], "get_compatibility_msg() (m\u00e9todo de scipymilpoptimizer)": [[39, "qiskit_optimization.algorithms.ScipyMilpOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de scipymilpoptimizer)": [[39, "qiskit_optimization.algorithms.ScipyMilpOptimizer.is_compatible"]], "solve() (m\u00e9todo de scipymilpoptimizer)": [[39, "qiskit_optimization.algorithms.ScipyMilpOptimizer.solve"]], "slsqpoptimizationresult (clase en qiskit_optimization.algorithms)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult"]], "fval (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.fval"]], "fx (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.fx"]], "get_correlations() (m\u00e9todo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.get_correlations"]], "imode (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.imode"]], "its (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.its"]], "prettyprint() (m\u00e9todo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.prettyprint"]], "raw_results (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.raw_results"]], "samples (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.samples"]], "smode (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.smode"]], "status (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.status"]], "variable_names (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variable_names"]], "variables (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variables"]], "variables_dict (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.variables_dict"]], "x (atributo de slsqpoptimizationresult)": [[40, "qiskit_optimization.algorithms.SlsqpOptimizationResult.x"]], "slsqpoptimizer (clase en qiskit_optimization.algorithms)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer"]], "clip (atributo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.clip"]], "get_compatibility_msg() (m\u00e9todo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.is_compatible"]], "multi_start_solve() (m\u00e9todo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.multi_start_solve"]], "solve() (m\u00e9todo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.solve"]], "trials (atributo de slsqpoptimizer)": [[41, "qiskit_optimization.algorithms.SlsqpOptimizer.trials"]], "solutionsample (clase en qiskit_optimization.algorithms)": [[42, "qiskit_optimization.algorithms.SolutionSample"]], "fval (atributo de solutionsample)": [[42, "qiskit_optimization.algorithms.SolutionSample.fval"]], "probability (atributo de solutionsample)": [[42, "qiskit_optimization.algorithms.SolutionSample.probability"]], "status (atributo de solutionsample)": [[42, "qiskit_optimization.algorithms.SolutionSample.status"]], "x (atributo de solutionsample)": [[42, "qiskit_optimization.algorithms.SolutionSample.x"]], "warmstartqaoafactory (clase en qiskit_optimization.algorithms)": [[43, "qiskit_optimization.algorithms.WarmStartQAOAFactory"]], "create_initial_state() (m\u00e9todo de warmstartqaoafactory)": [[43, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state"]], "create_initial_variables() (m\u00e9todo de warmstartqaoafactory)": [[43, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables"]], "create_mixer() (m\u00e9todo de warmstartqaoafactory)": [[43, "qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer"]], "warmstartqaoaoptimizer (clase en qiskit_optimization.algorithms)": [[44, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer"]], "get_compatibility_msg() (m\u00e9todo de warmstartqaoaoptimizer)": [[44, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de warmstartqaoaoptimizer)": [[44, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.is_compatible"]], "min_eigen_solver (atributo de warmstartqaoaoptimizer)": [[44, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.min_eigen_solver"]], "solve() (m\u00e9todo de warmstartqaoaoptimizer)": [[44, "qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve"]], "encodingcommutationverifier (clase en qiskit_optimization.algorithms.qrao)": [[45, "qiskit_optimization.algorithms.qrao.EncodingCommutationVerifier"]], "magicrounding (clase en qiskit_optimization.algorithms.qrao)": [[46, "qiskit_optimization.algorithms.qrao.MagicRounding"]], "basis_sampling (atributo de magicrounding)": [[46, "qiskit_optimization.algorithms.qrao.MagicRounding.basis_sampling"]], "round() (m\u00e9todo de magicrounding)": [[46, "qiskit_optimization.algorithms.qrao.MagicRounding.round"]], "sampler (atributo de magicrounding)": [[46, "qiskit_optimization.algorithms.qrao.MagicRounding.sampler"]], "quantumrandomaccessencoding (clase en qiskit_optimization.algorithms.qrao)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding"]], "compression_ratio (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.compression_ratio"]], "encode() (m\u00e9todo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.encode"]], "freeze() (m\u00e9todo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.freeze"]], "frozen (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.frozen"]], "max_vars_per_qubit (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.max_vars_per_qubit"]], "minimum_recovery_probability (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.minimum_recovery_probability"]], "num_qubits (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.num_qubits"]], "num_vars (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.num_vars"]], "offset (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.offset"]], "problem (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.problem"]], "q2vars (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.q2vars"]], "qubit_op (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.qubit_op"]], "state_preparation_circuit() (m\u00e9todo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.state_preparation_circuit"]], "var2op (atributo de quantumrandomaccessencoding)": [[47, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessEncoding.var2op"]], "quantumrandomaccessoptimizationresult (clase en qiskit_optimization.algorithms.qrao)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult"]], "encoding (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.encoding"]], "fval (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.fval"]], "get_correlations() (m\u00e9todo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.get_correlations"]], "prettyprint() (m\u00e9todo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.prettyprint"]], "raw_results (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.raw_results"]], "relaxed_fval (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.relaxed_fval"]], "relaxed_result (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.relaxed_result"]], "rounding_result (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.rounding_result"]], "samples (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.samples"]], "status (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.status"]], "variable_names (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variable_names"]], "variables (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variables"]], "variables_dict (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.variables_dict"]], "x (atributo de quantumrandomaccessoptimizationresult)": [[48, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizationResult.x"]], "quantumrandomaccessoptimizer (clase en qiskit_optimization.algorithms.qrao)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer"]], "get_compatibility_msg() (m\u00e9todo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.get_compatibility_msg"]], "is_compatible() (m\u00e9todo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.is_compatible"]], "max_vars_per_qubit (atributo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.max_vars_per_qubit"]], "min_eigen_solver (atributo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.min_eigen_solver"]], "process_result() (m\u00e9todo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.process_result"]], "rounding_scheme (atributo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.rounding_scheme"]], "solve() (m\u00e9todo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.solve"]], "solve_relaxed() (m\u00e9todo de quantumrandomaccessoptimizer)": [[49, "qiskit_optimization.algorithms.qrao.QuantumRandomAccessOptimizer.solve_relaxed"]], "roundingcontext (clase en qiskit_optimization.algorithms.qrao)": [[50, "qiskit_optimization.algorithms.qrao.RoundingContext"]], "circuit (atributo de roundingcontext)": [[50, "qiskit_optimization.algorithms.qrao.RoundingContext.circuit"]], "encoding (atributo de roundingcontext)": [[50, "qiskit_optimization.algorithms.qrao.RoundingContext.encoding"]], "expectation_values (atributo de roundingcontext)": [[50, "qiskit_optimization.algorithms.qrao.RoundingContext.expectation_values"]], "roundingresult (clase en qiskit_optimization.algorithms.qrao)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult"]], "bases (atributo de roundingresult)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult.bases"]], "basis_counts (atributo de roundingresult)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult.basis_counts"]], "basis_shots (atributo de roundingresult)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult.basis_shots"]], "expectation_values (atributo de roundingresult)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult.expectation_values"]], "samples (atributo de roundingresult)": [[51, "qiskit_optimization.algorithms.qrao.RoundingResult.samples"]], "roundingscheme (clase en qiskit_optimization.algorithms.qrao)": [[52, "qiskit_optimization.algorithms.qrao.RoundingScheme"]], "round() (m\u00e9todo de roundingscheme)": [[52, "qiskit_optimization.algorithms.qrao.RoundingScheme.round"]], "semideterministicrounding (clase en qiskit_optimization.algorithms.qrao)": [[53, "qiskit_optimization.algorithms.qrao.SemideterministicRounding"]], "round() (m\u00e9todo de semideterministicrounding)": [[53, "qiskit_optimization.algorithms.qrao.SemideterministicRounding.round"]], "binpacking (clase en qiskit_optimization.applications)": [[54, "qiskit_optimization.applications.BinPacking"]], "get_figure() (m\u00e9todo de binpacking)": [[54, "qiskit_optimization.applications.BinPacking.get_figure"]], "interpret() (m\u00e9todo de binpacking)": [[54, "qiskit_optimization.applications.BinPacking.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de binpacking)": [[54, "qiskit_optimization.applications.BinPacking.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de binpacking)": [[54, "qiskit_optimization.applications.BinPacking.to_quadratic_program"]], "clique (clase en qiskit_optimization.applications)": [[55, "qiskit_optimization.applications.Clique"]], "draw() (m\u00e9todo de clique)": [[55, "qiskit_optimization.applications.Clique.draw"]], "graph (atributo de clique)": [[55, "qiskit_optimization.applications.Clique.graph"]], "interpret() (m\u00e9todo de clique)": [[55, "qiskit_optimization.applications.Clique.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de clique)": [[55, "qiskit_optimization.applications.Clique.sample_most_likely"]], "size (atributo de clique)": [[55, "qiskit_optimization.applications.Clique.size"]], "to_quadratic_program() (m\u00e9todo de clique)": [[55, "qiskit_optimization.applications.Clique.to_quadratic_program"]], "exactcover (clase en qiskit_optimization.applications)": [[56, "qiskit_optimization.applications.ExactCover"]], "interpret() (m\u00e9todo de exactcover)": [[56, "qiskit_optimization.applications.ExactCover.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de exactcover)": [[56, "qiskit_optimization.applications.ExactCover.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de exactcover)": [[56, "qiskit_optimization.applications.ExactCover.to_quadratic_program"]], "graphoptimizationapplication (clase en qiskit_optimization.applications)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication"]], "draw() (m\u00e9todo de graphoptimizationapplication)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication.draw"]], "graph (atributo de graphoptimizationapplication)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication.graph"]], "interpret() (m\u00e9todo de graphoptimizationapplication)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de graphoptimizationapplication)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de graphoptimizationapplication)": [[57, "qiskit_optimization.applications.GraphOptimizationApplication.to_quadratic_program"]], "graphpartition (clase en qiskit_optimization.applications)": [[58, "qiskit_optimization.applications.GraphPartition"]], "draw() (m\u00e9todo de graphpartition)": [[58, "qiskit_optimization.applications.GraphPartition.draw"]], "graph (atributo de graphpartition)": [[58, "qiskit_optimization.applications.GraphPartition.graph"]], "interpret() (m\u00e9todo de graphpartition)": [[58, "qiskit_optimization.applications.GraphPartition.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de graphpartition)": [[58, "qiskit_optimization.applications.GraphPartition.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de graphpartition)": [[58, "qiskit_optimization.applications.GraphPartition.to_quadratic_program"]], "knapsack (clase en qiskit_optimization.applications)": [[59, "qiskit_optimization.applications.Knapsack"]], "interpret() (m\u00e9todo de knapsack)": [[59, "qiskit_optimization.applications.Knapsack.interpret"]], "max_weight (atributo de knapsack)": [[59, "qiskit_optimization.applications.Knapsack.max_weight"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de knapsack)": [[59, "qiskit_optimization.applications.Knapsack.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de knapsack)": [[59, "qiskit_optimization.applications.Knapsack.to_quadratic_program"]], "maxcut (clase en qiskit_optimization.applications)": [[60, "qiskit_optimization.applications.Maxcut"]], "draw() (m\u00e9todo de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.draw"]], "get_gset_result() (m\u00e9todo est\u00e1tico de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.get_gset_result"]], "graph (atributo de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.graph"]], "interpret() (m\u00e9todo de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.interpret"]], "parse_gset_format() (m\u00e9todo est\u00e1tico de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.parse_gset_format"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de maxcut)": [[60, "qiskit_optimization.applications.Maxcut.to_quadratic_program"]], "numberpartition (clase en qiskit_optimization.applications)": [[61, "qiskit_optimization.applications.NumberPartition"]], "interpret() (m\u00e9todo de numberpartition)": [[61, "qiskit_optimization.applications.NumberPartition.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de numberpartition)": [[61, "qiskit_optimization.applications.NumberPartition.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de numberpartition)": [[61, "qiskit_optimization.applications.NumberPartition.to_quadratic_program"]], "optimizationapplication (clase en qiskit_optimization.applications)": [[62, "qiskit_optimization.applications.OptimizationApplication"]], "interpret() (m\u00e9todo de optimizationapplication)": [[62, "qiskit_optimization.applications.OptimizationApplication.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de optimizationapplication)": [[62, "qiskit_optimization.applications.OptimizationApplication.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de optimizationapplication)": [[62, "qiskit_optimization.applications.OptimizationApplication.to_quadratic_program"]], "skmodel (clase en qiskit_optimization.applications)": [[63, "qiskit_optimization.applications.SKModel"]], "disorder() (m\u00e9todo de skmodel)": [[63, "qiskit_optimization.applications.SKModel.disorder"]], "graph (atributo de skmodel)": [[63, "qiskit_optimization.applications.SKModel.graph"]], "interpret() (m\u00e9todo de skmodel)": [[63, "qiskit_optimization.applications.SKModel.interpret"]], "num_sites (atributo de skmodel)": [[63, "qiskit_optimization.applications.SKModel.num_sites"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de skmodel)": [[63, "qiskit_optimization.applications.SKModel.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de skmodel)": [[63, "qiskit_optimization.applications.SKModel.to_quadratic_program"]], "setpacking (clase en qiskit_optimization.applications)": [[64, "qiskit_optimization.applications.SetPacking"]], "interpret() (m\u00e9todo de setpacking)": [[64, "qiskit_optimization.applications.SetPacking.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de setpacking)": [[64, "qiskit_optimization.applications.SetPacking.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de setpacking)": [[64, "qiskit_optimization.applications.SetPacking.to_quadratic_program"]], "stableset (clase en qiskit_optimization.applications)": [[65, "qiskit_optimization.applications.StableSet"]], "draw() (m\u00e9todo de stableset)": [[65, "qiskit_optimization.applications.StableSet.draw"]], "graph (atributo de stableset)": [[65, "qiskit_optimization.applications.StableSet.graph"]], "interpret() (m\u00e9todo de stableset)": [[65, "qiskit_optimization.applications.StableSet.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de stableset)": [[65, "qiskit_optimization.applications.StableSet.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de stableset)": [[65, "qiskit_optimization.applications.StableSet.to_quadratic_program"]], "tsp (clase en qiskit_optimization.applications)": [[66, "qiskit_optimization.applications.Tsp"]], "create_random_instance() (m\u00e9todo est\u00e1tico de tsp)": [[66, "qiskit_optimization.applications.Tsp.create_random_instance"]], "draw() (m\u00e9todo de tsp)": [[66, "qiskit_optimization.applications.Tsp.draw"]], "graph (atributo de tsp)": [[66, "qiskit_optimization.applications.Tsp.graph"]], "interpret() (m\u00e9todo de tsp)": [[66, "qiskit_optimization.applications.Tsp.interpret"]], "parse_tsplib_format() (m\u00e9todo est\u00e1tico de tsp)": [[66, "qiskit_optimization.applications.Tsp.parse_tsplib_format"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de tsp)": [[66, "qiskit_optimization.applications.Tsp.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de tsp)": [[66, "qiskit_optimization.applications.Tsp.to_quadratic_program"]], "tsp_value() (m\u00e9todo est\u00e1tico de tsp)": [[66, "qiskit_optimization.applications.Tsp.tsp_value"]], "vehiclerouting (clase en qiskit_optimization.applications)": [[67, "qiskit_optimization.applications.VehicleRouting"]], "create_random_instance() (m\u00e9todo est\u00e1tico de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.create_random_instance"]], "depot (atributo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.depot"]], "draw() (m\u00e9todo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.draw"]], "graph (atributo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.graph"]], "interpret() (m\u00e9todo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.interpret"]], "num_vehicles (atributo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.num_vehicles"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de vehiclerouting)": [[67, "qiskit_optimization.applications.VehicleRouting.to_quadratic_program"]], "vertexcover (clase en qiskit_optimization.applications)": [[68, "qiskit_optimization.applications.VertexCover"]], "draw() (m\u00e9todo de vertexcover)": [[68, "qiskit_optimization.applications.VertexCover.draw"]], "graph (atributo de vertexcover)": [[68, "qiskit_optimization.applications.VertexCover.graph"]], "interpret() (m\u00e9todo de vertexcover)": [[68, "qiskit_optimization.applications.VertexCover.interpret"]], "sample_most_likely() (m\u00e9todo est\u00e1tico de vertexcover)": [[68, "qiskit_optimization.applications.VertexCover.sample_most_likely"]], "to_quadratic_program() (m\u00e9todo de vertexcover)": [[68, "qiskit_optimization.applications.VertexCover.to_quadratic_program"]], "inequalitytoequality (clase en qiskit_optimization.converters)": [[69, "qiskit_optimization.converters.InequalityToEquality"]], "convert() (m\u00e9todo de inequalitytoequality)": [[69, "qiskit_optimization.converters.InequalityToEquality.convert"]], "interpret() (m\u00e9todo de inequalitytoequality)": [[69, "qiskit_optimization.converters.InequalityToEquality.interpret"]], "mode (atributo de inequalitytoequality)": [[69, "qiskit_optimization.converters.InequalityToEquality.mode"]], "integertobinary (clase en qiskit_optimization.converters)": [[70, "qiskit_optimization.converters.IntegerToBinary"]], "convert() (m\u00e9todo de integertobinary)": [[70, "qiskit_optimization.converters.IntegerToBinary.convert"]], "interpret() (m\u00e9todo de integertobinary)": [[70, "qiskit_optimization.converters.IntegerToBinary.interpret"]], "linearequalitytopenalty (clase en qiskit_optimization.converters)": [[71, "qiskit_optimization.converters.LinearEqualityToPenalty"]], "convert() (m\u00e9todo de linearequalitytopenalty)": [[71, "qiskit_optimization.converters.LinearEqualityToPenalty.convert"]], "interpret() (m\u00e9todo de linearequalitytopenalty)": [[71, "qiskit_optimization.converters.LinearEqualityToPenalty.interpret"]], "penalty (atributo de linearequalitytopenalty)": [[71, "qiskit_optimization.converters.LinearEqualityToPenalty.penalty"]], "linearinequalitytopenalty (clase en qiskit_optimization.converters)": [[72, "qiskit_optimization.converters.LinearInequalityToPenalty"]], "convert() (m\u00e9todo de linearinequalitytopenalty)": [[72, "qiskit_optimization.converters.LinearInequalityToPenalty.convert"]], "interpret() (m\u00e9todo de linearinequalitytopenalty)": [[72, "qiskit_optimization.converters.LinearInequalityToPenalty.interpret"]], "penalty (atributo de linearinequalitytopenalty)": [[72, "qiskit_optimization.converters.LinearInequalityToPenalty.penalty"]], "maximizetominimize (clase en qiskit_optimization.converters)": [[73, "qiskit_optimization.converters.MaximizeToMinimize"]], "convert() (m\u00e9todo de maximizetominimize)": [[73, "qiskit_optimization.converters.MaximizeToMinimize.convert"]], "interpret() (m\u00e9todo de maximizetominimize)": [[73, "qiskit_optimization.converters.MaximizeToMinimize.interpret"]], "minimizetomaximize (clase en qiskit_optimization.converters)": [[74, "qiskit_optimization.converters.MinimizeToMaximize"]], "convert() (m\u00e9todo de minimizetomaximize)": [[74, "qiskit_optimization.converters.MinimizeToMaximize.convert"]], "interpret() (m\u00e9todo de minimizetomaximize)": [[74, "qiskit_optimization.converters.MinimizeToMaximize.interpret"]], "quadraticprogramconverter (clase en qiskit_optimization.converters)": [[75, "qiskit_optimization.converters.QuadraticProgramConverter"]], "convert() (m\u00e9todo de quadraticprogramconverter)": [[75, "qiskit_optimization.converters.QuadraticProgramConverter.convert"]], "interpret() (m\u00e9todo de quadraticprogramconverter)": [[75, "qiskit_optimization.converters.QuadraticProgramConverter.interpret"]], "quadraticprogramtoqubo (clase en qiskit_optimization.converters)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo"]], "convert() (m\u00e9todo de quadraticprogramtoqubo)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo.convert"]], "get_compatibility_msg() (m\u00e9todo est\u00e1tico de quadraticprogramtoqubo)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg"]], "interpret() (m\u00e9todo de quadraticprogramtoqubo)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo.interpret"]], "is_compatible() (m\u00e9todo de quadraticprogramtoqubo)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible"]], "penalty (atributo de quadraticprogramtoqubo)": [[76, "qiskit_optimization.converters.QuadraticProgramToQubo.penalty"]], "infinity (en el m\u00f3dulo qiskit_optimization.infinity)": [[77, "qiskit_optimization.infinity.INFINITY"]], "constraint (clase en qiskit_optimization.problems)": [[78, "qiskit_optimization.problems.Constraint"]], "evaluate() (m\u00e9todo de constraint)": [[78, "qiskit_optimization.problems.Constraint.evaluate"]], "name (atributo de constraint)": [[78, "qiskit_optimization.problems.Constraint.name"]], "quadratic_program (atributo de constraint)": [[78, "qiskit_optimization.problems.Constraint.quadratic_program"]], "rhs (atributo de constraint)": [[78, "qiskit_optimization.problems.Constraint.rhs"]], "sense (atributo de constraint)": [[78, "qiskit_optimization.problems.Constraint.sense"]], "linearconstraint (clase en qiskit_optimization.problems)": [[79, "qiskit_optimization.problems.LinearConstraint"]], "evaluate() (m\u00e9todo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.evaluate"]], "linear (atributo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.linear"]], "name (atributo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.name"]], "quadratic_program (atributo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.quadratic_program"]], "rhs (atributo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.rhs"]], "sense (atributo de linearconstraint)": [[79, "qiskit_optimization.problems.LinearConstraint.sense"]], "linearexpression (clase en qiskit_optimization.problems)": [[80, "qiskit_optimization.problems.LinearExpression"]], "bounds (atributo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.bounds"]], "coefficients (atributo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.coefficients"]], "evaluate() (m\u00e9todo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.evaluate"]], "evaluate_gradient() (m\u00e9todo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.evaluate_gradient"]], "quadratic_program (atributo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.quadratic_program"]], "to_array() (m\u00e9todo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.to_array"]], "to_dict() (m\u00e9todo de linearexpression)": [[80, "qiskit_optimization.problems.LinearExpression.to_dict"]], "quadraticconstraint (clase en qiskit_optimization.problems)": [[81, "qiskit_optimization.problems.QuadraticConstraint"]], "evaluate() (m\u00e9todo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.evaluate"]], "linear (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.linear"]], "name (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.name"]], "quadratic (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.quadratic"]], "quadratic_program (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.quadratic_program"]], "rhs (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.rhs"]], "sense (atributo de quadraticconstraint)": [[81, "qiskit_optimization.problems.QuadraticConstraint.sense"]], "quadraticexpression (clase en qiskit_optimization.problems)": [[82, "qiskit_optimization.problems.QuadraticExpression"]], "bounds (atributo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.bounds"]], "coefficients (atributo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.coefficients"]], "evaluate() (m\u00e9todo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.evaluate"]], "evaluate_gradient() (m\u00e9todo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.evaluate_gradient"]], "quadratic_program (atributo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.quadratic_program"]], "to_array() (m\u00e9todo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.to_array"]], "to_dict() (m\u00e9todo de quadraticexpression)": [[82, "qiskit_optimization.problems.QuadraticExpression.to_dict"]], "quadraticobjective (clase en qiskit_optimization.problems)": [[83, "qiskit_optimization.problems.QuadraticObjective"]], "constant (atributo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.constant"]], "evaluate() (m\u00e9todo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.evaluate"]], "evaluate_gradient() (m\u00e9todo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.evaluate_gradient"]], "linear (atributo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.linear"]], "quadratic (atributo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.quadratic"]], "quadratic_program (atributo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.quadratic_program"]], "sense (atributo de quadraticobjective)": [[83, "qiskit_optimization.problems.QuadraticObjective.sense"]], "quadraticprogramelement (clase en qiskit_optimization.problems)": [[84, "qiskit_optimization.problems.QuadraticProgramElement"]], "quadratic_program (atributo de quadraticprogramelement)": [[84, "qiskit_optimization.problems.QuadraticProgramElement.quadratic_program"]], "variable (clase en qiskit_optimization.problems)": [[85, "qiskit_optimization.problems.Variable"]], "as_tuple() (m\u00e9todo de variable)": [[85, "qiskit_optimization.problems.Variable.as_tuple"]], "lowerbound (atributo de variable)": [[85, "qiskit_optimization.problems.Variable.lowerbound"]], "name (atributo de variable)": [[85, "qiskit_optimization.problems.Variable.name"]], "quadratic_program (atributo de variable)": [[85, "qiskit_optimization.problems.Variable.quadratic_program"]], "upperbound (atributo de variable)": [[85, "qiskit_optimization.problems.Variable.upperbound"]], "vartype (atributo de variable)": [[85, "qiskit_optimization.problems.Variable.vartype"]], "from_docplex_mp() (en el m\u00f3dulo qiskit_optimization.translators)": [[86, "qiskit_optimization.translators.from_docplex_mp"]], "from_gurobipy() (en el m\u00f3dulo qiskit_optimization.translators)": [[87, "qiskit_optimization.translators.from_gurobipy"]], "from_ising() (en el m\u00f3dulo qiskit_optimization.translators)": [[88, "qiskit_optimization.translators.from_ising"]], "to_docplex_mp() (en el m\u00f3dulo qiskit_optimization.translators)": [[89, "qiskit_optimization.translators.to_docplex_mp"]], "to_gurobipy() (en el m\u00f3dulo qiskit_optimization.translators)": [[90, "qiskit_optimization.translators.to_gurobipy"]], "to_ising() (en el m\u00f3dulo qiskit_optimization.translators)": [[91, "qiskit_optimization.translators.to_ising"]]}})